{"version":3,"file":"scenes-D5GcjUem.js","sources":["../../src/scenes/GameScene.ts"],"sourcesContent":["/**\n * 主遊戲場景 - Vite + Phaser 3 版本\n * 基於記憶科學的飛機碰撞英語學習遊戲\n * 整合完整的遊戲邏輯和管理器系統\n */\n\nimport Phaser from 'phaser';\nimport { GameConfig, GameState, GEPTWord, ParentMessage } from '../types/game';\nimport { GEPTManager, GEPTLevel } from '../managers/GEPTManager';\nimport { CollisionDetectionSystem, CollisionEvent } from '../managers/CollisionDetectionSystem';\nimport { MemoryEnhancementEngine, LearningEvent } from '../managers/MemoryEnhancementEngine';\n\nexport default class GameScene extends Phaser.Scene {\n  // 遊戲配置和狀態\n  private gameConfig!: GameConfig;\n  private gameState: GameState = {\n    isPlaying: false,\n    isPaused: false,\n    currentScore: 0,\n    currentHealth: 100,\n    wordsLearned: 0,\n    accuracy: 0\n  };\n\n  // 遊戲物件\n  private player!: Phaser.Physics.Arcade.Image;\n  private clouds!: Phaser.Physics.Arcade.Group;\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  private backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\n\n  // UI 元素\n  private scoreText!: Phaser.GameObjects.Text;\n  private healthText!: Phaser.GameObjects.Text;\n  private targetWordText!: Phaser.GameObjects.Text;\n  private accuracyText!: Phaser.GameObjects.Text;\n  private wordsLearnedText!: Phaser.GameObjects.Text;\n\n  // 管理器系統\n  private geptManager!: GEPTManager;\n  private collisionSystem!: CollisionDetectionSystem;\n  private memoryEngine!: MemoryEnhancementEngine;\n\n  // 遊戲邏輯\n  private cloudSpawnTimer!: Phaser.Time.TimerEvent;\n  private currentTargetWord?: GEPTWord;\n  private targetWordSetTime: number = 0;\n\n  // 遊戲統計\n  private totalCollisions: number = 0;\n  private correctCollisions: number = 0;\n\n  constructor() {\n    super({ key: 'GameScene' });\n  }\n\n  init() {\n    console.log('🎮 初始化遊戲場景');\n\n    // 從註冊表獲取遊戲配置\n    this.gameConfig = this.registry.get('gameConfig') || {\n      geptLevel: 'elementary',\n      enableSound: true,\n      enableHapticFeedback: true,\n      difficulty: 'medium',\n      gameMode: 'practice'\n    };\n\n    console.log('📋 遊戲配置:', this.gameConfig);\n\n    // 初始化管理器系統\n    this.initializeManagers();\n  }\n\n  /**\n   * 初始化管理器系統\n   */\n  private initializeManagers(): void {\n    // 初始化 GEPT 管理器\n    this.geptManager = new GEPTManager();\n    this.geptManager.setLevel(this.gameConfig.geptLevel);\n\n    // 初始化記憶增強引擎\n    this.memoryEngine = new MemoryEnhancementEngine();\n\n    // 初始化碰撞檢測系統\n    this.collisionSystem = new CollisionDetectionSystem(\n      this,\n      this.gameConfig.geptLevel,\n      {\n        enableParticles: true,\n        enableScreenShake: true,\n        enableSoundEffects: this.gameConfig.enableSound,\n        enableVisualFeedback: true,\n        particleIntensity: 'medium',\n        soundVolume: 0.7\n      }\n    );\n\n    console.log('🔧 管理器初始化完成');\n  }\n\n  preload() {\n    console.log('🎨 載入遊戲資源');\n\n    // 載入月亮主題背景圖片\n    this.loadMoonBackground();\n\n    // 修復紋理生成問題 - 使用正確的方法\n    // 玩家飛機 - 藍色三角形\n    const planeGraphics = this.add.graphics();\n    planeGraphics.fillStyle(0x0066ff);\n    planeGraphics.fillTriangle(16, 0, 0, 32, 32, 32);\n    planeGraphics.generateTexture('player-plane', 32, 32);\n    planeGraphics.destroy();\n\n    // 詞彙雲朵 - 白色橢圓\n    const cloudGraphics = this.add.graphics();\n    cloudGraphics.fillStyle(0xffffff);\n    cloudGraphics.fillEllipse(32, 16, 60, 28);\n    cloudGraphics.lineStyle(2, 0x888888);\n    cloudGraphics.strokeEllipse(32, 16, 60, 28);\n    cloudGraphics.generateTexture('cloud-word', 64, 32);\n    cloudGraphics.destroy();\n\n    // 背景星星 - 小白點\n    const starGraphics = this.add.graphics();\n    starGraphics.fillStyle(0xffffff);\n    starGraphics.fillCircle(2, 2, 2);\n    starGraphics.generateTexture('star', 4, 4);\n    starGraphics.destroy();\n\n    console.log('✅ 遊戲資源載入完成 - 包含月亮背景');\n  }\n\n  /**\n   * 載入月亮主題背景圖片\n   */\n  private loadMoonBackground(): void {\n    console.log('🌙 載入月亮主題背景');\n\n    // 嘗試載入背景圖片，如果不存在則使用備用方案\n    try {\n      // 背景層 1 - 最遠的背景（天空/星空）\n      this.load.image('moon-bg-1', '/assets/backgrounds/moon/layer-1.png');\n\n      // 背景層 2 - 中景（山脈/地形）\n      this.load.image('moon-bg-2', '/assets/backgrounds/moon/layer-2.png');\n\n      // 背景層 3 - 近景（樹木/建築）\n      this.load.image('moon-bg-3', '/assets/backgrounds/moon/layer-3.png');\n\n      // 月亮\n      this.load.image('moon', '/assets/backgrounds/moon/moon.png');\n\n      console.log('🌙 月亮背景圖片載入排程完成');\n    } catch (error) {\n      console.warn('⚠️ 月亮背景載入失敗，將使用備用背景:', error);\n    }\n  }\n\n  create() {\n    console.log('🏗️ 創建遊戲場景');\n\n    // 創建視差背景\n    this.createParallaxBackground();\n\n    // 創建玩家飛機\n    this.createPlayer();\n\n    // 創建雲朵群組\n    this.createClouds();\n\n    // 創建完整的 UI\n    this.createGameHUD();\n\n    // 設置輸入控制\n    this.setupInput();\n\n    // 設置物理碰撞\n    this.setupPhysics();\n\n    // 設置目標詞彙\n    this.setRandomTargetWord();\n\n    // 開始雲朵生成\n    this.startCloudSpawning();\n\n    console.log('✅ 遊戲場景創建完成');\n\n    // 自動開始遊戲\n    this.startGame();\n  }\n\n  /**\n   * 創建月亮主題視差背景\n   */\n  private createParallaxBackground(): void {\n    console.log('� 創建月亮主題視差背景');\n\n    // 創建基礎背景色（深夜藍色）\n    const bgRect = this.add.rectangle(400, 300, 800, 600, 0x0a0a2e);\n    bgRect.setDepth(-20);\n\n    // 嘗試使用月亮主題背景，如果載入失敗則使用備用方案\n    this.createMoonBackgroundLayers();\n\n    // 創建星空背景\n    this.createStarField();\n\n    console.log('🌙 月亮主題視差背景創建完成');\n  }\n\n  /**\n   * 創建月亮主題背景層\n   */\n  private createMoonBackgroundLayers(): void {\n    const backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\n\n    // 檢查月亮背景圖片是否載入成功\n    const hasMoonBg1 = this.textures.exists('moon-bg-1');\n    const hasMoonBg2 = this.textures.exists('moon-bg-2');\n    const hasMoonBg3 = this.textures.exists('moon-bg-3');\n    const hasMoon = this.textures.exists('moon');\n\n    if (hasMoonBg1 || hasMoonBg2 || hasMoonBg3) {\n      console.log('🌙 使用月亮主題背景圖片');\n\n      // 背景層 1 - 最遠的背景（天空）\n      if (hasMoonBg1) {\n        const layer1 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-1');\n        layer1.setOrigin(0, 0);\n        layer1.setDepth(-15);\n        backgroundLayers.push(layer1);\n      }\n\n      // 月亮\n      if (hasMoon) {\n        const moon = this.add.image(650, 150, 'moon');\n        moon.setDepth(-14);\n        moon.setScale(0.8);\n        moon.setAlpha(0.9);\n      }\n\n      // 背景層 2 - 中景（山脈）\n      if (hasMoonBg2) {\n        const layer2 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-2');\n        layer2.setOrigin(0, 0);\n        layer2.setDepth(-13);\n        backgroundLayers.push(layer2);\n      }\n\n      // 背景層 3 - 近景（樹木）\n      if (hasMoonBg3) {\n        const layer3 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-3');\n        layer3.setOrigin(0, 0);\n        layer3.setDepth(-12);\n        backgroundLayers.push(layer3);\n      }\n\n    } else {\n      console.log('🌌 使用備用漸層背景');\n\n      // 備用方案：創建漸層背景\n      const layer1 = this.add.graphics();\n      layer1.fillGradientStyle(0x0a0a2e, 0x0a0a2e, 0x1a1a4e, 0x1a1a4e);\n      layer1.fillRect(0, 0, 800, 600);\n      layer1.generateTexture('fallback-bg-1', 800, 600);\n      layer1.destroy();\n\n      const layer2 = this.add.graphics();\n      layer2.fillGradientStyle(0x1a1a4e, 0x1a1a4e, 0x2a2a6e, 0x2a2a6e);\n      layer2.fillRect(0, 0, 800, 600);\n      layer2.generateTexture('fallback-bg-2', 800, 600);\n      layer2.destroy();\n\n      const fallbackLayer1 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-1');\n      fallbackLayer1.setOrigin(0, 0);\n      fallbackLayer1.setDepth(-15);\n      fallbackLayer1.setAlpha(0.7);\n      backgroundLayers.push(fallbackLayer1);\n\n      const fallbackLayer2 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-2');\n      fallbackLayer2.setOrigin(0, 0);\n      fallbackLayer2.setDepth(-13);\n      fallbackLayer2.setAlpha(0.5);\n      backgroundLayers.push(fallbackLayer2);\n    }\n\n    this.backgroundLayers = backgroundLayers;\n  }\n\n  /**\n   * 創建星空背景\n   */\n  private createStarField(): void {\n    console.log('⭐ 創建星空背景');\n\n    // 創建不同大小的星星\n    for (let i = 0; i < 80; i++) {\n      const x = Phaser.Math.Between(0, 800);\n      const y = Phaser.Math.Between(0, 400); // 星星主要在上半部分\n      const star = this.add.image(x, y, 'star');\n\n      const scale = Phaser.Math.FloatBetween(0.3, 1.2);\n      const alpha = Phaser.Math.FloatBetween(0.4, 1);\n\n      star.setScale(scale);\n      star.setAlpha(alpha);\n      star.setDepth(-11);\n\n      // 添加閃爍效果\n      this.tweens.add({\n        targets: star,\n        alpha: alpha * 0.3,\n        duration: Phaser.Math.Between(2000, 4000),\n        yoyo: true,\n        repeat: -1,\n        ease: 'Sine.easeInOut'\n      });\n    }\n  }\n\n  /**\n   * 創建玩家飛機\n   */\n  private createPlayer(): void {\n    console.log('✈️ 創建玩家飛機 (修復版本)');\n\n    this.player = this.physics.add.image(100, 300, 'player-plane');\n    this.player.setCollideWorldBounds(true);\n    this.player.setScale(1.5);\n    this.player.setDepth(10); // 確保在前景\n    this.player.setAlpha(1); // 確保不透明\n    this.player.setVisible(true); // 確保可見\n\n    console.log('✈️ 玩家飛機創建完成:', {\n      x: this.player.x,\n      y: this.player.y,\n      visible: this.player.visible,\n      alpha: this.player.alpha,\n      depth: this.player.depth,\n      texture: this.player.texture.key\n    });\n  }\n\n  private createClouds() {\n    this.clouds = this.physics.add.group();\n    console.log('☁️ 創建雲朵群組');\n  }\n\n  /**\n   * 創建完整的遊戲 HUD\n   */\n  private createGameHUD(): void {\n    console.log('📊 創建遊戲 HUD (已擴展目標詞彙顯示)');\n\n    // 分數顯示\n    this.scoreText = this.add.text(16, 16, '分數: 0', {\n      fontSize: '24px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 生命值顯示\n    this.healthText = this.add.text(16, 50, '生命值: 100', {\n      fontSize: '20px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 準確率顯示\n    this.accuracyText = this.add.text(16, 84, '準確率: 0%', {\n      fontSize: '18px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 學習詞彙數顯示\n    this.wordsLearnedText = this.add.text(16, 118, '學習詞彙: 0', {\n      fontSize: '18px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 目標詞彙顯示 - 更大更明顯\n    this.targetWordText = this.add.text(400, 16, '目標: 載入中...', {\n      fontSize: '24px',\n      color: '#ffff00',\n      backgroundColor: '#000000',\n      padding: { x: 12, y: 8 },\n      fontStyle: 'bold'\n    }).setOrigin(0.5, 0).setDepth(100);\n\n    // GEPT 等級顯示\n    const geptLevelText = this.add.text(400, 50, `GEPT: ${this.gameConfig.geptLevel}`, {\n      fontSize: '16px',\n      color: '#00ff00',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setOrigin(0.5, 0).setDepth(100);\n  }\n\n  private setupInput() {\n    this.cursors = this.input.keyboard!.createCursorKeys();\n    \n    // WASD 控制\n    const wasd = this.input.keyboard!.addKeys('W,S,A,D');\n    (this as any).wasd = wasd;\n    \n    console.log('🎮 設置輸入控制');\n  }\n\n  /**\n   * 設置物理碰撞系統\n   */\n  private setupPhysics(): void {\n    console.log('⚡ 設置物理碰撞 (已移除子彈碰撞，修改玩家碰撞)');\n\n    // 玩家與雲朵碰撞 - 使用完整的碰撞檢測系統\n    this.physics.add.overlap(\n      this.player,\n      this.clouds,\n      this.handleAdvancedCollision,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * 設置隨機目標詞彙\n   */\n  private setRandomTargetWord(): void {\n    // 從 GEPT 管理器獲取詞彙\n    const randomWord = this.geptManager.getRandomWord();\n    this.currentTargetWord = randomWord || undefined;\n    this.gameState.currentTargetWord = this.currentTargetWord;\n    this.targetWordSetTime = Date.now();\n\n    if (this.targetWordText && this.currentTargetWord) {\n      this.targetWordText.setText(`目標: ${this.currentTargetWord.chinese} (${this.currentTargetWord.english})`);\n\n      // 更新碰撞檢測系統的目標詞彙\n      this.collisionSystem.setTargetWord(\n        this.currentTargetWord.english,\n        this.currentTargetWord.chinese\n      );\n\n      console.log('🎯 設置目標詞彙:', this.currentTargetWord.english);\n    }\n  }\n\n  private startCloudSpawning() {\n    this.cloudSpawnTimer = this.time.addEvent({\n      delay: 2000,\n      callback: this.spawnCloud,\n      callbackScope: this,\n      loop: true\n    });\n    console.log('☁️ 開始雲朵生成');\n  }\n\n  /**\n   * 生成詞彙雲朵 (修復版本)\n   */\n  private spawnCloud(): void {\n    if (!this.gameState.isPlaying) return;\n\n    // 從 GEPT 管理器獲取隨機詞彙\n    const word = this.geptManager.getRandomWord();\n    if (!word) return;\n\n    const x = 850;\n    const y = Phaser.Math.Between(100, 500);\n\n    const cloud = this.physics.add.image(x, y, 'cloud-word');\n    cloud.setVelocityX(-100);\n    cloud.setData('word', word);\n    cloud.setData('isTarget', word.english === this.currentTargetWord?.english);\n    cloud.setDepth(5); // 確保在前景\n    cloud.setAlpha(1); // 確保不透明\n    cloud.setVisible(true); // 確保可見\n\n    // 添加詞彙文字\n    const isTarget = word.english === this.currentTargetWord?.english;\n    const wordText = this.add.text(x, y, word.english, {\n      fontSize: '16px',\n      color: isTarget ? '#ff0000' : '#000000',\n      fontStyle: isTarget ? 'bold' : 'normal',\n      backgroundColor: isTarget ? '#ffff00' : '#ffffff',\n      padding: { x: 4, y: 2 }\n    }).setOrigin(0.5);\n\n    wordText.setDepth(6); // 文字在雲朵之上\n    wordText.setAlpha(1);\n    wordText.setVisible(true);\n\n    // 將文字綁定到雲朵\n    cloud.setData('wordText', wordText);\n\n    this.clouds.add(cloud);\n\n    console.log('☁️ 生成雲朵 (修復版本):', word.english, isTarget ? '(目標)' : '', {\n      cloudVisible: cloud.visible,\n      textVisible: wordText.visible,\n      cloudDepth: cloud.depth,\n      textDepth: wordText.depth\n    });\n  }\n\n  /**\n   * 處理高級碰撞檢測\n   */\n  private handleAdvancedCollision(player: any, cloud: any): void {\n    const word: GEPTWord = cloud.getData('word');\n    const isTarget: boolean = cloud.getData('isTarget');\n    const wordText = cloud.getData('wordText');\n\n    // 使用碰撞檢測系統處理碰撞\n    const collisionEvent = this.collisionSystem.handleCollision(player, cloud, word);\n\n    // 記錄學習事件到記憶增強引擎\n    const learningEvent: LearningEvent = {\n      wordId: word.id,\n      word: word.english,\n      timestamp: Date.now(),\n      responseTime: Date.now() - this.targetWordSetTime,\n      isCorrect: collisionEvent.type === 'correct',\n      attemptNumber: this.totalCollisions + 1,\n      contextData: {\n        targetWord: this.currentTargetWord?.english,\n        geptLevel: this.gameConfig.geptLevel,\n        gameMode: this.gameConfig.gameMode\n      }\n    };\n\n    this.memoryEngine.recordLearningEvent(learningEvent);\n\n    // 更新統計\n    this.totalCollisions++;\n    if (collisionEvent.type === 'correct') {\n      this.correctCollisions++;\n      this.gameState.currentScore += 10;\n      this.gameState.wordsLearned++;\n\n      // 設置新的目標詞彙\n      this.setRandomTargetWord();\n\n      console.log('✅ 正確碰撞:', word.english);\n    } else {\n      this.gameState.currentHealth -= 20;\n      console.log('❌ 錯誤碰撞:', word.english);\n\n      if (this.gameState.currentHealth <= 0) {\n        this.endGame();\n        return;\n      }\n    }\n\n    // 移除雲朵和文字\n    if (wordText) wordText.destroy();\n    cloud.destroy();\n\n    // 更新 UI 和統計\n    this.updateGameStats();\n    this.updateUI();\n\n    // 向父頁面發送更新\n    this.sendMessageToParent({\n      type: 'GAME_SCORE_UPDATE',\n      score: this.gameState.currentScore,\n      health: this.gameState.currentHealth\n    });\n  }\n\n  /**\n   * 更新遊戲統計\n   */\n  private updateGameStats(): void {\n    // 計算準確率\n    this.gameState.accuracy = this.totalCollisions > 0\n      ? Math.round((this.correctCollisions / this.totalCollisions) * 100)\n      : 0;\n  }\n\n  /**\n   * 更新 UI 顯示\n   */\n  private updateUI(): void {\n    this.scoreText.setText(`分數: ${this.gameState.currentScore}`);\n    this.healthText.setText(`生命值: ${this.gameState.currentHealth}`);\n    this.accuracyText.setText(`準確率: ${this.gameState.accuracy}%`);\n    this.wordsLearnedText.setText(`學習詞彙: ${this.gameState.wordsLearned}`);\n\n    console.log('📊 更新 HUD:', {\n      分數: this.gameState.currentScore,\n      生命值: this.gameState.currentHealth,\n      準確率: this.gameState.accuracy,\n      學習詞彙: this.gameState.wordsLearned\n    });\n  }\n\n  private startGame() {\n    this.gameState.isPlaying = true;\n    this.gameState.isPaused = false;\n    console.log('🚀 遊戲開始');\n    \n    this.sendMessageToParent({\n      type: 'GAME_STATE_CHANGE',\n      state: 'playing'\n    });\n  }\n\n  private endGame() {\n    this.gameState.isPlaying = false;\n    console.log('🏁 遊戲結束');\n    \n    // 停止雲朵生成\n    if (this.cloudSpawnTimer) {\n      this.cloudSpawnTimer.destroy();\n    }\n    \n    // 清除所有雲朵\n    this.clouds.clear(true, true);\n    \n    this.sendMessageToParent({\n      type: 'GAME_COMPLETE',\n      score: this.gameState.currentScore,\n      health: this.gameState.currentHealth\n    });\n  }\n\n  private sendMessageToParent(message: ParentMessage) {\n    if (window.parent !== window) {\n      window.parent.postMessage(message, '*');\n    }\n  }\n\n  update(_time: number, _delta: number): void {\n    if (!this.gameState.isPlaying || this.gameState.isPaused) return;\n\n    // 更新視差背景\n    this.updateParallaxBackground();\n\n    // 玩家移動控制\n    this.handlePlayerMovement();\n\n    // 清理超出邊界的物件\n    this.cleanupObjects();\n  }\n\n  /**\n   * 更新月亮主題視差背景\n   */\n  private updateParallaxBackground(): void {\n    // 移動背景層創造視差效果\n    this.backgroundLayers.forEach((layer, index) => {\n      // 不同層有不同的移動速度，創造深度感\n      const speed = (index + 1) * 0.3; // 減慢速度讓效果更自然\n      layer.tilePositionX += speed;\n    });\n\n    // 每隔一段時間輸出日誌（減少頻率）\n    if (Math.floor(Date.now() / 1000) % 10 === 0) {\n      console.log('� 更新月亮主題視差背景');\n    }\n  }\n\n  /**\n   * 處理玩家移動\n   */\n  private handlePlayerMovement(): void {\n    const speed = 250;\n    const wasd = (this as any).wasd;\n\n    if (this.cursors.left.isDown || wasd?.A.isDown) {\n      this.player.setVelocityX(-speed);\n    } else if (this.cursors.right.isDown || wasd?.D.isDown) {\n      this.player.setVelocityX(speed);\n    } else {\n      this.player.setVelocityX(0);\n    }\n\n    if (this.cursors.up.isDown || wasd?.W.isDown) {\n      this.player.setVelocityY(-speed);\n    } else if (this.cursors.down.isDown || wasd?.S.isDown) {\n      this.player.setVelocityY(speed);\n    } else {\n      this.player.setVelocityY(0);\n    }\n  }\n\n  /**\n   * 清理超出邊界的物件\n   */\n  private cleanupObjects(): void {\n    this.clouds.children.entries.forEach((cloud: any) => {\n      if (cloud.x < -100) {\n        const wordText = cloud.getData('wordText');\n        if (wordText) wordText.destroy();\n        cloud.destroy();\n      } else {\n        // 更新文字位置\n        const wordText = cloud.getData('wordText');\n        if (wordText) {\n          wordText.setPosition(cloud.x, cloud.y);\n        }\n      }\n    });\n  }\n}\n"],"names":["GameScene","Phaser","Scene","constructor","super","key","__publicField","this","isPlaying","isPaused","currentScore","currentHealth","wordsLearned","accuracy","init","console","log","gameConfig","registry","get","geptLevel","enableSound","enableHapticFeedback","difficulty","gameMode","initializeManagers","geptManager","GEPTManager","setLevel","memoryEngine","MemoryEnhancementEngine","collisionSystem","CollisionDetectionSystem","enableParticles","enableScreenShake","enableSoundEffects","enableVisualFeedback","particleIntensity","soundVolume","preload","loadMoonBackground","planeGraphics","add","graphics","fillStyle","fillTriangle","generateTexture","destroy","cloudGraphics","fillEllipse","lineStyle","strokeEllipse","starGraphics","fillCircle","load","image","error","warn","create","createParallaxBackground","createPlayer","createClouds","createGameHUD","setupInput","setupPhysics","setRandomTargetWord","startCloudSpawning","startGame","rectangle","setDepth","createMoonBackgroundLayers","createStarField","backgroundLayers","hasMoonBg1","textures","exists","hasMoonBg2","hasMoonBg3","hasMoon","layer1","tileSprite","setOrigin","push","moon","setScale","setAlpha","layer2","layer3","fillGradientStyle","fillRect","fallbackLayer1","fallbackLayer2","i","x","Math","Between","y","star","scale","FloatBetween","alpha","tweens","targets","duration","yoyo","repeat","ease","player","physics","setCollideWorldBounds","setVisible","visible","depth","texture","clouds","group","scoreText","text","fontSize","color","backgroundColor","padding","healthText","accuracyText","wordsLearnedText","targetWordText","fontStyle","cursors","input","keyboard","createCursorKeys","wasd","addKeys","overlap","handleAdvancedCollision","randomWord","getRandomWord","currentTargetWord","gameState","targetWordSetTime","Date","now","setText","chinese","english","setTargetWord","cloudSpawnTimer","time","addEvent","delay","callback","spawnCloud","callbackScope","loop","word","cloud","setVelocityX","setData","isTarget","wordText","cloudVisible","textVisible","cloudDepth","textDepth","getData","collisionEvent","handleCollision","learningEvent","wordId","id","timestamp","responseTime","isCorrect","type","attemptNumber","totalCollisions","contextData","targetWord","recordLearningEvent","correctCollisions","endGame","updateGameStats","updateUI","sendMessageToParent","score","health","round","state","clear","message","window","parent","postMessage","update","_time","_delta","updateParallaxBackground","handlePlayerMovement","cleanupObjects","forEach","layer","index","speed","tilePositionX","floor","left","isDown","A","right","D","up","W","setVelocityY","down","S","children","entries","setPosition"],"mappings":"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"}