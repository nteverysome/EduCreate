{"version":3,"file":"scenes-IflaBaD5.js","sources":["../../src/managers/BilingualManager.ts","../../src/managers/ChineseUIManager.ts","../../src/scenes/GameScene.ts"],"sourcesContent":["/**\n * BilingualManager - 中英文雙語管理系統\n * 基於 Task 1.5.1 需求分析設計\n * 整合 GEPTManager 提供完整的雙語功能\n */\n\nimport { GEPTManager, GEPTWord, GEPTLevel } from './GEPTManager';\n\nexport interface BilingualDisplayConfig {\n  position: 'top-center' | 'bottom-center' | 'floating';\n  style: {\n    fontSize: number;\n    fontFamily: string;\n    color: string;\n    backgroundColor: string;\n    padding: { x: number; y: number };\n    borderRadius: number;\n    border: string;\n  };\n  animation: {\n    fadeIn: { duration: number; ease: string };\n    fadeOut: { duration: number; ease: string };\n    bounce?: { amplitude: number; duration: number };\n  };\n}\n\nexport interface BilingualPromptState {\n  isVisible: boolean;\n  currentWord: GEPTWord | null;\n  displayMode: 'chinese-only' | 'english-only' | 'both';\n  lastUpdateTime: number;\n}\n\nexport interface AccessibilitySettings {\n  fontSize: 'small' | 'medium' | 'large' | 'extra-large';\n  contrast: 'normal' | 'high' | 'reverse';\n  enableVoice: boolean;\n  enableKeyboardNav: boolean;\n  screenReaderMode: boolean;\n}\n\n/**\n * 雙語管理器 - 核心雙語功能管理\n */\nexport class BilingualManager {\n  private scene: Phaser.Scene;\n  private geptManager: GEPTManager;\n  private promptContainer: Phaser.GameObjects.Container | null = null;\n  private chineseText: Phaser.GameObjects.Text | null = null;\n  private englishText: Phaser.GameObjects.Text | null = null;\n  private backgroundRect: Phaser.GameObjects.Rectangle | null = null;\n  \n  private config: BilingualDisplayConfig;\n  private state: BilingualPromptState;\n  private accessibilitySettings: AccessibilitySettings;\n  \n  // 快取系統\n  private wordCache: Map<string, GEPTWord> = new Map();\n  private translationCache: Map<string, string> = new Map();\n  \n  constructor(scene: Phaser.Scene, geptManager: GEPTManager) {\n    this.scene = scene;\n    this.geptManager = geptManager;\n    \n    // 初始化配置\n    this.config = this.getDefaultConfig();\n    this.state = this.getInitialState();\n    this.accessibilitySettings = this.getDefaultAccessibilitySettings();\n    \n    this.initializePromptUI();\n    console.log('🌐 BilingualManager 初始化完成');\n  }\n\n  /**\n   * 獲取默認顯示配置\n   */\n  private getDefaultConfig(): BilingualDisplayConfig {\n    return {\n      position: 'top-center',\n      style: {\n        fontSize: 24,\n        fontFamily: 'Microsoft YaHei, SimHei, Arial, sans-serif',\n        color: '#FFFFFF',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        padding: { x: 16, y: 8 },\n        borderRadius: 8,\n        border: '2px solid #FFD700'\n      },\n      animation: {\n        fadeIn: { duration: 300, ease: 'Power2.easeOut' },\n        fadeOut: { duration: 200, ease: 'Power2.easeIn' },\n        bounce: { amplitude: 10, duration: 500 }\n      }\n    };\n  }\n\n  /**\n   * 獲取初始狀態\n   */\n  private getInitialState(): BilingualPromptState {\n    return {\n      isVisible: false,\n      currentWord: null,\n      displayMode: 'chinese-only',\n      lastUpdateTime: 0\n    };\n  }\n\n  /**\n   * 獲取默認無障礙設置\n   */\n  private getDefaultAccessibilitySettings(): AccessibilitySettings {\n    return {\n      fontSize: 'medium',\n      contrast: 'normal',\n      enableVoice: false,\n      enableKeyboardNav: true,\n      screenReaderMode: false\n    };\n  }\n\n  /**\n   * 初始化提示 UI\n   */\n  private initializePromptUI(): void {\n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n    \n    // 創建容器\n    this.promptContainer = this.scene.add.container(0, 0);\n    this.promptContainer.setDepth(1000); // 確保在最上層\n    \n    // 創建背景\n    this.backgroundRect = this.scene.add.rectangle(\n      0, 0, 200, 60,\n      0x000000, 0.8\n    );\n    this.backgroundRect.setStrokeStyle(2, 0xFFD700);\n    \n    // 創建中文文字\n    this.chineseText = this.scene.add.text(0, -10, '', {\n      fontSize: `${this.config.style.fontSize}px`,\n      fontFamily: this.config.style.fontFamily,\n      color: this.config.style.color,\n      align: 'center',\n      fontStyle: 'bold'\n    });\n    this.chineseText.setOrigin(0.5);\n    \n    // 創建英文文字（小字）\n    this.englishText = this.scene.add.text(0, 15, '', {\n      fontSize: `${this.config.style.fontSize * 0.7}px`,\n      fontFamily: 'Arial, sans-serif',\n      color: '#CCCCCC',\n      align: 'center'\n    });\n    this.englishText.setOrigin(0.5);\n    \n    // 添加到容器\n    this.promptContainer.add([this.backgroundRect, this.chineseText, this.englishText]);\n    \n    // 設置位置\n    this.updatePromptPosition();\n    \n    // 初始隱藏\n    this.promptContainer.setVisible(false);\n    this.promptContainer.setAlpha(0);\n  }\n\n  /**\n   * 更新提示位置\n   */\n  private updatePromptPosition(): void {\n    if (!this.promptContainer) return;\n    \n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n    \n    switch (this.config.position) {\n      case 'top-center':\n        this.promptContainer.setPosition(gameWidth / 2, 80);\n        break;\n      case 'bottom-center':\n        this.promptContainer.setPosition(gameWidth / 2, gameHeight - 80);\n        break;\n      case 'floating':\n        // 浮動位置會在 showChinesePrompt 中動態設置\n        break;\n    }\n  }\n\n  /**\n   * 顯示中文提示\n   */\n  showChinesePrompt(englishWord: string, targetPosition?: { x: number; y: number }): void {\n    const word = this.getWordFromCache(englishWord);\n    if (!word) {\n      console.warn(`⚠️ 未找到詞彙: ${englishWord}`);\n      return;\n    }\n\n    this.state.currentWord = word;\n    this.state.isVisible = true;\n    this.state.lastUpdateTime = Date.now();\n\n    // 更新文字內容\n    if (this.chineseText) {\n      this.chineseText.setText(word.chinese);\n    }\n    \n    if (this.englishText && this.state.displayMode === 'both') {\n      this.englishText.setText(`(${word.english})`);\n    } else if (this.englishText) {\n      this.englishText.setText('');\n    }\n\n    // 調整背景大小\n    this.adjustBackgroundSize();\n\n    // 設置浮動位置\n    if (this.config.position === 'floating' && targetPosition) {\n      this.promptContainer?.setPosition(\n        targetPosition.x,\n        targetPosition.y - 60\n      );\n    }\n\n    // 顯示動畫\n    this.playShowAnimation();\n\n    console.log(`🌐 顯示中文提示: ${word.chinese} (${word.english})`);\n  }\n\n  /**\n   * 隱藏中文提示\n   */\n  hideChinesePrompt(): void {\n    if (!this.state.isVisible) return;\n\n    this.state.isVisible = false;\n    this.state.currentWord = null;\n\n    // 隱藏動畫\n    this.playHideAnimation();\n\n    console.log('🌐 隱藏中文提示');\n  }\n\n  /**\n   * 更新目標詞彙\n   */\n  updateTargetWord(englishWord: string): void {\n    const word = this.getWordFromCache(englishWord);\n    if (!word) {\n      console.warn(`⚠️ 未找到目標詞彙: ${englishWord}`);\n      return;\n    }\n\n    // 如果當前正在顯示，更新內容\n    if (this.state.isVisible) {\n      this.showChinesePrompt(englishWord);\n    }\n\n    console.log(`🎯 更新目標詞彙: ${word.chinese} (${word.english})`);\n  }\n\n  /**\n   * 從快取獲取詞彙\n   */\n  private getWordFromCache(englishWord: string): GEPTWord | null {\n    // 先檢查快取\n    if (this.wordCache.has(englishWord)) {\n      return this.wordCache.get(englishWord)!;\n    }\n\n    // 從 GEPTManager 查找\n    const word = this.geptManager.findWordByEnglish(englishWord);\n    if (word) {\n      // 添加到快取\n      this.wordCache.set(englishWord, word);\n      this.translationCache.set(englishWord, word.chinese);\n    }\n\n    return word;\n  }\n\n  /**\n   * 調整背景大小\n   */\n  private adjustBackgroundSize(): void {\n    if (!this.backgroundRect || !this.chineseText) return;\n\n    const textBounds = this.chineseText.getBounds();\n    const padding = this.config.style.padding;\n    \n    const width = Math.max(textBounds.width + padding.x * 2, 120);\n    const height = Math.max(textBounds.height + padding.y * 2, 50);\n    \n    this.backgroundRect.setSize(width, height);\n  }\n\n  /**\n   * 播放顯示動畫\n   */\n  private playShowAnimation(): void {\n    if (!this.promptContainer) return;\n\n    this.promptContainer.setVisible(true);\n    \n    // 淡入動畫\n    this.scene.tweens.add({\n      targets: this.promptContainer,\n      alpha: 1,\n      duration: this.config.animation.fadeIn.duration,\n      ease: this.config.animation.fadeIn.ease,\n      onComplete: () => {\n        // 可選的彈跳效果\n        if (this.config.animation.bounce) {\n          this.playBounceAnimation();\n        }\n      }\n    });\n  }\n\n  /**\n   * 播放隱藏動畫\n   */\n  private playHideAnimation(): void {\n    if (!this.promptContainer) return;\n\n    this.scene.tweens.add({\n      targets: this.promptContainer,\n      alpha: 0,\n      duration: this.config.animation.fadeOut.duration,\n      ease: this.config.animation.fadeOut.ease,\n      onComplete: () => {\n        this.promptContainer?.setVisible(false);\n      }\n    });\n  }\n\n  /**\n   * 播放彈跳動畫\n   */\n  private playBounceAnimation(): void {\n    if (!this.promptContainer || !this.config.animation.bounce) return;\n\n    const originalY = this.promptContainer.y;\n    const bounce = this.config.animation.bounce;\n\n    this.scene.tweens.add({\n      targets: this.promptContainer,\n      y: originalY - bounce.amplitude,\n      duration: bounce.duration / 2,\n      ease: 'Power2.easeOut',\n      yoyo: true,\n      repeat: 0\n    });\n  }\n\n  /**\n   * 設置顯示模式\n   */\n  setDisplayMode(mode: 'chinese-only' | 'english-only' | 'both'): void {\n    this.state.displayMode = mode;\n    \n    // 如果當前正在顯示，更新顯示\n    if (this.state.isVisible && this.state.currentWord) {\n      this.showChinesePrompt(this.state.currentWord.english);\n    }\n  }\n\n  /**\n   * 應用無障礙設置\n   */\n  applyAccessibilitySettings(settings: Partial<AccessibilitySettings>): void {\n    this.accessibilitySettings = { ...this.accessibilitySettings, ...settings };\n    \n    // 更新字體大小\n    this.updateFontSize();\n    \n    // 更新對比度\n    this.updateContrast();\n    \n    console.log('♿ 應用無障礙設置:', this.accessibilitySettings);\n  }\n\n  /**\n   * 更新字體大小\n   */\n  private updateFontSize(): void {\n    const sizeMap = {\n      'small': 18,\n      'medium': 24,\n      'large': 30,\n      'extra-large': 36\n    };\n    \n    const fontSize = sizeMap[this.accessibilitySettings.fontSize];\n    \n    if (this.chineseText) {\n      this.chineseText.setFontSize(fontSize);\n    }\n    \n    if (this.englishText) {\n      this.englishText.setFontSize(fontSize * 0.7);\n    }\n    \n    // 重新調整背景大小\n    this.adjustBackgroundSize();\n  }\n\n  /**\n   * 更新對比度\n   */\n  private updateContrast(): void {\n    const contrastMap = {\n      'normal': { bg: 0x000000, text: '#FFFFFF', border: 0xFFD700 },\n      'high': { bg: 0x000000, text: '#FFFF00', border: 0xFFFFFF },\n      'reverse': { bg: 0xFFFFFF, text: '#000000', border: 0x000000 }\n    };\n    \n    const colors = contrastMap[this.accessibilitySettings.contrast];\n    \n    if (this.backgroundRect) {\n      this.backgroundRect.setFillStyle(colors.bg, 0.9);\n      this.backgroundRect.setStrokeStyle(2, colors.border);\n    }\n    \n    if (this.chineseText) {\n      this.chineseText.setColor(colors.text);\n    }\n    \n    if (this.englishText) {\n      this.englishText.setColor(colors.text);\n    }\n  }\n\n  /**\n   * 獲取中文翻譯\n   */\n  getChineseTranslation(englishWord: string): string {\n    // 先檢查翻譯快取\n    if (this.translationCache.has(englishWord)) {\n      return this.translationCache.get(englishWord)!;\n    }\n\n    // 從詞彙快取獲取\n    const word = this.getWordFromCache(englishWord);\n    return word ? word.chinese : '';\n  }\n\n  /**\n   * 清理資源\n   */\n  destroy(): void {\n    if (this.promptContainer) {\n      this.promptContainer.destroy();\n      this.promptContainer = null;\n    }\n    \n    this.wordCache.clear();\n    this.translationCache.clear();\n    \n    console.log('🧹 BilingualManager 已銷毀');\n  }\n\n  /**\n   * 獲取當前狀態\n   */\n  getState(): BilingualPromptState {\n    return { ...this.state };\n  }\n\n  /**\n   * 獲取統計信息\n   */\n  getStatistics() {\n    return {\n      cacheSize: this.wordCache.size,\n      translationCacheSize: this.translationCache.size,\n      currentLevel: this.geptManager.getCurrentLevel(),\n      isVisible: this.state.isVisible,\n      displayMode: this.state.displayMode\n    };\n  }\n}\n","/**\n * ChineseUIManager - 中文 UI 管理系統\n * 負責遊戲中所有中文界面元素的管理和顯示\n * 基於 Task 1.5.1 需求分析設計\n */\n\nimport { GEPTManager, GEPTWord } from './GEPTManager';\nimport { BilingualManager, AccessibilitySettings } from './BilingualManager';\n\nexport interface ChineseUIElements {\n  scoreText: Phaser.GameObjects.Text | null;\n  livesText: Phaser.GameObjects.Text | null;\n  targetText: Phaser.GameObjects.Text | null;\n  statusText: Phaser.GameObjects.Text | null;\n  instructionText: Phaser.GameObjects.Text | null;\n}\n\nexport interface UITextConfig {\n  fontSize: number;\n  fontFamily: string;\n  color: string;\n  stroke: string;\n  strokeThickness: number;\n  shadow: {\n    offsetX: number;\n    offsetY: number;\n    color: string;\n    blur: number;\n    fill: boolean;\n  };\n}\n\n/**\n * 中文 UI 管理器\n */\nexport class ChineseUIManager {\n  private scene: Phaser.Scene;\n  private geptManager: GEPTManager;\n  private bilingualManager: BilingualManager;\n  \n  private uiElements: ChineseUIElements;\n  private textConfig: UITextConfig;\n  private accessibilitySettings: AccessibilitySettings;\n  \n  // UI 容器\n  private hudContainer: Phaser.GameObjects.Container | null = null;\n  private targetContainer: Phaser.GameObjects.Container | null = null;\n  \n  // 遊戲狀態\n  private currentScore: number = 0;\n  private currentLives: number = 100;\n  private currentTarget: GEPTWord | null = null;\n  private gameStatus: 'waiting' | 'playing' | 'paused' | 'ended' = 'waiting';\n\n  constructor(\n    scene: Phaser.Scene, \n    geptManager: GEPTManager, \n    bilingualManager: BilingualManager\n  ) {\n    this.scene = scene;\n    this.geptManager = geptManager;\n    this.bilingualManager = bilingualManager;\n    \n    this.uiElements = this.initializeUIElements();\n    this.textConfig = this.getDefaultTextConfig();\n    this.accessibilitySettings = this.getDefaultAccessibilitySettings();\n    \n    this.createChineseHUD();\n    console.log('🎨 ChineseUIManager 初始化完成');\n  }\n\n  /**\n   * 初始化 UI 元素\n   */\n  private initializeUIElements(): ChineseUIElements {\n    return {\n      scoreText: null,\n      livesText: null,\n      targetText: null,\n      statusText: null,\n      instructionText: null\n    };\n  }\n\n  /**\n   * 獲取默認文字配置\n   */\n  private getDefaultTextConfig(): UITextConfig {\n    return {\n      fontSize: 20,\n      fontFamily: 'Microsoft YaHei, SimHei, Arial, sans-serif',\n      color: '#FFFFFF',\n      stroke: '#000000',\n      strokeThickness: 2,\n      shadow: {\n        offsetX: 2,\n        offsetY: 2,\n        color: '#000000',\n        blur: 4,\n        fill: true\n      }\n    };\n  }\n\n  /**\n   * 獲取默認無障礙設置\n   */\n  private getDefaultAccessibilitySettings(): AccessibilitySettings {\n    return {\n      fontSize: 'medium',\n      contrast: 'normal',\n      enableVoice: false,\n      enableKeyboardNav: true,\n      screenReaderMode: false\n    };\n  }\n\n  /**\n   * 創建中文 HUD\n   */\n  private createChineseHUD(): void {\n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n\n    // 創建 HUD 容器\n    this.hudContainer = this.scene.add.container(0, 0);\n    this.hudContainer.setDepth(999);\n\n    // 創建分數顯示\n    this.uiElements.scoreText = this.scene.add.text(\n      20, 20, \n      '分數: 0', \n      this.getTextStyle()\n    );\n    this.hudContainer.add(this.uiElements.scoreText);\n\n    // 創建生命值顯示\n    this.uiElements.livesText = this.scene.add.text(\n      20, 50, \n      '生命值: 100', \n      this.getTextStyle()\n    );\n    this.hudContainer.add(this.uiElements.livesText);\n\n    // 創建遊戲狀態顯示\n    this.uiElements.statusText = this.scene.add.text(\n      gameWidth - 20, 20, \n      '遊戲狀態: 待開始', \n      { ...this.getTextStyle(), align: 'right' }\n    );\n    this.uiElements.statusText.setOrigin(1, 0);\n    this.hudContainer.add(this.uiElements.statusText);\n\n    // 創建目標詞彙容器\n    this.createTargetDisplay();\n\n    // 創建操作說明\n    this.createInstructionText();\n\n    console.log('🎨 中文 HUD 創建完成');\n  }\n\n  /**\n   * 創建目標詞彙顯示\n   */\n  private createTargetDisplay(): void {\n    const gameWidth = this.scene.scale.width;\n    \n    // 創建目標容器\n    this.targetContainer = this.scene.add.container(gameWidth / 2, 120);\n    this.targetContainer.setDepth(998);\n\n    // 背景框\n    const targetBg = this.scene.add.rectangle(0, 0, 300, 60, 0x000000, 0.7);\n    targetBg.setStrokeStyle(2, 0x00FF00);\n    this.targetContainer.add(targetBg);\n\n    // 標題文字\n    const titleText = this.scene.add.text(0, -15, '目標詞彙', {\n      fontSize: '16px',\n      fontFamily: this.textConfig.fontFamily,\n      color: '#00FF00',\n      align: 'center'\n    });\n    titleText.setOrigin(0.5);\n    this.targetContainer.add(titleText);\n\n    // 目標詞彙文字\n    this.uiElements.targetText = this.scene.add.text(0, 10, '等待設置...', {\n      fontSize: '24px',\n      fontFamily: this.textConfig.fontFamily,\n      color: '#FFFFFF',\n      align: 'center',\n      fontStyle: 'bold'\n    });\n    this.uiElements.targetText.setOrigin(0.5);\n    this.targetContainer.add(this.uiElements.targetText);\n\n    console.log('🎯 目標詞彙顯示創建完成');\n  }\n\n  /**\n   * 創建操作說明文字\n   */\n  private createInstructionText(): void {\n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n\n    this.uiElements.instructionText = this.scene.add.text(\n      gameWidth / 2, \n      gameHeight - 40,\n      '使用方向鍵或 WASD 控制飛機，碰撞正確的中文詞彙！',\n      {\n        fontSize: '16px',\n        fontFamily: this.textConfig.fontFamily,\n        color: '#CCCCCC',\n        align: 'center'\n      }\n    );\n    this.uiElements.instructionText.setOrigin(0.5);\n    \n    if (this.hudContainer) {\n      this.hudContainer.add(this.uiElements.instructionText);\n    }\n  }\n\n  /**\n   * 獲取文字樣式\n   */\n  private getTextStyle(): Phaser.Types.GameObjects.Text.TextStyle {\n    return {\n      fontSize: `${this.textConfig.fontSize}px`,\n      fontFamily: this.textConfig.fontFamily,\n      color: this.textConfig.color,\n      stroke: this.textConfig.stroke,\n      strokeThickness: this.textConfig.strokeThickness,\n      shadow: this.textConfig.shadow\n    };\n  }\n\n  /**\n   * 更新分數顯示\n   */\n  updateScore(score: number): void {\n    this.currentScore = score;\n    if (this.uiElements.scoreText) {\n      this.uiElements.scoreText.setText(`分數: ${score}`);\n    }\n    console.log(`📊 更新分數: ${score}`);\n  }\n\n  /**\n   * 更新生命值顯示\n   */\n  updateLives(lives: number): void {\n    this.currentLives = lives;\n    if (this.uiElements.livesText) {\n      this.uiElements.livesText.setText(`生命值: ${lives}`);\n      \n      // 生命值低時變紅色\n      if (lives <= 30) {\n        this.uiElements.livesText.setColor('#FF0000');\n      } else if (lives <= 60) {\n        this.uiElements.livesText.setColor('#FFAA00');\n      } else {\n        this.uiElements.livesText.setColor('#FFFFFF');\n      }\n    }\n    console.log(`❤️ 更新生命值: ${lives}`);\n  }\n\n  /**\n   * 更新目標詞彙顯示\n   */\n  updateTargetWord(word: GEPTWord): void {\n    this.currentTarget = word;\n    if (this.uiElements.targetText) {\n      this.uiElements.targetText.setText(`尋找: ${word.chinese} (${word.english})`);\n    }\n    \n    // 同時更新雙語管理器\n    this.bilingualManager.updateTargetWord(word.english);\n    \n    console.log(`🎯 更新目標詞彙: ${word.chinese} (${word.english})`);\n  }\n\n  /**\n   * 更新遊戲狀態\n   */\n  updateGameStatus(status: 'waiting' | 'playing' | 'paused' | 'ended'): void {\n    this.gameStatus = status;\n    \n    const statusMap = {\n      'waiting': '遊戲狀態: 待開始',\n      'playing': '遊戲狀態: 進行中',\n      'paused': '遊戲狀態: 暫停',\n      'ended': '遊戲狀態: 結束'\n    };\n    \n    if (this.uiElements.statusText) {\n      this.uiElements.statusText.setText(statusMap[status]);\n      \n      // 根據狀態改變顏色\n      switch (status) {\n        case 'waiting':\n          this.uiElements.statusText.setColor('#CCCCCC');\n          break;\n        case 'playing':\n          this.uiElements.statusText.setColor('#00FF00');\n          break;\n        case 'paused':\n          this.uiElements.statusText.setColor('#FFAA00');\n          break;\n        case 'ended':\n          this.uiElements.statusText.setColor('#FF0000');\n          break;\n      }\n    }\n    \n    console.log(`🎮 更新遊戲狀態: ${statusMap[status]}`);\n  }\n\n  /**\n   * 顯示成功提示\n   */\n  showSuccessMessage(word: GEPTWord, points: number): void {\n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n    \n    // 創建成功提示\n    const successText = this.scene.add.text(\n      gameWidth / 2,\n      gameHeight / 2,\n      `正確！\\n${word.chinese} (${word.english})\\n+${points} 分`,\n      {\n        fontSize: '32px',\n        fontFamily: this.textConfig.fontFamily,\n        color: '#00FF00',\n        align: 'center',\n        fontStyle: 'bold',\n        stroke: '#000000',\n        strokeThickness: 3\n      }\n    );\n    successText.setOrigin(0.5);\n    successText.setDepth(1001);\n    \n    // 動畫效果\n    this.scene.tweens.add({\n      targets: successText,\n      scaleX: 1.2,\n      scaleY: 1.2,\n      alpha: 0,\n      duration: 1500,\n      ease: 'Power2.easeOut',\n      onComplete: () => {\n        successText.destroy();\n      }\n    });\n    \n    console.log(`✅ 顯示成功提示: ${word.chinese} +${points}分`);\n  }\n\n  /**\n   * 顯示錯誤提示\n   */\n  showErrorMessage(word: GEPTWord, penalty: number): void {\n    const gameWidth = this.scene.scale.width;\n    const gameHeight = this.scene.scale.height;\n    \n    // 創建錯誤提示\n    const errorText = this.scene.add.text(\n      gameWidth / 2,\n      gameHeight / 2,\n      `錯誤！\\n${word.chinese} (${word.english})\\n-${penalty} 生命值`,\n      {\n        fontSize: '28px',\n        fontFamily: this.textConfig.fontFamily,\n        color: '#FF0000',\n        align: 'center',\n        fontStyle: 'bold',\n        stroke: '#000000',\n        strokeThickness: 3\n      }\n    );\n    errorText.setOrigin(0.5);\n    errorText.setDepth(1001);\n    \n    // 動畫效果\n    this.scene.tweens.add({\n      targets: errorText,\n      scaleX: 0.8,\n      scaleY: 0.8,\n      alpha: 0,\n      duration: 1200,\n      ease: 'Power2.easeIn',\n      onComplete: () => {\n        errorText.destroy();\n      }\n    });\n    \n    console.log(`❌ 顯示錯誤提示: ${word.chinese} -${penalty}生命值`);\n  }\n\n  /**\n   * 應用無障礙設置\n   */\n  applyAccessibilitySettings(settings: Partial<AccessibilitySettings>): void {\n    this.accessibilitySettings = { ...this.accessibilitySettings, ...settings };\n    \n    // 更新字體大小\n    this.updateAllFontSizes();\n    \n    // 更新對比度\n    this.updateAllContrast();\n    \n    console.log('♿ ChineseUIManager 應用無障礙設置:', this.accessibilitySettings);\n  }\n\n  /**\n   * 更新所有字體大小\n   */\n  private updateAllFontSizes(): void {\n    const sizeMap = {\n      'small': 16,\n      'medium': 20,\n      'large': 24,\n      'extra-large': 28\n    };\n    \n    const fontSize = sizeMap[this.accessibilitySettings.fontSize];\n    this.textConfig.fontSize = fontSize;\n    \n    // 更新所有文字元素\n    Object.values(this.uiElements).forEach(element => {\n      if (element && element.setFontSize) {\n        element.setFontSize(fontSize);\n      }\n    });\n  }\n\n  /**\n   * 更新所有對比度\n   */\n  private updateAllContrast(): void {\n    const contrastMap = {\n      'normal': { text: '#FFFFFF', stroke: '#000000' },\n      'high': { text: '#FFFF00', stroke: '#000000' },\n      'reverse': { text: '#000000', stroke: '#FFFFFF' }\n    };\n    \n    const colors = contrastMap[this.accessibilitySettings.contrast];\n    this.textConfig.color = colors.text;\n    this.textConfig.stroke = colors.stroke;\n    \n    // 更新所有文字元素\n    Object.values(this.uiElements).forEach(element => {\n      if (element && element.setColor) {\n        element.setColor(colors.text);\n        element.setStroke(colors.stroke, this.textConfig.strokeThickness);\n      }\n    });\n  }\n\n  /**\n   * 設置 UI 可見性\n   */\n  setVisible(visible: boolean): void {\n    if (this.hudContainer) {\n      this.hudContainer.setVisible(visible);\n    }\n    if (this.targetContainer) {\n      this.targetContainer.setVisible(visible);\n    }\n  }\n\n  /**\n   * 獲取當前狀態\n   */\n  getState() {\n    return {\n      score: this.currentScore,\n      lives: this.currentLives,\n      target: this.currentTarget,\n      status: this.gameStatus,\n      accessibilitySettings: this.accessibilitySettings\n    };\n  }\n\n  /**\n   * 清理資源\n   */\n  destroy(): void {\n    if (this.hudContainer) {\n      this.hudContainer.destroy();\n      this.hudContainer = null;\n    }\n    \n    if (this.targetContainer) {\n      this.targetContainer.destroy();\n      this.targetContainer = null;\n    }\n    \n    // 清空 UI 元素引用\n    Object.keys(this.uiElements).forEach(key => {\n      this.uiElements[key as keyof ChineseUIElements] = null;\n    });\n    \n    console.log('🧹 ChineseUIManager 已銷毀');\n  }\n}\n","/**\n * 主遊戲場景 - Vite + Phaser 3 版本\n * 基於記憶科學的飛機碰撞英語學習遊戲\n * 整合完整的遊戲邏輯和管理器系統\n */\n\nimport Phaser from 'phaser';\nimport { GameConfig, GameState, GEPTWord, ParentMessage } from '../types/game';\nimport { GEPTManager, GEPTLevel } from '../managers/GEPTManager';\nimport { CollisionDetectionSystem, CollisionEvent } from '../managers/CollisionDetectionSystem';\nimport { MemoryEnhancementEngine, LearningEvent } from '../managers/MemoryEnhancementEngine';\nimport { BilingualManager } from '../managers/BilingualManager';\nimport { ChineseUIManager } from '../managers/ChineseUIManager';\n\nexport default class GameScene extends Phaser.Scene {\n  // 遊戲配置和狀態\n  private gameConfig!: GameConfig;\n  private gameState: GameState = {\n    isPlaying: false,\n    isPaused: false,\n    currentScore: 0,\n    currentHealth: 100,\n    wordsLearned: 0,\n    accuracy: 0\n  };\n\n  // 遊戲物件\n  private player!: Phaser.Physics.Arcade.Image;\n  private clouds!: Phaser.Physics.Arcade.Group;\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  private backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\n\n  // UI 元素\n  private scoreText!: Phaser.GameObjects.Text;\n  private healthText!: Phaser.GameObjects.Text;\n  private targetWordText!: Phaser.GameObjects.Text;\n  private accuracyText!: Phaser.GameObjects.Text;\n  private wordsLearnedText!: Phaser.GameObjects.Text;\n\n  // 管理器系統\n  private geptManager!: GEPTManager;\n  private collisionSystem!: CollisionDetectionSystem;\n  private memoryEngine!: MemoryEnhancementEngine;\n  private bilingualManager!: BilingualManager;\n  private chineseUIManager!: ChineseUIManager;\n\n  // 遊戲邏輯\n  private cloudSpawnTimer!: Phaser.Time.TimerEvent;\n  private currentTargetWord?: GEPTWord;\n  private targetWordSetTime: number = 0;\n\n  // 遊戲統計\n  private totalCollisions: number = 0;\n  private correctCollisions: number = 0;\n\n  constructor() {\n    super({ key: 'GameScene' });\n  }\n\n  init() {\n    console.log('🎮 初始化遊戲場景');\n\n    // 從註冊表獲取遊戲配置\n    this.gameConfig = this.registry.get('gameConfig') || {\n      geptLevel: 'elementary',\n      enableSound: true,\n      enableHapticFeedback: true,\n      difficulty: 'medium',\n      gameMode: 'practice'\n    };\n\n    console.log('📋 遊戲配置:', this.gameConfig);\n\n    // 初始化管理器系統\n    this.initializeManagers();\n  }\n\n  /**\n   * 初始化管理器系統\n   */\n  private initializeManagers(): void {\n    // 初始化 GEPT 管理器\n    this.geptManager = new GEPTManager();\n    this.geptManager.setLevel(this.gameConfig.geptLevel);\n\n    // 初始化記憶增強引擎\n    this.memoryEngine = new MemoryEnhancementEngine();\n\n    // 初始化碰撞檢測系統\n    this.collisionSystem = new CollisionDetectionSystem(\n      this,\n      this.gameConfig.geptLevel,\n      {\n        enableParticles: true,\n        enableScreenShake: true,\n        enableSoundEffects: this.gameConfig.enableSound,\n        enableVisualFeedback: true,\n        particleIntensity: 'medium',\n        soundVolume: 0.7\n      }\n    );\n\n    // 初始化雙語管理器\n    this.bilingualManager = new BilingualManager(this, this.geptManager);\n\n    // 初始化中文 UI 管理器\n    this.chineseUIManager = new ChineseUIManager(this, this.geptManager, this.bilingualManager);\n\n    console.log('🔧 管理器初始化完成（包含雙語系統）');\n  }\n\n  preload() {\n    console.log('🎨 載入遊戲資源');\n\n    // 載入月亮主題背景圖片\n    this.loadMoonBackground();\n\n    // 修復紋理生成問題 - 使用正確的方法\n    // 玩家飛機 - 藍色三角形\n    const planeGraphics = this.add.graphics();\n    planeGraphics.fillStyle(0x0066ff);\n    planeGraphics.fillTriangle(16, 0, 0, 32, 32, 32);\n    planeGraphics.generateTexture('player-plane', 32, 32);\n    planeGraphics.destroy();\n\n    // 詞彙雲朵 - 白色橢圓\n    const cloudGraphics = this.add.graphics();\n    cloudGraphics.fillStyle(0xffffff);\n    cloudGraphics.fillEllipse(32, 16, 60, 28);\n    cloudGraphics.lineStyle(2, 0x888888);\n    cloudGraphics.strokeEllipse(32, 16, 60, 28);\n    cloudGraphics.generateTexture('cloud-word', 64, 32);\n    cloudGraphics.destroy();\n\n    // 背景星星 - 小白點\n    const starGraphics = this.add.graphics();\n    starGraphics.fillStyle(0xffffff);\n    starGraphics.fillCircle(2, 2, 2);\n    starGraphics.generateTexture('star', 4, 4);\n    starGraphics.destroy();\n\n    console.log('✅ 遊戲資源載入完成 - 包含月亮背景');\n  }\n\n  /**\n   * 載入月亮主題背景圖片\n   */\n  private loadMoonBackground(): void {\n    console.log('🌙 載入月亮主題背景');\n\n    // 嘗試載入背景圖片，如果不存在則使用備用方案\n    try {\n      // 背景層 1 - 最遠的背景（天空/星空）\n      this.load.image('moon-bg-1', '/assets/backgrounds/moon/layer-1.png');\n\n      // 背景層 2 - 中景（山脈/地形）\n      this.load.image('moon-bg-2', '/assets/backgrounds/moon/layer-2.png');\n\n      // 背景層 3 - 近景（樹木/建築）\n      this.load.image('moon-bg-3', '/assets/backgrounds/moon/layer-3.png');\n\n      // 月亮\n      this.load.image('moon', '/assets/backgrounds/moon/moon.png');\n\n      console.log('🌙 月亮背景圖片載入排程完成');\n    } catch (error) {\n      console.warn('⚠️ 月亮背景載入失敗，將使用備用背景:', error);\n    }\n  }\n\n  create() {\n    console.log('🏗️ 創建遊戲場景');\n\n    // 創建視差背景\n    this.createParallaxBackground();\n\n    // 創建玩家飛機\n    this.createPlayer();\n\n    // 創建雲朵群組\n    this.createClouds();\n\n    // 創建完整的 UI\n    this.createGameHUD();\n\n    // 設置輸入控制\n    this.setupInput();\n\n    // 設置物理碰撞\n    this.setupPhysics();\n\n    // 設置目標詞彙\n    this.setRandomTargetWord();\n\n    // 開始雲朵生成\n    this.startCloudSpawning();\n\n    console.log('✅ 遊戲場景創建完成');\n\n    // 自動開始遊戲\n    this.startGame();\n  }\n\n  /**\n   * 創建月亮主題視差背景\n   */\n  private createParallaxBackground(): void {\n    console.log('� 創建月亮主題視差背景');\n\n    // 創建基礎背景色（深夜藍色）\n    const bgRect = this.add.rectangle(400, 300, 800, 600, 0x0a0a2e);\n    bgRect.setDepth(-20);\n\n    // 嘗試使用月亮主題背景，如果載入失敗則使用備用方案\n    this.createMoonBackgroundLayers();\n\n    // 創建星空背景\n    this.createStarField();\n\n    console.log('🌙 月亮主題視差背景創建完成');\n  }\n\n  /**\n   * 創建月亮主題背景層\n   */\n  private createMoonBackgroundLayers(): void {\n    const backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\n\n    // 檢查月亮背景圖片是否載入成功\n    const hasMoonBg1 = this.textures.exists('moon-bg-1');\n    const hasMoonBg2 = this.textures.exists('moon-bg-2');\n    const hasMoonBg3 = this.textures.exists('moon-bg-3');\n    const hasMoon = this.textures.exists('moon');\n\n    if (hasMoonBg1 || hasMoonBg2 || hasMoonBg3) {\n      console.log('🌙 使用月亮主題背景圖片');\n\n      // 背景層 1 - 最遠的背景（天空）\n      if (hasMoonBg1) {\n        const layer1 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-1');\n        layer1.setOrigin(0, 0);\n        layer1.setDepth(-15);\n        backgroundLayers.push(layer1);\n      }\n\n      // 月亮\n      if (hasMoon) {\n        const moon = this.add.image(650, 150, 'moon');\n        moon.setDepth(-14);\n        moon.setScale(0.8);\n        moon.setAlpha(0.9);\n      }\n\n      // 背景層 2 - 中景（山脈）\n      if (hasMoonBg2) {\n        const layer2 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-2');\n        layer2.setOrigin(0, 0);\n        layer2.setDepth(-13);\n        backgroundLayers.push(layer2);\n      }\n\n      // 背景層 3 - 近景（樹木）\n      if (hasMoonBg3) {\n        const layer3 = this.add.tileSprite(0, 0, 800, 600, 'moon-bg-3');\n        layer3.setOrigin(0, 0);\n        layer3.setDepth(-12);\n        backgroundLayers.push(layer3);\n      }\n\n    } else {\n      console.log('🌌 使用備用漸層背景');\n\n      // 備用方案：創建漸層背景\n      const layer1 = this.add.graphics();\n      layer1.fillGradientStyle(0x0a0a2e, 0x0a0a2e, 0x1a1a4e, 0x1a1a4e);\n      layer1.fillRect(0, 0, 800, 600);\n      layer1.generateTexture('fallback-bg-1', 800, 600);\n      layer1.destroy();\n\n      const layer2 = this.add.graphics();\n      layer2.fillGradientStyle(0x1a1a4e, 0x1a1a4e, 0x2a2a6e, 0x2a2a6e);\n      layer2.fillRect(0, 0, 800, 600);\n      layer2.generateTexture('fallback-bg-2', 800, 600);\n      layer2.destroy();\n\n      const fallbackLayer1 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-1');\n      fallbackLayer1.setOrigin(0, 0);\n      fallbackLayer1.setDepth(-15);\n      fallbackLayer1.setAlpha(0.7);\n      backgroundLayers.push(fallbackLayer1);\n\n      const fallbackLayer2 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-2');\n      fallbackLayer2.setOrigin(0, 0);\n      fallbackLayer2.setDepth(-13);\n      fallbackLayer2.setAlpha(0.5);\n      backgroundLayers.push(fallbackLayer2);\n    }\n\n    this.backgroundLayers = backgroundLayers;\n  }\n\n  /**\n   * 創建星空背景\n   */\n  private createStarField(): void {\n    console.log('⭐ 創建星空背景');\n\n    // 創建不同大小的星星\n    for (let i = 0; i < 80; i++) {\n      const x = Phaser.Math.Between(0, 800);\n      const y = Phaser.Math.Between(0, 400); // 星星主要在上半部分\n      const star = this.add.image(x, y, 'star');\n\n      const scale = Phaser.Math.FloatBetween(0.3, 1.2);\n      const alpha = Phaser.Math.FloatBetween(0.4, 1);\n\n      star.setScale(scale);\n      star.setAlpha(alpha);\n      star.setDepth(-11);\n\n      // 添加閃爍效果\n      this.tweens.add({\n        targets: star,\n        alpha: alpha * 0.3,\n        duration: Phaser.Math.Between(2000, 4000),\n        yoyo: true,\n        repeat: -1,\n        ease: 'Sine.easeInOut'\n      });\n    }\n  }\n\n  /**\n   * 創建玩家飛機\n   */\n  private createPlayer(): void {\n    console.log('✈️ 創建玩家飛機 (修復版本)');\n\n    this.player = this.physics.add.image(100, 300, 'player-plane');\n    this.player.setCollideWorldBounds(true);\n    this.player.setScale(1.5);\n    this.player.setDepth(10); // 確保在前景\n    this.player.setAlpha(1); // 確保不透明\n    this.player.setVisible(true); // 確保可見\n\n    console.log('✈️ 玩家飛機創建完成:', {\n      x: this.player.x,\n      y: this.player.y,\n      visible: this.player.visible,\n      alpha: this.player.alpha,\n      depth: this.player.depth,\n      texture: this.player.texture.key\n    });\n  }\n\n  private createClouds() {\n    this.clouds = this.physics.add.group();\n    console.log('☁️ 創建雲朵群組');\n  }\n\n  /**\n   * 創建完整的遊戲 HUD\n   */\n  private createGameHUD(): void {\n    console.log('📊 創建遊戲 HUD (已擴展目標詞彙顯示)');\n\n    // 分數顯示\n    this.scoreText = this.add.text(16, 16, '分數: 0', {\n      fontSize: '24px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 生命值顯示\n    this.healthText = this.add.text(16, 50, '生命值: 100', {\n      fontSize: '20px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 準確率顯示\n    this.accuracyText = this.add.text(16, 84, '準確率: 0%', {\n      fontSize: '18px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 學習詞彙數顯示\n    this.wordsLearnedText = this.add.text(16, 118, '學習詞彙: 0', {\n      fontSize: '18px',\n      color: '#ffffff',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setDepth(100);\n\n    // 目標詞彙顯示 - 更大更明顯\n    this.targetWordText = this.add.text(400, 16, '目標: 載入中...', {\n      fontSize: '24px',\n      color: '#ffff00',\n      backgroundColor: '#000000',\n      padding: { x: 12, y: 8 },\n      fontStyle: 'bold'\n    }).setOrigin(0.5, 0).setDepth(100);\n\n    // GEPT 等級顯示\n    const geptLevelText = this.add.text(400, 50, `GEPT: ${this.gameConfig.geptLevel}`, {\n      fontSize: '16px',\n      color: '#00ff00',\n      backgroundColor: '#000000',\n      padding: { x: 8, y: 4 }\n    }).setOrigin(0.5, 0).setDepth(100);\n  }\n\n  private setupInput() {\n    this.cursors = this.input.keyboard!.createCursorKeys();\n    \n    // WASD 控制\n    const wasd = this.input.keyboard!.addKeys('W,S,A,D');\n    (this as any).wasd = wasd;\n    \n    console.log('🎮 設置輸入控制');\n  }\n\n  /**\n   * 設置物理碰撞系統\n   */\n  private setupPhysics(): void {\n    console.log('⚡ 設置物理碰撞 (已移除子彈碰撞，修改玩家碰撞)');\n\n    // 玩家與雲朵碰撞 - 使用完整的碰撞檢測系統\n    this.physics.add.overlap(\n      this.player,\n      this.clouds,\n      this.handleAdvancedCollision,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * 設置隨機目標詞彙\n   */\n  private setRandomTargetWord(): void {\n    // 從 GEPT 管理器獲取詞彙\n    const randomWord = this.geptManager.getRandomWord();\n    this.currentTargetWord = randomWord || undefined;\n    this.gameState.currentTargetWord = this.currentTargetWord;\n    this.targetWordSetTime = Date.now();\n\n    if (this.targetWordText && this.currentTargetWord) {\n      this.targetWordText.setText(`目標: ${this.currentTargetWord.chinese} (${this.currentTargetWord.english})`);\n\n      // 更新碰撞檢測系統的目標詞彙\n      this.collisionSystem.setTargetWord(\n        this.currentTargetWord.english,\n        this.currentTargetWord.chinese\n      );\n\n      // 更新雙語管理器的目標詞彙\n      this.bilingualManager.updateTargetWord(this.currentTargetWord.english);\n\n      // 更新中文 UI 管理器的目標詞彙\n      this.chineseUIManager.updateTargetWord(this.currentTargetWord);\n\n      console.log('🎯 設置目標詞彙:', this.currentTargetWord.english);\n    }\n  }\n\n  private startCloudSpawning() {\n    this.cloudSpawnTimer = this.time.addEvent({\n      delay: 2000,\n      callback: this.spawnCloud,\n      callbackScope: this,\n      loop: true\n    });\n    console.log('☁️ 開始雲朵生成');\n  }\n\n  /**\n   * 生成詞彙雲朵 (修復版本)\n   */\n  private spawnCloud(): void {\n    if (!this.gameState.isPlaying) return;\n\n    // 從 GEPT 管理器獲取隨機詞彙\n    const word = this.geptManager.getRandomWord();\n    if (!word) return;\n\n    const x = 850;\n    const y = Phaser.Math.Between(100, 500);\n\n    const cloud = this.physics.add.image(x, y, 'cloud-word');\n    cloud.setVelocityX(-100);\n    cloud.setData('word', word);\n    cloud.setData('isTarget', word.english === this.currentTargetWord?.english);\n    cloud.setDepth(5); // 確保在前景\n    cloud.setAlpha(1); // 確保不透明\n    cloud.setVisible(true); // 確保可見\n\n    // 添加詞彙文字\n    const isTarget = word.english === this.currentTargetWord?.english;\n    const wordText = this.add.text(x, y, word.english, {\n      fontSize: '16px',\n      color: isTarget ? '#ff0000' : '#000000',\n      fontStyle: isTarget ? 'bold' : 'normal',\n      backgroundColor: isTarget ? '#ffff00' : '#ffffff',\n      padding: { x: 4, y: 2 }\n    }).setOrigin(0.5);\n\n    wordText.setDepth(6); // 文字在雲朵之上\n    wordText.setAlpha(1);\n    wordText.setVisible(true);\n\n    // 將文字綁定到雲朵\n    cloud.setData('wordText', wordText);\n\n    // 如果是目標詞彙，顯示中文提示\n    if (isTarget && this.bilingualManager) {\n      this.bilingualManager.showChinesePrompt(word.english, { x: x, y: y - 60 });\n    }\n\n    this.clouds.add(cloud);\n\n    console.log('☁️ 生成雲朵 (修復版本):', word.english, isTarget ? '(目標)' : '', {\n      cloudVisible: cloud.visible,\n      textVisible: wordText.visible,\n      cloudDepth: cloud.depth,\n      textDepth: wordText.depth\n    });\n  }\n\n  /**\n   * 處理高級碰撞檢測\n   */\n  private handleAdvancedCollision(player: any, cloud: any): void {\n    const word: GEPTWord = cloud.getData('word');\n    const isTarget: boolean = cloud.getData('isTarget');\n    const wordText = cloud.getData('wordText');\n\n    // 使用碰撞檢測系統處理碰撞\n    const collisionEvent = this.collisionSystem.handleCollision(player, cloud, word);\n\n    // 記錄學習事件到記憶增強引擎\n    const learningEvent: LearningEvent = {\n      wordId: word.id,\n      word: word.english,\n      timestamp: Date.now(),\n      responseTime: Date.now() - this.targetWordSetTime,\n      isCorrect: collisionEvent.type === 'correct',\n      attemptNumber: this.totalCollisions + 1,\n      contextData: {\n        targetWord: this.currentTargetWord?.english,\n        geptLevel: this.gameConfig.geptLevel,\n        gameMode: this.gameConfig.gameMode\n      }\n    };\n\n    this.memoryEngine.recordLearningEvent(learningEvent);\n\n    // 更新統計\n    this.totalCollisions++;\n    if (collisionEvent.type === 'correct') {\n      this.correctCollisions++;\n      this.gameState.currentScore += 10;\n      this.gameState.wordsLearned++;\n\n      // 顯示成功提示\n      if (this.chineseUIManager) {\n        this.chineseUIManager.showSuccessMessage(word, 10);\n      }\n\n      // 隱藏中文提示\n      if (this.bilingualManager) {\n        this.bilingualManager.hideChinesePrompt();\n      }\n\n      // 設置新的目標詞彙\n      this.setRandomTargetWord();\n\n      console.log('✅ 正確碰撞:', word.english);\n    } else {\n      this.gameState.currentHealth -= 20;\n\n      // 顯示錯誤提示\n      if (this.chineseUIManager) {\n        this.chineseUIManager.showErrorMessage(word, 20);\n      }\n\n      console.log('❌ 錯誤碰撞:', word.english);\n\n      if (this.gameState.currentHealth <= 0) {\n        this.endGame();\n        return;\n      }\n    }\n\n    // 移除雲朵和文字\n    if (wordText) wordText.destroy();\n    cloud.destroy();\n\n    // 更新 UI 和統計\n    this.updateGameStats();\n    this.updateUI();\n\n    // 向父頁面發送更新\n    this.sendMessageToParent({\n      type: 'GAME_SCORE_UPDATE',\n      score: this.gameState.currentScore,\n      health: this.gameState.currentHealth\n    });\n  }\n\n  /**\n   * 更新遊戲統計\n   */\n  private updateGameStats(): void {\n    // 計算準確率\n    this.gameState.accuracy = this.totalCollisions > 0\n      ? Math.round((this.correctCollisions / this.totalCollisions) * 100)\n      : 0;\n  }\n\n  /**\n   * 更新 UI 顯示\n   */\n  private updateUI(): void {\n    this.scoreText.setText(`分數: ${this.gameState.currentScore}`);\n    this.healthText.setText(`生命值: ${this.gameState.currentHealth}`);\n    this.accuracyText.setText(`準確率: ${this.gameState.accuracy}%`);\n    this.wordsLearnedText.setText(`學習詞彙: ${this.gameState.wordsLearned}`);\n\n    console.log('📊 更新 HUD:', {\n      分數: this.gameState.currentScore,\n      生命值: this.gameState.currentHealth,\n      準確率: this.gameState.accuracy,\n      學習詞彙: this.gameState.wordsLearned\n    });\n  }\n\n  private startGame() {\n    this.gameState.isPlaying = true;\n    this.gameState.isPaused = false;\n    console.log('🚀 遊戲開始');\n    \n    this.sendMessageToParent({\n      type: 'GAME_STATE_CHANGE',\n      state: 'playing'\n    });\n  }\n\n  private endGame() {\n    this.gameState.isPlaying = false;\n    console.log('🏁 遊戲結束');\n    \n    // 停止雲朵生成\n    if (this.cloudSpawnTimer) {\n      this.cloudSpawnTimer.destroy();\n    }\n    \n    // 清除所有雲朵\n    this.clouds.clear(true, true);\n    \n    this.sendMessageToParent({\n      type: 'GAME_COMPLETE',\n      score: this.gameState.currentScore,\n      health: this.gameState.currentHealth\n    });\n  }\n\n  private sendMessageToParent(message: ParentMessage) {\n    if (window.parent !== window) {\n      window.parent.postMessage(message, '*');\n    }\n  }\n\n  update(_time: number, _delta: number): void {\n    if (!this.gameState.isPlaying || this.gameState.isPaused) return;\n\n    // 更新視差背景\n    this.updateParallaxBackground();\n\n    // 玩家移動控制\n    this.handlePlayerMovement();\n\n    // 更新中文 UI 系統\n    this.updateChineseUI();\n\n    // 清理超出邊界的物件\n    this.cleanupObjects();\n  }\n\n  /**\n   * 更新月亮主題視差背景\n   */\n  private updateParallaxBackground(): void {\n    // 移動背景層創造視差效果\n    this.backgroundLayers.forEach((layer, index) => {\n      // 不同層有不同的移動速度，創造深度感\n      const speed = (index + 1) * 0.3; // 減慢速度讓效果更自然\n      layer.tilePositionX += speed;\n    });\n\n    // 每隔一段時間輸出日誌（減少頻率）\n    if (Math.floor(Date.now() / 1000) % 10 === 0) {\n      console.log('� 更新月亮主題視差背景');\n    }\n  }\n\n  /**\n   * 更新中文 UI 系統\n   */\n  private updateChineseUI(): void {\n    if (this.chineseUIManager) {\n      // 更新分數顯示\n      this.chineseUIManager.updateScore(this.gameState.currentScore);\n\n      // 更新生命值顯示\n      this.chineseUIManager.updateLives(this.gameState.currentHealth);\n\n      // 更新遊戲狀態\n      const status = this.gameState.isPlaying ? 'playing' :\n                    this.gameState.isPaused ? 'paused' : 'waiting';\n      this.chineseUIManager.updateGameStatus(status);\n    }\n  }\n\n  /**\n   * 處理玩家移動\n   */\n  private handlePlayerMovement(): void {\n    const speed = 250;\n    const wasd = (this as any).wasd;\n\n    if (this.cursors.left.isDown || wasd?.A.isDown) {\n      this.player.setVelocityX(-speed);\n    } else if (this.cursors.right.isDown || wasd?.D.isDown) {\n      this.player.setVelocityX(speed);\n    } else {\n      this.player.setVelocityX(0);\n    }\n\n    if (this.cursors.up.isDown || wasd?.W.isDown) {\n      this.player.setVelocityY(-speed);\n    } else if (this.cursors.down.isDown || wasd?.S.isDown) {\n      this.player.setVelocityY(speed);\n    } else {\n      this.player.setVelocityY(0);\n    }\n  }\n\n  /**\n   * 清理超出邊界的物件\n   */\n  private cleanupObjects(): void {\n    this.clouds.children.entries.forEach((cloud: any) => {\n      if (cloud.x < -100) {\n        const wordText = cloud.getData('wordText');\n        if (wordText) wordText.destroy();\n        cloud.destroy();\n      } else {\n        // 更新文字位置\n        const wordText = cloud.getData('wordText');\n        if (wordText) {\n          wordText.setPosition(cloud.x, cloud.y);\n        }\n      }\n    });\n  }\n}\n"],"names":["BilingualManager","constructor","scene","geptManager","__publicField","this","Map","config","getDefaultConfig","state","getInitialState","accessibilitySettings","getDefaultAccessibilitySettings","initializePromptUI","console","log","position","style","fontSize","fontFamily","color","backgroundColor","padding","x","y","borderRadius","border","animation","fadeIn","duration","ease","fadeOut","bounce","amplitude","isVisible","currentWord","displayMode","lastUpdateTime","contrast","enableVoice","enableKeyboardNav","screenReaderMode","scale","width","height","promptContainer","add","container","setDepth","backgroundRect","rectangle","setStrokeStyle","chineseText","text","align","fontStyle","setOrigin","englishText","updatePromptPosition","setVisible","setAlpha","gameWidth","gameHeight","setPosition","showChinesePrompt","englishWord","targetPosition","word","getWordFromCache","Date","now","setText","chinese","english","adjustBackgroundSize","playShowAnimation","warn","hideChinesePrompt","playHideAnimation","updateTargetWord","wordCache","has","get","findWordByEnglish","set","translationCache","textBounds","getBounds","Math","max","setSize","tweens","targets","alpha","onComplete","playBounceAnimation","originalY","yoyo","repeat","setDisplayMode","mode","applyAccessibilitySettings","settings","updateFontSize","updateContrast","small","medium","large","setFontSize","colors","normal","bg","high","reverse","setFillStyle","setColor","getChineseTranslation","destroy","clear","getState","getStatistics","cacheSize","size","translationCacheSize","currentLevel","getCurrentLevel","ChineseUIManager","bilingualManager","uiElements","initializeUIElements","textConfig","getDefaultTextConfig","createChineseHUD","scoreText","livesText","targetText","statusText","instructionText","stroke","strokeThickness","shadow","offsetX","offsetY","blur","fill","hudContainer","getTextStyle","createTargetDisplay","createInstructionText","targetContainer","targetBg","titleText","updateScore","score","currentScore","updateLives","lives","currentLives","currentTarget","updateGameStatus","status","gameStatus","statusMap","waiting","playing","paused","ended","showSuccessMessage","points","successText","scaleX","scaleY","showErrorMessage","penalty","errorText","updateAllFontSizes","updateAllContrast","Object","values","forEach","element","setStroke","visible","target","keys","key","GameScene","Phaser","Scene","super","isPlaying","isPaused","currentHealth","wordsLearned","accuracy","init","gameConfig","registry","geptLevel","enableSound","enableHapticFeedback","difficulty","gameMode","initializeManagers","GEPTManager","setLevel","memoryEngine","MemoryEnhancementEngine","collisionSystem","CollisionDetectionSystem","enableParticles","enableScreenShake","enableSoundEffects","enableVisualFeedback","particleIntensity","soundVolume","chineseUIManager","preload","loadMoonBackground","planeGraphics","graphics","fillStyle","fillTriangle","generateTexture","cloudGraphics","fillEllipse","lineStyle","strokeEllipse","starGraphics","fillCircle","load","image","error","create","createParallaxBackground","createPlayer","createClouds","createGameHUD","setupInput","setupPhysics","setRandomTargetWord","startCloudSpawning","startGame","createMoonBackgroundLayers","createStarField","backgroundLayers","hasMoonBg1","textures","exists","hasMoonBg2","hasMoonBg3","hasMoon","layer1","tileSprite","push","moon","setScale","layer2","layer3","fillGradientStyle","fillRect","fallbackLayer1","fallbackLayer2","i","Between","star","FloatBetween","player","physics","setCollideWorldBounds","depth","texture","clouds","group","healthText","accuracyText","wordsLearnedText","targetWordText","cursors","input","keyboard","createCursorKeys","wasd","addKeys","overlap","handleAdvancedCollision","randomWord","getRandomWord","currentTargetWord","gameState","targetWordSetTime","setTargetWord","cloudSpawnTimer","time","addEvent","delay","callback","spawnCloud","callbackScope","loop","cloud","setVelocityX","setData","isTarget","wordText","cloudVisible","textVisible","cloudDepth","textDepth","getData","collisionEvent","handleCollision","learningEvent","wordId","id","timestamp","responseTime","isCorrect","type","attemptNumber","totalCollisions","contextData","targetWord","recordLearningEvent","correctCollisions","endGame","updateGameStats","updateUI","sendMessageToParent","health","round","message","window","parent","postMessage","update","_time","_delta","updateParallaxBackground","handlePlayerMovement","updateChineseUI","cleanupObjects","layer","index","speed","tilePositionX","floor","left","isDown","A","right","D","up","W","setVelocityY","down","S","children","entries"],"mappings":"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"}