var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);class i{constructor(){t(this,"wordDatabase",new Map),t(this,"currentLevel","elementary"),this.initializeWordDatabase()}initializeWordDatabase(){this.wordDatabase.set("elementary",[{id:"1",english:"hello",chinese:"你好",level:"elementary",frequency:100},{id:"2",english:"world",chinese:"世界",level:"elementary",frequency:95},{id:"3",english:"book",chinese:"書",level:"elementary",frequency:90},{id:"4",english:"school",chinese:"學校",level:"elementary",frequency:85},{id:"5",english:"friend",chinese:"朋友",level:"elementary",frequency:80},{id:"6",english:"family",chinese:"家庭",level:"elementary",frequency:85},{id:"7",english:"house",chinese:"房子",level:"elementary",frequency:82},{id:"8",english:"water",chinese:"水",level:"elementary",frequency:88},{id:"9",english:"food",chinese:"食物",level:"elementary",frequency:86},{id:"10",english:"time",chinese:"時間",level:"elementary",frequency:92}]),this.wordDatabase.set("intermediate",[{id:"11",english:"environment",chinese:"環境",level:"intermediate",frequency:75},{id:"12",english:"technology",chinese:"技術",level:"intermediate",frequency:78},{id:"13",english:"education",chinese:"教育",level:"intermediate",frequency:80},{id:"14",english:"government",chinese:"政府",level:"intermediate",frequency:72},{id:"15",english:"economy",chinese:"經濟",level:"intermediate",frequency:70}]),this.wordDatabase.set("high-intermediate",[{id:"16",english:"sophisticated",chinese:"複雜的",level:"high-intermediate",frequency:60},{id:"17",english:"phenomenon",chinese:"現象",level:"high-intermediate",frequency:58},{id:"18",english:"hypothesis",chinese:"假設",level:"high-intermediate",frequency:55},{id:"19",english:"methodology",chinese:"方法論",level:"high-intermediate",frequency:52},{id:"20",english:"comprehensive",chinese:"全面的",level:"high-intermediate",frequency:65}]),console.log("📚 GEPT 詞彙數據庫初始化完成")}setLevel(e){this.currentLevel=e,console.log(`📊 設置 GEPT 等級: ${e}`)}getCurrentLevel(){return this.currentLevel}getWordsForLevel(e){return this.wordDatabase.get(e)||[]}getCurrentLevelWords(){return this.getWordsForLevel(this.currentLevel)}getRandomWord(e){const t=e||this.currentLevel,i=this.getWordsForLevel(t);if(0===i.length)return console.warn(`⚠️ 沒有找到 ${t} 等級的詞彙`),null;return i[Math.floor(Math.random()*i.length)]}getRandomWords(e,t){const i=t||this.currentLevel,s=this.getWordsForLevel(i);if(0===s.length)return[];return[...s].sort((()=>.5-Math.random())).slice(0,Math.min(e,s.length))}findWordById(e){for(const[t,i]of this.wordDatabase){const t=i.find((t=>t.id===e));if(t)return t}return null}findWordByEnglish(e){for(const[t,i]of this.wordDatabase){const t=i.find((t=>t.english.toLowerCase()===e.toLowerCase()));if(t)return t}return null}validateWord(e,t){const i=this.findWordByEnglish(e);if(!i)return{isValid:!1,errors:[{type:"gept-compliance",message:`詞彙 "${e}" 不在 GEPT ${t} 詞彙表中`,severity:"error",suggestion:"請使用 GEPT 標準詞彙"}],warnings:[],suggestions:[],geptCompliance:{level:t,score:0,issues:[`詞彙 "${e}" 未找到`]}};const s=i.level===t;return{isValid:s,errors:s?[]:[{type:"gept-compliance",message:`詞彙 "${e}" 屬於 ${i.level} 等級，不符合 ${t} 等級要求`,severity:"warning",suggestion:`建議使用 ${t} 等級詞彙`}],warnings:[],suggestions:[],geptCompliance:{level:i.level,score:s?100:50,issues:s?[]:[`等級不匹配: ${i.level} vs ${t}`]}}}getStatistics(){return{elementary:this.wordDatabase.get("elementary")?.length||0,intermediate:this.wordDatabase.get("intermediate")?.length||0,"high-intermediate":this.wordDatabase.get("high-intermediate")?.length||0}}addWord(e){const t=this.wordDatabase.get(e.level);if(!t)return!1;return t.some((t=>t.english.toLowerCase()===e.english.toLowerCase()))?(console.warn(`⚠️ 詞彙 "${e.english}" 已存在`),!1):(t.push(e),console.log(`✅ 添加詞彙: ${e.english} (${e.level})`),!0)}}class s{constructor(e,i,s){t(this,"scene"),t(this,"geptLevel"),t(this,"effectConfig"),t(this,"targetEnglishWord",""),t(this,"targetChineseWord",""),t(this,"targetSetTime",0),t(this,"collisionHistory",[]),t(this,"correctCollisions",0),t(this,"incorrectCollisions",0),t(this,"particles"),t(this,"screenShakeIntensity",0),this.scene=e,this.geptLevel=i,this.effectConfig=s,this.initializeEffectSystems(),console.log("🎯 碰撞檢測系統初始化完成")}initializeEffectSystems(){this.effectConfig.enableParticles&&this.initializeParticleSystem()}initializeParticleSystem(){const e=this.scene.add.graphics();e.fillStyle(16777215),e.fillCircle(4,4,4),e.generateTexture("particle",8,8),e.destroy(),console.log("✨ 粒子系統初始化完成")}setTargetWord(e,t){this.targetEnglishWord=e,this.targetChineseWord=t,this.targetSetTime=Date.now(),console.log(`🎯 設置目標詞彙: ${e} (${t})`)}handleCollision(e,t,i){const s=Date.now(),r=s-this.targetSetTime,n=i.english===this.targetEnglishWord,o=n?"correct":"incorrect",l={type:o,cloudWord:i.english,targetWord:this.targetEnglishWord,responseTime:r,timestamp:s,playerPosition:{x:e.x,y:e.y},cloudPosition:{x:t.x,y:t.y}};return n?this.correctCollisions++:this.incorrectCollisions++,this.collisionHistory.push(l),this.triggerCollisionEffects(l,t),console.log(`💥 碰撞處理: ${i.english} - ${o}`),l}triggerCollisionEffects(e,t){const{x:i,y:s}=e.cloudPosition;this.effectConfig.enableVisualFeedback&&"neutral"!==e.type&&this.createVisualFeedback(e.type,i,s),this.effectConfig.enableParticles&&"neutral"!==e.type&&this.createParticleEffect(e.type,i,s),this.effectConfig.enableScreenShake&&"neutral"!==e.type&&this.triggerScreenShake(e.type),this.effectConfig.enableSoundEffects&&"neutral"!==e.type&&this.playSoundEffect(e.type)}createVisualFeedback(e,t,i){const s="correct"===e?"#00ff00":"#ff0000",r="correct"===e?"✓":"✗",n=this.scene.add.text(t,i,r,{fontSize:"32px",color:s,fontStyle:"bold"}).setOrigin(.5);this.scene.tweens.add({targets:n,y:i-50,alpha:0,scale:1.5,duration:1e3,ease:"Power2",onComplete:()=>n.destroy()})}createParticleEffect(e,t,i){const s="correct"===e?65280:16711680,r=this.getParticleCount(),n=this.scene.add.particles(t,i,"particle",{speed:{min:50,max:150},scale:{start:.5,end:0},tint:s,lifespan:500,quantity:r});this.scene.time.delayedCall(1e3,(()=>{n.destroy()}))}getParticleCount(){switch(this.effectConfig.particleIntensity){case"low":return 5;case"medium":default:return 10;case"high":return 20}}triggerScreenShake(e){const t="correct"===e?5:10,i="correct"===e?200:400;this.scene.cameras.main&&this.scene.cameras.main.shake(i,t)}playSoundEffect(e){const t="correct"===e?"正確音效":"錯誤音效";console.log(`🔊 播放${t} (音量: ${this.effectConfig.soundVolume})`)}getStatistics(){const e=this.correctCollisions+this.incorrectCollisions,t=e>0?this.correctCollisions/e*100:0,i=this.collisionHistory.reduce(((e,t)=>e+t.responseTime),0),s=this.collisionHistory.length>0?i/this.collisionHistory.length:0;return{correctCollisions:this.correctCollisions,incorrectCollisions:this.incorrectCollisions,totalCollisions:e,accuracy:Math.round(100*t)/100,averageResponseTime:Math.round(s)}}getCollisionHistory(){return[...this.collisionHistory]}resetStatistics(){this.correctCollisions=0,this.incorrectCollisions=0,this.collisionHistory=[],console.log("📊 碰撞統計數據已重置")}updateConfig(e){this.effectConfig={...this.effectConfig,...e},console.log("⚙️ 碰撞檢測配置已更新")}destroy(){this.particles&&this.particles.destroy(),this.collisionHistory=[],console.log("🗑️ 碰撞檢測系統已銷毀")}}class r{constructor(){t(this,"memoryTypes",new Map),t(this,"currentConfiguration"),t(this,"learningHistory",[]),t(this,"memoryMetrics"),this.initializeMemoryTypes(),this.currentConfiguration=this.getDefaultConfiguration(),this.memoryMetrics=this.getInitialMetrics(),console.log("🧠 記憶增強引擎初始化完成")}initializeMemoryTypes(){[{id:"spatial-visual",name:"空間視覺記憶",description:"基於空間位置和視覺特徵的記憶",cognitiveLoad:"medium",memorySystem:"working",neuralBasis:["視覺皮層","頂葉皮層"],enhancementStrategies:["空間配置","顏色編碼","視覺提示"]},{id:"collision-reaction",name:"碰撞反應記憶",description:"基於動作反應的程序性記憶",cognitiveLoad:"high",memorySystem:"procedural",neuralBasis:["小腦","基底神經節"],enhancementStrategies:["重複練習","即時反饋","肌肉記憶"]},{id:"vocabulary-association",name:"詞彙關聯記憶",description:"基於語義關聯的長期記憶",cognitiveLoad:"medium",memorySystem:"long-term",neuralBasis:["海馬體","顳葉皮層"],enhancementStrategies:["語義連結","情境學習","間隔重複"]}].forEach((e=>{this.memoryTypes.set(e.id,e)}))}getDefaultConfiguration(){return{primaryMemoryType:"collision-reaction",secondaryMemoryTypes:["spatial-visual","vocabulary-association"],difficultyLevel:3,timeConstraints:{enabled:!0,duration:5,pressureLevel:"medium"},repetitionSettings:{spacedRepetition:!0,intervalMultiplier:2,maxRepetitions:5},feedbackMechanisms:{immediate:!0,delayed:!1,explanatory:!0,emotional:!0}}}getInitialMetrics(){return{retentionRate:0,recallSpeed:0,errorRate:0,cognitiveLoad:5,engagementLevel:8,learningEfficiency:0}}recordLearningEvent(e){this.learningHistory.push(e),this.updateMetrics(),console.log(`📝 記錄學習事件: ${e.word} - ${e.isCorrect?"正確":"錯誤"}`)}updateMetrics(){if(0===this.learningHistory.length)return;const e=this.learningHistory.slice(-20),t=e.filter((e=>e.isCorrect));this.memoryMetrics.retentionRate=t.length/e.length*100;const i=e.reduce(((e,t)=>e+t.responseTime),0);this.memoryMetrics.recallSpeed=i/e.length,this.memoryMetrics.errorRate=100-this.memoryMetrics.retentionRate,this.memoryMetrics.learningEfficiency=this.calculateLearningEfficiency(),console.log("📊 記憶指標已更新:",this.memoryMetrics)}calculateLearningEfficiency(){if(this.learningHistory.length<5)return 0;const e=this.learningHistory.slice(-10),t=e.slice(0,5),i=e.slice(5),s=t.filter((e=>e.isCorrect)).length/t.length,r=i.filter((e=>e.isCorrect)).length/i.length-s;return Math.max(0,Math.min(100,50*(r+1)))}getPersonalizedRecommendations(){const e=[],t=this.memoryMetrics;return t.retentionRate<60&&(e.push("建議增加重複練習頻率"),e.push("考慮降低難度等級")),t.recallSpeed>3e3&&(e.push("建議進行反應速度訓練"),e.push("可以嘗試更多視覺提示")),t.errorRate>40&&(e.push("建議加強基礎詞彙練習"),e.push("考慮使用更多記憶輔助工具")),t.learningEfficiency<30&&(e.push("建議調整學習策略"),e.push("可以嘗試不同的記憶技巧")),e}getCurrentMetrics(){return{...this.memoryMetrics}}getLearningHistory(){return[...this.learningHistory]}updateConfiguration(e){this.currentConfiguration={...this.currentConfiguration,...e},console.log("⚙️ 記憶增強配置已更新")}getCurrentConfiguration(){return{...this.currentConfiguration}}reset(){this.learningHistory=[],this.memoryMetrics=this.getInitialMetrics(),console.log("🔄 記憶增強引擎已重置")}getMemoryType(e){return this.memoryTypes.get(e)}getAllMemoryTypes(){return Array.from(this.memoryTypes.values())}}export{s as C,i as G,r as M};
//# sourceMappingURL=managers-BDCOAzdU.js.map
