{"version":3,"mappings":";4vBASMA,EAAgBC,UACpB,MAAQC,QAASC,y9BAAcC,EAAAH,UAAA,MAAAC,QAAAC,SAAME,OAAO,+BAAoB,OAAAH,QAAAC,EAAA,GAAAG,0BAChE,OAAOH,CAAA,EAMTF,eAAeM,IACbC,QAAQC,IAAI,4CAEZ,IAEE,MAAMC,EAAiBC,SAASC,eAAe,WAC3CF,IACFA,EAAeG,MAAMC,QAAU,QAIjC,MAAMX,QAAkBH,IAGlBe,EAA4B,CAChCC,UAAW,aACXC,aAAa,EACbC,sBAAsB,EACtBC,WAAY,SACZC,SAAU,YAINC,EAA6C,CACjDC,KAAMC,EAAOC,KACbC,MAAO,IACPC,OAAQ,IACRC,OAAQ,iBACRC,gBAAiB,UAGjBC,QAAS,CACP3B,QAAS,SACT4B,OAAQ,CACNC,QAAS,CAAEC,EAAG,EAAGC,EAAG,GACpBC,OAAO,IAKXC,MAAOhC,EAGPiC,MAAO,CACLC,KAAMd,EAAOe,MAAMC,IACnBC,WAAYjB,EAAOe,MAAMG,YACzBhB,MAAO,IACPC,OAAQ,KAIVgB,MAAO,CACLC,iBAAiB,GAInBC,OAAQ,CACNC,WAAW,EACXC,UAAU,IAKRC,EAAO,IAAIxB,EAAOyB,KAAK3B,GA4B7B,OAzBA0B,EAAKE,SAASC,IAAI,aAAcnC,GAGhCgC,EAAKI,OAAOC,GAAG,SAAUC,IACvB7C,QAAQ6C,MAAM,iBAAkBA,EAAK,IAIvCN,EAAKI,OAAOG,KAAK,SAAS,KACxB9C,QAAQC,IAAI,mCAGR8C,OAAO5B,SAAW4B,QACpBA,OAAO5B,OAAO6B,YAAY,CACxBlC,KAAM,aACNmC,UAAWC,KAAKC,OACf,IACL,IAIoB,oBAAXJ,SACRA,OAAeK,WAAab,GAGxBA,CAET,OAASM,GACP7C,QAAQ6C,MAAM,aAAcA,GAG5B,MAAMQ,EAAgBlD,SAASC,eAAe,kBAkC9C,MAjCIiD,IACFA,EAAcC,UAAY,mdAasBT,aAAiBU,MAAQV,EAAMW,QAAU,iaAmBrFX,CACR,CACF,CAG4B,YAAxB1C,SAASsD,WACXtD,SAASuD,iBAAiB,mBAAoB3D,GAE9CA","names":["loadGameScene","async","default","GameScene","__vitePreload","import","__VITE_PRELOAD__","initGame","console","log","loadingElement","document","getElementById","style","display","defaultConfig","geptLevel","enableSound","enableHapticFeedback","difficulty","gameMode","phaserConfig","type","Phaser","AUTO","width","height","parent","backgroundColor","physics","arcade","gravity","x","y","debug","scene","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","audio","disableWebAudio","render","antialias","pixelArt","game","Game","registry","set","events","on","error","once","window","postMessage","timestamp","Date","now","phaserGame","gameContainer","innerHTML","Error","message","readyState","addEventListener"],"ignoreList":[],"sources":["../src/main.ts"],"sourcesContent":["/**\n * Airplane Collision Game - Vite + Phaser 3 入口點\n * 基於記憶科學的英語詞彙學習遊戲\n */\n\nimport Phaser from 'phaser';\nimport { GameConfig } from './types/game';\n\n// 動態導入場景（避免循環依賴）\nconst loadGameScene = async () => {\n  const { default: GameScene } = await import('./scenes/GameScene');\n  return GameScene;\n};\n\n/**\n * 初始化 Phaser 遊戲\n */\nasync function initGame() {\n  console.log('🎮 初始化 Airplane Collision Game - Vite 版本');\n  \n  try {\n    // 隱藏載入畫面\n    const loadingElement = document.getElementById('loading');\n    if (loadingElement) {\n      loadingElement.style.display = 'none';\n    }\n    \n    // 載入遊戲場景\n    const GameScene = await loadGameScene();\n    \n    // 默認遊戲配置\n    const defaultConfig: GameConfig = {\n      geptLevel: 'elementary',\n      enableSound: true,\n      enableHapticFeedback: true,\n      difficulty: 'medium',\n      gameMode: 'practice'\n    };\n    \n    // Phaser 遊戲配置\n    const phaserConfig: Phaser.Types.Core.GameConfig = {\n      type: Phaser.AUTO,\n      width: 800,\n      height: 600,\n      parent: 'game-container',\n      backgroundColor: '#000033',\n      \n      // 物理引擎配置\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: { x: 0, y: 0 },\n          debug: false\n        }\n      },\n      \n      // 場景配置\n      scene: GameScene,\n      \n      // 縮放配置\n      scale: {\n        mode: Phaser.Scale.FIT,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        width: 800,\n        height: 600\n      },\n      \n      // 音頻配置\n      audio: {\n        disableWebAudio: false\n      },\n      \n      // 渲染配置\n      render: {\n        antialias: true,\n        pixelArt: false\n      }\n    };\n    \n    // 創建 Phaser 遊戲實例\n    const game = new Phaser.Game(phaserConfig);\n    \n    // 將配置傳遞給場景\n    game.registry.set('gameConfig', defaultConfig);\n    \n    // 設置全局錯誤處理\n    game.events.on('error', (error: Error) => {\n      console.error('❌ Phaser 遊戲錯誤:', error);\n    });\n    \n    // 遊戲就緒回調\n    game.events.once('ready', () => {\n      console.log('✅ Airplane Collision Game 初始化完成');\n      \n      // 向父頁面發送就緒消息\n      if (window.parent !== window) {\n        window.parent.postMessage({\n          type: 'GAME_READY',\n          timestamp: Date.now()\n        }, '*');\n      }\n    });\n    \n    // 將遊戲實例暴露到全局（用於調試）\n    if (typeof window !== 'undefined') {\n      (window as any).phaserGame = game;\n    }\n    \n    return game;\n    \n  } catch (error) {\n    console.error('❌ 遊戲初始化失敗:', error);\n    \n    // 顯示錯誤信息\n    const gameContainer = document.getElementById('game-container');\n    if (gameContainer) {\n      gameContainer.innerHTML = `\n        <div style=\"\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          height: 100%;\n          color: white;\n          text-align: center;\n          padding: 20px;\n        \">\n          <h2 style=\"color: #ff6b6b; margin-bottom: 16px;\">⚠️ 遊戲載入失敗</h2>\n          <p style=\"margin-bottom: 16px;\">無法初始化 Phaser 遊戲引擎</p>\n          <p style=\"font-size: 14px; opacity: 0.7;\">${error instanceof Error ? error.message : '未知錯誤'}</p>\n          <button \n            onclick=\"location.reload()\" \n            style=\"\n              margin-top: 20px;\n              padding: 10px 20px;\n              background: #4CAF50;\n              color: white;\n              border: none;\n              border-radius: 4px;\n              cursor: pointer;\n            \"\n          >\n            重新載入\n          </button>\n        </div>\n      `;\n    }\n    \n    throw error;\n  }\n}\n\n// 等待 DOM 載入完成後初始化遊戲\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initGame);\n} else {\n  initGame();\n}\n\n// 導出初始化函數（用於測試）\nexport { initGame };\n"],"file":"main-af6Jg_O_.js"}