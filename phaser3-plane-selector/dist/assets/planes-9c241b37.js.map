{"version":3,"file":"planes-9c241b37.js","sources":["../../src/planes/PlaneManager.ts","../../src/planes/PlaneRenderer.ts"],"sourcesContent":["import { PlaneConfig, IPlaneManager, PlaneSelectionEvent } from '../types/planes';\nimport { ALL_PLANE_CONFIGS } from './configs/index';\nimport { ASSET_KEYS, GAME_EVENTS } from '../game/config/gameConfig';\n\nexport class PlaneManager implements IPlaneManager {\n  private currentPlaneId: string = 'b17';\n  private planes: Map<string, PlaneConfig> = new Map();\n  private eventEmitter: Phaser.Events.EventEmitter;\n  // private _scene: Phaser.Scene | null = null;\n\n  constructor(_scene?: Phaser.Scene) {\n    this.eventEmitter = new Phaser.Events.EventEmitter();\n    // this._scene = scene || null;\n    this.initializePlanes();\n  }\n\n  private initializePlanes() {\n    // 載入所有飛機配置到 Map 中\n    ALL_PLANE_CONFIGS.forEach(config => {\n      if (this.validatePlaneConfig(config)) {\n        this.planes.set(config.id, config);\n      } else {\n        console.warn(`⚠️ 飛機配置驗證失敗: ${config.id}`);\n      }\n    });\n\n    console.log(`✅ 飛機管理器初始化完成，載入 ${this.planes.size} 架飛機`);\n  }\n\n  private validatePlaneConfig(config: PlaneConfig): boolean {\n    // 基本欄位驗證\n    if (!config.id || !config.name || !config.displayName) {\n      console.error('❌ 飛機配置缺少必要欄位:', config);\n      return false;\n    }\n\n    // 數值範圍驗證\n    if (config.speed <= 0 || config.fireRate <= 0 || config.health <= 0) {\n      console.error('❌ 飛機配置數值無效:', config);\n      return false;\n    }\n\n    // 縮放比例驗證\n    if (config.scale <= 0 || config.scale > 3) {\n      console.error('❌ 飛機縮放比例無效:', config);\n      return false;\n    }\n\n    // 顏色格式驗證\n    if (!config.color.match(/^#[0-9A-Fa-f]{6}$/)) {\n      console.error('❌ 飛機顏色格式無效:', config);\n      return false;\n    }\n\n    return true;\n  }\n\n  public getCurrentPlane(): PlaneConfig {\n    const plane = this.planes.get(this.currentPlaneId);\n    if (!plane) {\n      console.error(`❌ 找不到當前飛機: ${this.currentPlaneId}`);\n      return this.planes.values().next().value || ALL_PLANE_CONFIGS[0]; // 返回第一架飛機作為備用\n    }\n    return plane;\n  }\n\n  public setCurrentPlane(planeId: string): void {\n    const previousPlane = this.getCurrentPlane();\n    \n    if (!this.planes.has(planeId)) {\n      console.error(`❌ 飛機不存在: ${planeId}`);\n      return;\n    }\n\n    this.currentPlaneId = planeId;\n    const currentPlane = this.getCurrentPlane();\n\n    // 發送飛機選擇事件\n    const event: PlaneSelectionEvent = {\n      previousPlane,\n      currentPlane,\n      timestamp: Date.now()\n    };\n\n    this.eventEmitter.emit(GAME_EVENTS.PLANE_SELECTED, event);\n    console.log(`✈️ 切換飛機: ${previousPlane.displayName} → ${currentPlane.displayName}`);\n  }\n\n  public getAllPlanes(): PlaneConfig[] {\n    return Array.from(this.planes.values());\n  }\n\n  public getPlaneById(id: string): PlaneConfig | null {\n    return this.planes.get(id) || null;\n  }\n\n  public getPlanesByType(type: string): PlaneConfig[] {\n    return this.getAllPlanes().filter(plane => plane.type === type);\n  }\n\n  public createPlaneSprite(scene: Phaser.Scene, config: PlaneConfig): Phaser.GameObjects.Sprite {\n    // 創建射手精靈（使用第0幀）\n    const sprite = scene.add.sprite(0, 0, 'shooter-sprite', 0);\n\n    // 設置射手縮放（縮小100%，再縮小50%）\n    const adjustedScale = config.scale * 0.5 * 0.5; // 再縮小50%\n\n    // 設置射手旋轉（轉向180度）\n    sprite.setRotation(Math.PI); // 180度 = π弧度\n\n    // 設置上下翻轉和縮放\n    sprite.setScale(adjustedScale, -adjustedScale); // Y軸負值實現上下翻轉\n\n    // 不對射手精靈應用tint，保持原始顏色\n\n    // 設置射手的自定義屬性\n    sprite.setData('planeConfig', config);\n    sprite.setData('planeId', config.id);\n\n    // 創建射手動畫\n    this.createShooterAnimation(scene, config.id);\n\n    console.log(`🎯 射手設置: ${config.displayName} - 縮放: ${adjustedScale}, 旋轉: 180度, 上下翻轉, 4幀動畫`);\n\n    return sprite;\n  }\n\n  private createShooterAnimation(scene: Phaser.Scene, planeId: string) {\n    // 創建射手的4幀動畫\n    const animKey = `shooter-${planeId}`;\n\n    if (!scene.anims.exists(animKey)) {\n      scene.anims.create({\n        key: animKey,\n        frames: scene.anims.generateFrameNumbers('shooter-sprite', { start: 0, end: 3 }),\n        frameRate: 8,\n        repeat: -1\n      });\n\n      console.log(`🎬 創建射手動畫: ${animKey} (4幀循環)`);\n    }\n  }\n\n  private getPlaneTextureKey(config: PlaneConfig): string {\n    // 根據飛機 ID 返回對應的資源鍵值\n    const textureMap: { [key: string]: string } = {\n      'b17': ASSET_KEYS.PLANES.B17,\n      'bf109': ASSET_KEYS.PLANES.BF109,\n      'biplane': ASSET_KEYS.PLANES.BIPLANE,\n      'tbm3': ASSET_KEYS.PLANES.TBM3,\n      'hawker': ASSET_KEYS.PLANES.HAWKER,\n      'ju87': ASSET_KEYS.PLANES.JU87,\n      'blenheim': ASSET_KEYS.PLANES.BLENHEIM\n    };\n\n    return textureMap[config.id] || 'plane-placeholder';\n  }\n\n  public getPlaneStats(planeId: string) {\n    const config = this.getPlaneById(planeId);\n    if (!config) return null;\n\n    return {\n      id: config.id,\n      name: config.displayName,\n      type: config.type,\n      performance: {\n        speed: config.speed,\n        fireRate: config.fireRate,\n        health: config.health,\n        damage: config.damage\n      },\n      abilities: config.abilities || []\n    };\n  }\n\n  public getRecommendedPlane(playerStyle: 'aggressive' | 'defensive' | 'balanced'): PlaneConfig {\n    const planes = this.getAllPlanes();\n    \n    switch (playerStyle) {\n      case 'aggressive':\n        // 推薦高速、高傷害的飛機\n        return planes.reduce((best, current) => \n          (current.speed + current.damage) > (best.speed + best.damage) ? current : best\n        );\n      \n      case 'defensive':\n        // 推薦高生命值、低射擊頻率的飛機\n        return planes.reduce((best, current) => \n          (current.health + (1000 - current.fireRate)) > (best.health + (1000 - best.fireRate)) ? current : best\n        );\n      \n      case 'balanced':\n      default:\n        // 推薦平衡型飛機\n        return planes.reduce((best, current) => {\n          const currentScore = (current.speed + current.health + current.damage) / 3;\n          const bestScore = (best.speed + best.health + best.damage) / 3;\n          return currentScore > bestScore ? current : best;\n        });\n    }\n  }\n\n  public on(event: string, callback: Function, context?: any): void {\n    this.eventEmitter.on(event, callback, context);\n  }\n\n  public off(event: string, callback?: Function, context?: any): void {\n    this.eventEmitter.off(event, callback, context);\n  }\n\n  public emit(event: string, ...args: any[]): void {\n    this.eventEmitter.emit(event, ...args);\n  }\n\n  public destroy(): void {\n    this.eventEmitter.removeAllListeners();\n    this.planes.clear();\n    // this._scene = null;\n  }\n\n  // 靜態方法：創建單例實例\n  private static instance: PlaneManager | null = null;\n\n  public static getInstance(scene?: Phaser.Scene): PlaneManager {\n    if (!PlaneManager.instance) {\n      PlaneManager.instance = new PlaneManager(scene);\n    }\n    return PlaneManager.instance;\n  }\n\n  public static destroyInstance(): void {\n    if (PlaneManager.instance) {\n      PlaneManager.instance.destroy();\n      PlaneManager.instance = null;\n    }\n  }\n}\n","import { PlaneConfig, IPlaneRenderer, PlaneGraphicsConfig } from '../types/planes';\n\nexport class PlaneRenderer implements IPlaneRenderer {\n  // private _scene: Phaser.Scene;\n  private textureCache: Map<string, Phaser.Textures.Texture> = new Map();\n\n  constructor(_scene: Phaser.Scene) {\n    // this._scene = scene;\n  }\n\n  public renderPlane(graphics: Phaser.GameObjects.Graphics, config: PlaneConfig): void {\n    graphics.clear();\n    \n    const graphicsConfig: PlaneGraphicsConfig = {\n      width: 64,\n      height: 64,\n      centerX: 32,\n      centerY: 32,\n      colors: this.getPlaneColors(config)\n    };\n\n    // 根據飛機類型選擇渲染方法\n    switch (config.id) {\n      case 'b17':\n        this.renderB17(graphics, graphicsConfig);\n        break;\n      case 'bf109':\n        this.renderBF109(graphics, graphicsConfig);\n        break;\n      case 'biplane':\n        this.renderBiplane(graphics, graphicsConfig);\n        break;\n      case 'tbm3':\n        this.renderTBM3(graphics, graphicsConfig);\n        break;\n      case 'hawker':\n        this.renderHawker(graphics, graphicsConfig);\n        break;\n      case 'ju87':\n        this.renderJU87(graphics, graphicsConfig);\n        break;\n      case 'blenheim':\n        this.renderBlenheim(graphics, graphicsConfig);\n        break;\n      default:\n        this.renderDefaultPlane(graphics, graphicsConfig);\n    }\n  }\n\n  public createPlaneTexture(scene: Phaser.Scene, config: PlaneConfig): Phaser.Textures.Texture {\n    const textureKey = `plane-texture-${config.id}`;\n    \n    // 檢查快取\n    if (this.textureCache.has(textureKey)) {\n      return this.textureCache.get(textureKey)!;\n    }\n\n    // 創建渲染目標\n    const renderTexture = scene.add.renderTexture(0, 0, 64, 64);\n    const graphics = scene.add.graphics();\n    \n    // 渲染飛機\n    this.renderPlane(graphics, config);\n    \n    // 將圖形渲染到紋理\n    renderTexture.draw(graphics);\n    \n    // 生成紋理\n    const texture = renderTexture.saveTexture(textureKey);\n    \n    // 清理臨時物件\n    graphics.destroy();\n    renderTexture.destroy();\n    \n    // 快取紋理\n    this.textureCache.set(textureKey, texture);\n    \n    return texture;\n  }\n\n  public updatePlaneGraphics(graphics: Phaser.GameObjects.Graphics, config: PlaneConfig): void {\n    this.renderPlane(graphics, config);\n  }\n\n  private getPlaneColors(config: PlaneConfig) {\n    const baseColor = config.color;\n    return {\n      primary: baseColor,\n      secondary: this.darkenColor(baseColor, 0.2),\n      accent: this.lightenColor(baseColor, 0.3),\n      detail: '#374151'\n    };\n  }\n\n  private darkenColor(color: string, amount: number): string {\n    const hex = color.replace('#', '');\n    const r = Math.max(0, parseInt(hex.substr(0, 2), 16) * (1 - amount));\n    const g = Math.max(0, parseInt(hex.substr(2, 2), 16) * (1 - amount));\n    const b = Math.max(0, parseInt(hex.substr(4, 2), 16) * (1 - amount));\n    return `#${Math.round(r).toString(16).padStart(2, '0')}${Math.round(g).toString(16).padStart(2, '0')}${Math.round(b).toString(16).padStart(2, '0')}`;\n  }\n\n  private lightenColor(color: string, amount: number): string {\n    const hex = color.replace('#', '');\n    const r = Math.min(255, parseInt(hex.substr(0, 2), 16) + (255 * amount));\n    const g = Math.min(255, parseInt(hex.substr(2, 2), 16) + (255 * amount));\n    const b = Math.min(255, parseInt(hex.substr(4, 2), 16) + (255 * amount));\n    return `#${Math.round(r).toString(16).padStart(2, '0')}${Math.round(g).toString(16).padStart(2, '0')}${Math.round(b).toString(16).padStart(2, '0')}`;\n  }\n\n  private renderB17(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n\n    // 主機身 (深藍色，圓角)\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillRoundedRect(centerX - 4, centerY - 20, 8, 40, 2);\n\n    // 機身中段加寬\n    graphics.fillStyle(parseInt(colors.accent.replace('#', '0x')));\n    graphics.fillRoundedRect(centerX - 5, centerY - 10, 10, 20, 1.5);\n\n    // 機身細節條紋\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    for (let i = -18; i < 18; i += 4) {\n      graphics.fillRect(centerX - 3, centerY + i, 6, 1);\n    }\n\n    // 主機翼 (梯形)\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.beginPath();\n    graphics.moveTo(centerX - 20, centerY - 4);\n    graphics.lineTo(centerX - 18, centerY - 6);\n    graphics.lineTo(centerX + 18, centerY - 6);\n    graphics.lineTo(centerX + 20, centerY - 4);\n    graphics.lineTo(centerX + 18, centerY + 4);\n    graphics.lineTo(centerX - 18, centerY + 4);\n    graphics.closePath();\n    graphics.fillPath();\n\n    // 機翼細節\n    graphics.fillStyle(parseInt(colors.accent.replace('#', '0x')));\n    graphics.beginPath();\n    graphics.moveTo(centerX - 18, centerY - 5);\n    graphics.lineTo(centerX + 18, centerY - 5);\n    graphics.lineTo(centerX + 15, centerY + 3);\n    graphics.lineTo(centerX - 15, centerY + 3);\n    graphics.closePath();\n    graphics.fillPath();\n\n    // 四個引擎 (詳細設計)\n    const enginePositions = [-14, -7, 7, 14];\n    enginePositions.forEach(pos => {\n      // 引擎主體\n      graphics.fillStyle(parseInt(colors.detail.replace('#', '0x')));\n      graphics.fillRoundedRect(centerX + pos - 2, centerY - 3, 4, 6, 1);\n\n      // 引擎進氣口\n      graphics.fillStyle(0x111827);\n      graphics.fillEllipse(centerX + pos, centerY - 4, 1.5, 1);\n\n      // 螺旋槳\n      graphics.lineStyle(1, 0xfbbf24);\n      graphics.strokeEllipse(centerX + pos, centerY - 5, 3, 0.5);\n      graphics.strokeEllipse(centerX + pos, centerY - 5, 0.5, 3);\n    });\n\n    // 機頭 (圓錐形)\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillTriangle(centerX, centerY - 23, centerX - 4, centerY - 18, centerX + 4, centerY - 18);\n\n    // 駕駛艙 (透明玻璃效果)\n    graphics.fillStyle(0x93c5fd, 0.8);\n    graphics.fillRoundedRect(centerX - 2.5, centerY - 13, 5, 8, 1.5);\n\n    // 駕駛艙框架\n    graphics.lineStyle(0.5, parseInt(colors.detail.replace('#', '0x')));\n    graphics.strokeRoundedRect(centerX - 2.5, centerY - 13, 5, 8, 1.5);\n\n    // 機尾垂直尾翼\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillTriangle(centerX, centerY + 18, centerX - 3, centerY + 23, centerX + 3, centerY + 23);\n\n    // 水平尾翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillRoundedRect(centerX - 6, centerY + 16, 12, 3, 1);\n\n    // 機身窗戶\n    graphics.fillStyle(0x93c5fd, 0.6);\n    const windowPositions = [-8, -3, 3, 8];\n    windowPositions.forEach(pos => {\n      graphics.fillEllipse(centerX + 3.5, centerY + pos, 1, 1.5);\n      graphics.fillEllipse(centerX - 3.5, centerY + pos, 1, 1.5);\n    });\n  }\n\n  private renderBF109(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 流線型機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY, 6, 35);\n    \n    // 機翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY - 2, 32, 8);\n    \n    // 引擎罩\n    graphics.fillStyle(parseInt(colors.detail.replace('#', '0x')));\n    graphics.fillCircle(centerX, centerY - 20, 4);\n    \n    // 螺旋槳\n    graphics.lineStyle(2, parseInt(colors.accent.replace('#', '0x')));\n    graphics.strokeCircle(centerX, centerY - 24, 6);\n    \n    // 駕駛艙\n    graphics.fillStyle(0x93c5fd, 0.8);\n    graphics.fillEllipse(centerX, centerY - 8, 4, 8);\n  }\n\n  private renderBiplane(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillRoundedRect(centerX - 2, centerY - 15, 4, 30, 2);\n    \n    // 上翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillRect(centerX - 15, centerY - 10, 30, 4);\n    \n    // 下翼\n    graphics.fillRect(centerX - 15, centerY + 4, 30, 4);\n    \n    // 翼間支柱\n    graphics.lineStyle(1, parseInt(colors.detail.replace('#', '0x')));\n    [-10, 0, 10].forEach(offset => {\n      graphics.lineBetween(centerX + offset, centerY - 8, centerX + offset, centerY + 6);\n    });\n    \n    // 螺旋槳\n    graphics.fillStyle(parseInt(colors.accent.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY - 20, 8, 2);\n    graphics.fillEllipse(centerX, centerY - 20, 2, 8);\n  }\n\n  private renderTBM3(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 粗壯機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY, 8, 32);\n    \n    // 寬大機翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY - 2, 36, 10);\n    \n    // 引擎罩\n    graphics.fillStyle(parseInt(colors.detail.replace('#', '0x')));\n    graphics.fillCircle(centerX, centerY - 20, 5);\n    \n    // 魚雷掛架\n    graphics.fillRect(centerX - 1, centerY + 8, 2, 6);\n    graphics.fillRoundedRect(centerX - 2, centerY + 12, 4, 8, 1);\n  }\n\n  private renderHawker(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 流線型機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY, 5, 30);\n    \n    // 橢圓翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY - 2, 28, 8);\n    \n    // 引擎進氣口\n    graphics.fillStyle(parseInt(colors.detail.replace('#', '0x')));\n    graphics.fillRect(centerX - 2, centerY - 15, 4, 2);\n    \n    // 四葉螺旋槳\n    graphics.lineStyle(1, parseInt(colors.accent.replace('#', '0x')));\n    for (let i = 0; i < 4; i++) {\n      const angle = (i * 90) * Math.PI / 180;\n      const x1 = centerX + Math.cos(angle) * 6;\n      const y1 = centerY - 22 + Math.sin(angle) * 6;\n      graphics.lineBetween(centerX, centerY - 22, x1, y1);\n    }\n  }\n\n  private renderJU87(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY, 6, 28);\n    \n    // 倒海鷗翼\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    // 使用簡化的多邊形代替曲線\n    graphics.beginPath();\n    graphics.moveTo(centerX - 4, centerY - 2);\n    graphics.lineTo(centerX - 10, centerY - 6);\n    graphics.lineTo(centerX - 16, centerY - 2);\n    graphics.lineTo(centerX - 10, centerY + 4);\n    graphics.lineTo(centerX - 4, centerY + 2);\n    graphics.moveTo(centerX + 4, centerY - 2);\n    graphics.lineTo(centerX + 10, centerY - 6);\n    graphics.lineTo(centerX + 16, centerY - 2);\n    graphics.lineTo(centerX + 10, centerY + 4);\n    graphics.lineTo(centerX + 4, centerY + 2);\n    graphics.fillPath();\n    \n    // 固定起落架\n    graphics.fillStyle(parseInt(colors.detail.replace('#', '0x')));\n    graphics.fillRect(centerX - 12, centerY + 4, 2, 6);\n    graphics.fillRect(centerX + 10, centerY + 4, 2, 6);\n  }\n\n  private renderBlenheim(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 機身\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillEllipse(centerX, centerY, 6, 32);\n    \n    // 雙引擎艙\n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillEllipse(centerX - 8, centerY - 4, 4, 8);\n    graphics.fillEllipse(centerX + 8, centerY - 4, 4, 8);\n    \n    // 機翼連接引擎艙\n    graphics.fillRect(centerX - 12, centerY - 6, 24, 4);\n    \n    // 雙螺旋槳\n    graphics.lineStyle(1, parseInt(colors.accent.replace('#', '0x')));\n    graphics.strokeCircle(centerX - 8, centerY - 12, 4);\n    graphics.strokeCircle(centerX + 8, centerY - 12, 4);\n  }\n\n  private renderDefaultPlane(graphics: Phaser.GameObjects.Graphics, config: PlaneGraphicsConfig): void {\n    const { centerX, centerY, colors } = config;\n    \n    // 簡單的預設飛機形狀\n    graphics.fillStyle(parseInt(colors.primary.replace('#', '0x')));\n    graphics.fillTriangle(centerX, centerY - 15, centerX - 8, centerY + 10, centerX + 8, centerY + 10);\n    \n    graphics.fillStyle(parseInt(colors.secondary.replace('#', '0x')));\n    graphics.fillRect(centerX - 12, centerY - 2, 24, 4);\n  }\n\n  public destroy(): void {\n    this.textureCache.clear();\n  }\n}\n"],"names":["_PlaneManager","constructor","_scene","this","currentPlaneId","planes","Map","eventEmitter","Phaser","Events","EventEmitter","initializePlanes","ALL_PLANE_CONFIGS","forEach","config","validatePlaneConfig","set","id","console","warn","log","size","name","displayName","speed","fireRate","health","error","scale","color","match","getCurrentPlane","plane","get","values","next","value","setCurrentPlane","planeId","previousPlane","has","currentPlane","event","timestamp","Date","now","emit","GAME_EVENTS","PLANE_SELECTED","getAllPlanes","Array","from","getPlaneById","getPlanesByType","type","filter","createPlaneSprite","scene","sprite","add","adjustedScale","setRotation","Math","PI","setScale","setData","createShooterAnimation","animKey","anims","exists","create","key","frames","generateFrameNumbers","start","end","frameRate","repeat","getPlaneTextureKey","b17","ASSET_KEYS","PLANES","B17","bf109","BF109","biplane","BIPLANE","tbm3","TBM3","hawker","HAWKER","ju87","JU87","blenheim","BLENHEIM","getPlaneStats","performance","damage","abilities","getRecommendedPlane","playerStyle","reduce","best","current","on","callback","context","off","args","destroy","removeAllListeners","clear","getInstance","instance","destroyInstance","PlaneManager","PlaneRenderer","textureCache","renderPlane","graphics","graphicsConfig","width","height","centerX","centerY","colors","getPlaneColors","renderB17","renderBF109","renderBiplane","renderTBM3","renderHawker","renderJU87","renderBlenheim","renderDefaultPlane","createPlaneTexture","textureKey","renderTexture","draw","texture","saveTexture","updatePlaneGraphics","baseColor","primary","secondary","darkenColor","accent","lightenColor","detail","amount","hex","replace","r","max","parseInt","substr","g","b","round","toString","padStart","min","fillStyle","fillRoundedRect","i","fillRect","beginPath","moveTo","lineTo","closePath","fillPath","pos","fillEllipse","lineStyle","strokeEllipse","fillTriangle","strokeRoundedRect","fillCircle","strokeCircle","offset","lineBetween","angle","x1","cos","y1","sin"],"mappings":"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"}