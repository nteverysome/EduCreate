{"version":3,"file":"game-b51d85e0.js","sources":["../../src/game/systems/InputManager.ts","../../src/planes/configs/index.ts","../../src/ui/components/Panel.ts","../../src/ui/GameHUD.ts","../../src/game/scenes/GameScene.ts","../../src/ui/components/Button.ts","../../src/ui/PlaneSelector.ts","../../src/game/scenes/MenuScene.ts","../../src/game/scenes/LoadingScene.ts","../../src/game/config/gameConfig.ts"],"sourcesContent":["import Phaser from 'phaser';\nimport { INPUT_KEYS, GAME_EVENTS } from '../config/gameConfig';\n\nexport interface InputState {\n  movement: {\n    up: boolean;\n    down: boolean;\n    left: boolean;\n    right: boolean;\n  };\n  actions: {\n    fire: boolean;\n    restart: boolean;\n  };\n  planeSelection: {\n    [key: string]: boolean;\n  };\n}\n\nexport class InputManager {\n  private scene: Phaser.Scene;\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  private keys: { [key: string]: Phaser.Input.Keyboard.Key } = {};\n  private inputState: InputState;\n  private eventEmitter: Phaser.Events.EventEmitter;\n  \n  // 輸入緩衝和防抖\n  private inputBuffer: Map<string, number> = new Map();\n  private debounceDelay: number = 100; // 100ms 防抖延遲\n  \n  // 組合鍵支援\n  private keyComboBuffer: string[] = [];\n  private comboTimeout: number = 1000; // 1秒組合鍵超時\n\n  constructor(scene: Phaser.Scene) {\n    this.scene = scene;\n    this.eventEmitter = new Phaser.Events.EventEmitter();\n    \n    this.inputState = {\n      movement: { up: false, down: false, left: false, right: false },\n      actions: { fire: false, restart: false },\n      planeSelection: {}\n    };\n    \n    this.setupKeyboard();\n    this.setupMouse();\n    this.setupGamepad();\n  }\n\n  private setupKeyboard() {\n    if (!this.scene.input.keyboard) return;\n    \n    // 設置方向鍵\n    this.cursors = this.scene.input.keyboard.createCursorKeys();\n    \n    // 設置動作鍵\n    this.keys.fire = this.scene.input.keyboard.addKey(INPUT_KEYS.FIRE);\n    this.keys.restart = this.scene.input.keyboard.addKey(INPUT_KEYS.RESTART);\n    \n    // 設置飛機選擇鍵 (1-7)\n    for (let i = 1; i <= 7; i++) {\n      const keyName = `PLANE_${i}`;\n      this.keys[keyName] = this.scene.input.keyboard.addKey(`DIGIT${i}`);\n    }\n    \n    // 設置 WASD 作為替代移動鍵\n    this.keys.w = this.scene.input.keyboard.addKey('W');\n    this.keys.a = this.scene.input.keyboard.addKey('A');\n    this.keys.s = this.scene.input.keyboard.addKey('S');\n    this.keys.d = this.scene.input.keyboard.addKey('D');\n    \n    // 設置事件監聽\n    this.setupKeyboardEvents();\n  }\n\n  private setupKeyboardEvents() {\n    // 飛機選擇事件\n    for (let i = 1; i <= 7; i++) {\n      const keyName = `PLANE_${i}`;\n      if (this.keys[keyName]) {\n        this.keys[keyName].on('down', () => {\n          if (this.canProcessInput(keyName)) {\n            this.eventEmitter.emit(GAME_EVENTS.PLANE_SELECTED, i - 1);\n            this.recordInput(keyName);\n          }\n        });\n      }\n    }\n    \n    // 重新開始事件\n    this.keys.restart?.on('down', () => {\n      if (this.canProcessInput('restart')) {\n        this.eventEmitter.emit('restart-game');\n        this.recordInput('restart');\n      }\n    });\n    \n    // 組合鍵檢測\n    this.scene.input.keyboard?.on('keydown', (event: KeyboardEvent) => {\n      this.handleKeyCombo(event.code);\n    });\n  }\n\n  private setupMouse() {\n    // 滑鼠點擊射擊\n    this.scene.input.on('pointerdown', (pointer: Phaser.Input.Pointer) => {\n      if (pointer.leftButtonDown()) {\n        this.inputState.actions.fire = true;\n        this.eventEmitter.emit('fire-weapon');\n      }\n    });\n    \n    this.scene.input.on('pointerup', (pointer: Phaser.Input.Pointer) => {\n      if (!pointer.leftButtonDown()) {\n        this.inputState.actions.fire = false;\n      }\n    });\n    \n    // 滑鼠移動控制 (可選)\n    this.scene.input.on('pointermove', (pointer: Phaser.Input.Pointer) => {\n      if (pointer.isDown) {\n        this.eventEmitter.emit('mouse-move', {\n          x: pointer.x,\n          y: pointer.y,\n          worldX: pointer.worldX,\n          worldY: pointer.worldY\n        });\n      }\n    });\n  }\n\n  private setupGamepad() {\n    // 遊戲手把支援\n    this.scene.input.gamepad?.on('connected', (pad: Phaser.Input.Gamepad.Gamepad) => {\n      console.log(`🎮 遊戲手把已連接: ${pad.id}`);\n      this.setupGamepadControls(pad);\n    });\n  }\n\n  private setupGamepadControls(pad: Phaser.Input.Gamepad.Gamepad) {\n    // 左搖桿移動\n    pad.on('down', (index: number, _value: number, _button: Phaser.Input.Gamepad.Button) => {\n      switch (index) {\n        case 0: // A 按鈕 - 射擊\n          this.inputState.actions.fire = true;\n          this.eventEmitter.emit('fire-weapon');\n          break;\n        case 1: // B 按鈕 - 特殊能力\n          this.eventEmitter.emit('special-ability');\n          break;\n        case 9: // Start 按鈕 - 重新開始\n          this.eventEmitter.emit('restart-game');\n          break;\n      }\n    });\n    \n    pad.on('up', (index: number, _value: number, _button: Phaser.Input.Gamepad.Button) => {\n      switch (index) {\n        case 0: // A 按鈕釋放\n          this.inputState.actions.fire = false;\n          break;\n      }\n    });\n  }\n\n  public update() {\n    this.updateMovementState();\n    this.updateActionState();\n    this.cleanupInputBuffer();\n  }\n\n  private updateMovementState() {\n    // 更新移動狀態 (方向鍵 + WASD)\n    this.inputState.movement.up = this.cursors.up.isDown || this.keys.w?.isDown || false;\n    this.inputState.movement.down = this.cursors.down.isDown || this.keys.s?.isDown || false;\n    this.inputState.movement.left = this.cursors.left.isDown || this.keys.a?.isDown || false;\n    this.inputState.movement.right = this.cursors.right.isDown || this.keys.d?.isDown || false;\n    \n    // 遊戲手把搖桿支援\n    const gamepad = this.scene.input.gamepad?.getPad(0);\n    if (gamepad) {\n      const leftStick = gamepad.leftStick;\n      if (leftStick.x < -0.5) this.inputState.movement.left = true;\n      if (leftStick.x > 0.5) this.inputState.movement.right = true;\n      if (leftStick.y < -0.5) this.inputState.movement.up = true;\n      if (leftStick.y > 0.5) this.inputState.movement.down = true;\n    }\n  }\n\n  private updateActionState() {\n    this.inputState.actions.fire = this.keys.fire?.isDown || false;\n    this.inputState.actions.restart = this.keys.restart?.isDown || false;\n  }\n\n  private canProcessInput(inputKey: string): boolean {\n    const now = Date.now();\n    const lastInput = this.inputBuffer.get(inputKey) || 0;\n    return (now - lastInput) > this.debounceDelay;\n  }\n\n  private recordInput(inputKey: string) {\n    this.inputBuffer.set(inputKey, Date.now());\n  }\n\n  private cleanupInputBuffer() {\n    const now = Date.now();\n    for (const [key, timestamp] of this.inputBuffer.entries()) {\n      if (now - timestamp > this.debounceDelay * 10) {\n        this.inputBuffer.delete(key);\n      }\n    }\n  }\n\n  private handleKeyCombo(keyCode: string) {\n    this.keyComboBuffer.push(keyCode);\n    \n    // 檢查特殊組合鍵\n    this.checkSpecialCombos();\n    \n    // 清理過期的組合鍵緩衝\n    this.scene.time.delayedCall(this.comboTimeout, () => {\n      this.keyComboBuffer = [];\n    });\n  }\n\n  private checkSpecialCombos() {\n    const combo = this.keyComboBuffer.join('-');\n    \n    // 定義特殊組合鍵\n    const combos = {\n      'KeyG-KeyO-KeyD': 'god-mode',           // G-O-D: 無敵模式\n      'KeyF-KeyA-KeyS-KeyT': 'fast-mode',     // F-A-S-T: 快速模式\n      'KeyS-KeyL-KeyO-KeyW': 'slow-mode',     // S-L-O-W: 慢動作模式\n    };\n    \n    for (const [comboKey, eventName] of Object.entries(combos)) {\n      if (combo.includes(comboKey)) {\n        this.eventEmitter.emit(`cheat-${eventName}`);\n        this.keyComboBuffer = [];\n        break;\n      }\n    }\n  }\n\n  // 公共方法\n  public getInputState(): InputState {\n    return { ...this.inputState };\n  }\n\n  public getMovementVector(): { x: number; y: number } {\n    let x = 0;\n    let y = 0;\n    \n    if (this.inputState.movement.left) x -= 1;\n    if (this.inputState.movement.right) x += 1;\n    if (this.inputState.movement.up) y -= 1;\n    if (this.inputState.movement.down) y += 1;\n    \n    // 正規化對角線移動\n    if (x !== 0 && y !== 0) {\n      const length = Math.sqrt(x * x + y * y);\n      x /= length;\n      y /= length;\n    }\n    \n    return { x, y };\n  }\n\n  public isActionPressed(action: 'fire' | 'restart'): boolean {\n    return this.inputState.actions[action];\n  }\n\n  public on(event: string, callback: Function, context?: any): void {\n    this.eventEmitter.on(event, callback, context);\n  }\n\n  public off(event: string, callback?: Function, context?: any): void {\n    this.eventEmitter.off(event, callback, context);\n  }\n\n  public destroy(): void {\n    this.eventEmitter.removeAllListeners();\n    this.inputBuffer.clear();\n    this.keyComboBuffer = [];\n  }\n}\n","import { PlaneConfig } from '../../types/planes';\n\n// B-17 轟炸機配置\nexport const B17_CONFIG: PlaneConfig = {\n  id: 'b17',\n  name: 'B-17 Flying Fortress',\n  displayName: 'B-17 轟炸機',\n  description: '四引擎重型轟炸機，擁有強大的火力和防護',\n  type: 'bomber',\n  \n  // 性能參數\n  speed: 250,\n  fireRate: 300,\n  health: 150,\n  damage: 25,\n  \n  // 視覺參數\n  scale: 0.8,\n  color: '#1e3a8a',\n  \n  // 資源路徑\n  assetPath: 'assets/planes/B-17/Type-1/B-17.png',\n  soundPath: 'assets/sounds/heavy-engine.mp3',\n  \n  // 特殊能力\n  abilities: [\n    {\n      id: 'heavy-bombardment',\n      name: '重型轟炸',\n      description: '發射多發重型炸彈',\n      cooldown: 5000,\n      effect: {\n        type: 'multi-shot',\n        duration: 2000,\n        multiplier: 3\n      }\n    }\n  ]\n};\n\n// BF-109E 戰鬥機配置\nexport const BF109_CONFIG: PlaneConfig = {\n  id: 'bf109',\n  name: 'Messerschmitt BF-109E',\n  displayName: 'BF-109E 戰鬥機',\n  description: '德國單引擎戰鬥機，機動性極佳',\n  type: 'fighter',\n  \n  speed: 350,\n  fireRate: 150,\n  health: 80,\n  damage: 20,\n  \n  scale: 0.7,\n  color: '#dc2626',\n  \n  assetPath: 'assets/planes/BF-109E/Type-1/BF109E.png',\n  soundPath: 'assets/sounds/fighter-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'speed-boost',\n      name: '加速衝刺',\n      description: '短時間內大幅提升速度',\n      cooldown: 8000,\n      effect: {\n        type: 'speed-boost',\n        duration: 3000,\n        multiplier: 1.5\n      }\n    }\n  ]\n};\n\n// 雙翼戰鬥機配置\nexport const BIPLANE_CONFIG: PlaneConfig = {\n  id: 'biplane',\n  name: 'Biplane Fighter',\n  displayName: '雙翼戰鬥機',\n  description: '經典雙翼設計，操控靈活',\n  type: 'biplane',\n  \n  speed: 200,\n  fireRate: 400,\n  health: 60,\n  damage: 15,\n  \n  scale: 0.6,\n  color: '#d97706',\n  \n  assetPath: 'assets/planes/Bipolar Plane/Type_1/Biploar_type1_5.png',\n  soundPath: 'assets/sounds/vintage-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'agile-maneuver',\n      name: '敏捷機動',\n      description: '提升機動性和閃避能力',\n      cooldown: 6000,\n      effect: {\n        type: 'speed-boost',\n        duration: 4000,\n        multiplier: 1.3\n      }\n    }\n  ]\n};\n\n// TBM-3 魚雷轟炸機配置\nexport const TBM3_CONFIG: PlaneConfig = {\n  id: 'tbm3',\n  name: 'TBM-3 Avenger',\n  displayName: 'TBM-3 魚雷轟炸機',\n  description: '美國海軍艦載轟炸機',\n  type: 'torpedo',\n  \n  speed: 280,\n  fireRate: 250,\n  health: 120,\n  damage: 30,\n  \n  scale: 0.75,\n  color: '#065f46',\n  \n  assetPath: 'assets/planes/TBM3/Type_1/TBM-3.png',\n  soundPath: 'assets/sounds/naval-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'torpedo-strike',\n      name: '魚雷攻擊',\n      description: '發射威力強大的魚雷',\n      cooldown: 10000,\n      effect: {\n        type: 'damage-boost',\n        duration: 1000,\n        multiplier: 3\n      }\n    }\n  ]\n};\n\n// Hawker Tempest MKII 配置\nexport const HAWKER_CONFIG: PlaneConfig = {\n  id: 'hawker',\n  name: 'Hawker Tempest MKII',\n  displayName: 'Hawker Tempest MKII',\n  description: '英國高速戰鬥機',\n  type: 'fighter',\n  \n  speed: 400,\n  fireRate: 100,\n  health: 90,\n  damage: 22,\n  \n  scale: 0.7,\n  color: '#1e40af',\n  \n  assetPath: 'assets/planes/Hawker Tempest MKII/Type_1/Hawker_type1.png',\n  soundPath: 'assets/sounds/british-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'rapid-fire',\n      name: '快速射擊',\n      description: '大幅提升射擊頻率',\n      cooldown: 7000,\n      effect: {\n        type: 'damage-boost',\n        duration: 5000,\n        multiplier: 2\n      }\n    }\n  ]\n};\n\n// JU-87B2 俯衝轟炸機配置\nexport const JU87_CONFIG: PlaneConfig = {\n  id: 'ju87',\n  name: 'Junkers JU-87B2 Stuka',\n  displayName: 'JU-87B2 俯衝轟炸機',\n  description: '德國俯衝轟炸機，精確打擊',\n  type: 'dive-bomber',\n  \n  speed: 220,\n  fireRate: 350,\n  health: 100,\n  damage: 35,\n  \n  scale: 0.75,\n  color: '#4a5568',\n  \n  assetPath: 'assets/planes/JU-87B2/Type_1/JU87B2.png',\n  soundPath: 'assets/sounds/stuka-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'dive-bomb',\n      name: '俯衝轟炸',\n      description: '精確的俯衝攻擊',\n      cooldown: 8000,\n      effect: {\n        type: 'damage-boost',\n        duration: 2000,\n        multiplier: 2.5\n      }\n    }\n  ]\n};\n\n// Blenheim 轟炸機配置\nexport const BLENHEIM_CONFIG: PlaneConfig = {\n  id: 'blenheim',\n  name: 'Bristol Blenheim',\n  displayName: 'Blenheim 轟炸機',\n  description: '英國雙引擎中型轟炸機',\n  type: 'bomber',\n  \n  speed: 260,\n  fireRate: 280,\n  health: 110,\n  damage: 28,\n  \n  scale: 0.8,\n  color: '#8b4513',\n  \n  assetPath: 'assets/planes/Blenheim/Type_1/Blenheim.png',\n  soundPath: 'assets/sounds/twin-engine.mp3',\n  \n  abilities: [\n    {\n      id: 'formation-strike',\n      name: '編隊攻擊',\n      description: '召喚僚機協同攻擊',\n      cooldown: 12000,\n      effect: {\n        type: 'multi-shot',\n        duration: 3000,\n        multiplier: 2\n      }\n    }\n  ]\n};\n\n// 所有飛機配置\nexport const ALL_PLANE_CONFIGS: PlaneConfig[] = [\n  B17_CONFIG,\n  BF109_CONFIG,\n  BIPLANE_CONFIG,\n  TBM3_CONFIG,\n  HAWKER_CONFIG,\n  JU87_CONFIG,\n  BLENHEIM_CONFIG\n];\n\n// 根據 ID 獲取飛機配置\nexport function getPlaneConfigById(id: string): PlaneConfig | null {\n  return ALL_PLANE_CONFIGS.find(config => config.id === id) || null;\n}\n\n// 根據類型獲取飛機配置\nexport function getPlaneConfigsByType(type: string): PlaneConfig[] {\n  return ALL_PLANE_CONFIGS.filter(config => config.type === type);\n}\n","import Phaser from 'phaser';\n\nexport interface PanelConfig {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  backgroundColor?: number;\n  borderColor?: number;\n  borderWidth?: number;\n  cornerRadius?: number;\n  alpha?: number;\n  padding?: number;\n  title?: string;\n  titleStyle?: Phaser.Types.GameObjects.Text.TextStyle;\n}\n\nexport class Panel extends Phaser.GameObjects.Container {\n  private background: Phaser.GameObjects.Graphics;\n  private config: PanelConfig;\n  private titleText?: Phaser.GameObjects.Text;\n  private contentArea: Phaser.GameObjects.Container;\n\n  constructor(scene: Phaser.Scene, config: PanelConfig) {\n    super(scene, config.x, config.y);\n    \n    this.config = {\n      backgroundColor: 0x2c3e50,\n      borderColor: 0x34495e,\n      borderWidth: 2,\n      cornerRadius: 10,\n      alpha: 0.95,\n      padding: 15,\n      titleStyle: {\n        fontSize: '18px',\n        color: '#3498db',\n        fontFamily: 'Arial',\n        fontStyle: 'bold'\n      },\n      ...config\n    };\n\n    // 創建背景\n    this.background = scene.add.graphics();\n    this.add(this.background);\n\n    // 創建標題\n    if (this.config.title) {\n      this.createTitle();\n    }\n\n    // 創建內容區域\n    this.contentArea = scene.add.container(0, this.config.title ? 30 : 0);\n    this.add(this.contentArea);\n\n    // 設置大小\n    this.setSize(this.config.width, this.config.height);\n\n    // 渲染面板\n    this.render();\n\n    // 添加到場景\n    scene.add.existing(this);\n  }\n\n  private createTitle() {\n    if (!this.config.title) return;\n\n    this.titleText = this.scene.add.text(\n      0, \n      -this.config.height / 2 + this.config.padding!,\n      this.config.title,\n      this.config.titleStyle\n    );\n    this.titleText.setOrigin(0.5, 0);\n    this.add(this.titleText);\n  }\n\n  private render() {\n    this.background.clear();\n\n    // 繪製背景\n    this.background.fillStyle(this.config.backgroundColor!, this.config.alpha!);\n    this.background.fillRoundedRect(\n      -this.config.width / 2,\n      -this.config.height / 2,\n      this.config.width,\n      this.config.height,\n      this.config.cornerRadius\n    );\n\n    // 繪製邊框\n    if (this.config.borderWidth! > 0) {\n      this.background.lineStyle(this.config.borderWidth!, this.config.borderColor!);\n      this.background.strokeRoundedRect(\n        -this.config.width / 2,\n        -this.config.height / 2,\n        this.config.width,\n        this.config.height,\n        this.config.cornerRadius\n      );\n    }\n\n    // 如果有標題，繪製分隔線\n    if (this.config.title) {\n      this.background.lineStyle(1, this.config.borderColor!, 0.5);\n      this.background.lineBetween(\n        -this.config.width / 2 + this.config.padding!,\n        -this.config.height / 2 + 35,\n        this.config.width / 2 - this.config.padding!,\n        -this.config.height / 2 + 35\n      );\n    }\n  }\n\n  public addContent(gameObject: Phaser.GameObjects.GameObject): this {\n    this.contentArea.add(gameObject);\n    return this;\n  }\n\n  public removeContent(gameObject: Phaser.GameObjects.GameObject): this {\n    this.contentArea.remove(gameObject);\n    return this;\n  }\n\n  public clearContent(): this {\n    this.contentArea.removeAll();\n    return this;\n  }\n\n  public setTitle(title: string): this {\n    this.config.title = title;\n    \n    if (this.titleText) {\n      this.titleText.setText(title);\n    } else {\n      this.createTitle();\n    }\n    \n    this.render();\n    return this;\n  }\n\n  public setBackgroundColor(color: number, alpha?: number): this {\n    this.config.backgroundColor = color;\n    if (alpha !== undefined) {\n      this.config.alpha = alpha;\n    }\n    this.render();\n    return this;\n  }\n\n  public setBorderColor(color: number): this {\n    this.config.borderColor = color;\n    this.render();\n    return this;\n  }\n\n  public resize(width: number, height: number): this {\n    this.config.width = width;\n    this.config.height = height;\n    this.setSize(width, height);\n    this.render();\n    return this;\n  }\n\n  public getContentArea(): Phaser.GameObjects.Container {\n    return this.contentArea;\n  }\n\n  public getContentBounds(): { x: number; y: number; width: number; height: number } {\n    const titleOffset = this.config.title ? 40 : 0;\n    return {\n      x: -this.config.width / 2 + this.config.padding!,\n      y: -this.config.height / 2 + this.config.padding! + titleOffset,\n      width: this.config.width - this.config.padding! * 2,\n      height: this.config.height - this.config.padding! * 2 - titleOffset\n    };\n  }\n}\n\n// 預設面板樣式\nexport const PanelStyles = {\n  DEFAULT: {\n    backgroundColor: 0x2c3e50,\n    borderColor: 0x34495e,\n    alpha: 0.95\n  },\n  \n  DARK: {\n    backgroundColor: 0x1a1a1a,\n    borderColor: 0x333333,\n    alpha: 0.98\n  },\n  \n  LIGHT: {\n    backgroundColor: 0xecf0f1,\n    borderColor: 0xbdc3c7,\n    alpha: 0.95\n  },\n  \n  SUCCESS: {\n    backgroundColor: 0x27ae60,\n    borderColor: 0x229954,\n    alpha: 0.9\n  },\n  \n  WARNING: {\n    backgroundColor: 0xf39c12,\n    borderColor: 0xe67e22,\n    alpha: 0.9\n  },\n  \n  DANGER: {\n    backgroundColor: 0xe74c3c,\n    borderColor: 0xc0392b,\n    alpha: 0.9\n  }\n};\n","import Phaser from 'phaser';\nimport { PlaneConfig } from '../types/planes';\nimport { Panel, PanelStyles } from './components/Panel';\n\nexport interface GameHUDConfig {\n  scene: Phaser.Scene;\n  selectedPlane: PlaneConfig;\n}\n\nexport class GameHUD extends Phaser.GameObjects.Container {\n  declare scene: Phaser.Scene; // 使用 declare 避免與父類衝突\n  private selectedPlane: PlaneConfig;\n\n  // UI 元素\n  private scorePanel!: Panel;\n  private planeInfoPanel!: Panel;\n  private healthBar!: Phaser.GameObjects.Graphics;\n  private scoreText!: Phaser.GameObjects.Text;\n  private planeNameText!: Phaser.GameObjects.Text;\n  private planeStatsText!: Phaser.GameObjects.Text;\n  private healthText!: Phaser.GameObjects.Text;\n  \n  // 遊戲數據\n  private currentScore: number = 0;\n  private currentHealth: number = 100;\n  private maxHealth: number = 100;\n\n  constructor(config: GameHUDConfig) {\n    super(config.scene, 0, 0);\n    \n    this.scene = config.scene;\n    this.selectedPlane = config.selectedPlane;\n    this.maxHealth = config.selectedPlane.health;\n    this.currentHealth = this.maxHealth;\n\n    this.createHUD();\n    this.updateDisplay();\n\n    // 添加到場景 - 使用類型斷言\n    this.scene.add.existing(this as any);\n    this.setScrollFactor(0); // 固定在螢幕上\n  }\n\n  private createHUD() {\n    const { width } = this.scene.cameras.main;\n\n    // 創建分數面板 (左上角)\n    this.scorePanel = new Panel(this.scene, {\n      x: 120,\n      y: 50,\n      width: 200,\n      height: 80,\n      title: '🎯 分數',\n      ...PanelStyles.DEFAULT\n    });\n    this.add(this.scorePanel);\n\n    // 分數文字\n    this.scoreText = this.scene.add.text(0, 0, '0', {\n      fontSize: '24px',\n      color: '#f39c12',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    });\n    this.scoreText.setOrigin(0.5);\n    this.scorePanel.addContent(this.scoreText);\n\n    // 創建飛機資訊面板 (右上角)\n    this.planeInfoPanel = new Panel(this.scene, {\n      x: width - 150,\n      y: 80,\n      width: 250,\n      height: 120,\n      title: '✈️ 飛機資訊',\n      ...PanelStyles.DEFAULT\n    });\n    this.add(this.planeInfoPanel);\n\n    // 飛機名稱\n    this.planeNameText = this.scene.add.text(0, -20, this.selectedPlane.displayName, {\n      fontSize: '16px',\n      color: '#3498db',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    });\n    this.planeNameText.setOrigin(0.5);\n    this.planeInfoPanel.addContent(this.planeNameText);\n\n    // 飛機統計\n    this.planeStatsText = this.scene.add.text(0, 10, this.getPlaneStatsText(), {\n      fontSize: '12px',\n      color: '#ecf0f1',\n      fontFamily: 'Arial',\n      align: 'center'\n    });\n    this.planeStatsText.setOrigin(0.5);\n    this.planeInfoPanel.addContent(this.planeStatsText);\n\n    // 創建生命值條 (左下角)\n    this.createHealthBar();\n  }\n\n  private createHealthBar() {\n    const { height } = this.scene.cameras.main;\n    \n    // 生命值背景\n    const healthBg = this.scene.add.graphics();\n    healthBg.fillStyle(0x2c3e50, 0.8);\n    healthBg.fillRoundedRect(20, height - 60, 200, 30, 5);\n    healthBg.lineStyle(2, 0x34495e);\n    healthBg.strokeRoundedRect(20, height - 60, 200, 30, 5);\n    this.add(healthBg);\n\n    // 生命值條\n    this.healthBar = this.scene.add.graphics();\n    this.add(this.healthBar);\n\n    // 生命值文字\n    this.healthText = this.scene.add.text(120, height - 45, 'HP: 100/100', {\n      fontSize: '14px',\n      color: '#ffffff',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    });\n    this.healthText.setOrigin(0.5);\n    this.add(this.healthText);\n\n    // 生命值標籤\n    const healthLabel = this.scene.add.text(25, height - 75, '❤️ 生命值', {\n      fontSize: '12px',\n      color: '#e74c3c',\n      fontFamily: 'Arial'\n    });\n    this.add(healthLabel);\n  }\n\n  private getPlaneStatsText(): string {\n    return [\n      `速度: ${this.selectedPlane.speed}`,\n      `射擊: ${this.selectedPlane.fireRate}ms`,\n      `傷害: ${this.selectedPlane.damage}`\n    ].join('\\n');\n  }\n\n  private updateDisplay() {\n    // 更新分數\n    this.scoreText.setText(this.currentScore.toString());\n\n    // 更新生命值條\n    this.updateHealthBar();\n\n    // 更新生命值文字\n    this.healthText.setText(`HP: ${this.currentHealth}/${this.maxHealth}`);\n  }\n\n  private updateHealthBar() {\n    const { height } = this.scene.cameras.main;\n    const healthPercentage = this.currentHealth / this.maxHealth;\n    const barWidth = 196; // 200 - 4 (邊框)\n    const currentWidth = barWidth * healthPercentage;\n\n    this.healthBar.clear();\n\n    // 根據生命值百分比選擇顏色\n    let healthColor = 0x27ae60; // 綠色\n    if (healthPercentage < 0.6) healthColor = 0xf39c12; // 橙色\n    if (healthPercentage < 0.3) healthColor = 0xe74c3c; // 紅色\n\n    this.healthBar.fillStyle(healthColor);\n    this.healthBar.fillRoundedRect(22, height - 58, currentWidth, 26, 3);\n\n    // 添加閃爍效果（生命值低時）\n    if (healthPercentage < 0.2) {\n      this.scene.tweens.add({\n        targets: this.healthBar,\n        alpha: 0.3,\n        duration: 300,\n        yoyo: true,\n        repeat: -1\n      });\n    } else {\n      this.healthBar.setAlpha(1);\n      this.scene.tweens.killTweensOf(this.healthBar);\n    }\n  }\n\n  // 公共方法\n  public updateScore(score: number): void {\n    const oldScore = this.currentScore;\n    this.currentScore = score;\n    \n    // 分數增加動畫\n    if (score > oldScore) {\n      this.scene.tweens.add({\n        targets: this.scoreText,\n        scaleX: 1.3,\n        scaleY: 1.3,\n        duration: 150,\n        yoyo: true,\n        ease: 'Power2'\n      });\n\n      // 分數變化效果\n      this.scene.tweens.add({\n        targets: { value: oldScore },\n        value: score,\n        duration: 500,\n        onUpdate: (tween) => {\n          this.scoreText.setText(Math.floor(tween.getValue() || 0).toString());\n        }\n      });\n    } else {\n      this.updateDisplay();\n    }\n  }\n\n  public updateHealth(health: number): void {\n    const oldHealth = this.currentHealth;\n    this.currentHealth = Math.max(0, Math.min(health, this.maxHealth));\n    \n    // 生命值減少時的震動效果\n    if (this.currentHealth < oldHealth) {\n      this.scene.cameras.main.shake(200, 0.01);\n      \n      // 紅色閃爍效果\n      const redOverlay = this.scene.add.rectangle(\n        this.scene.cameras.main.width / 2,\n        this.scene.cameras.main.height / 2,\n        this.scene.cameras.main.width,\n        this.scene.cameras.main.height,\n        0xff0000,\n        0.3\n      );\n      redOverlay.setScrollFactor(0);\n\n      this.scene.tweens.add({\n        targets: redOverlay,\n        alpha: 0,\n        duration: 300,\n        onComplete: () => redOverlay.destroy()\n      });\n    }\n\n    this.updateDisplay();\n  }\n\n  public setPlane(plane: PlaneConfig): void {\n    this.selectedPlane = plane;\n    this.maxHealth = plane.health;\n    this.currentHealth = this.maxHealth;\n    \n    this.planeNameText.setText(plane.displayName);\n    this.planeStatsText.setText(this.getPlaneStatsText());\n    this.updateDisplay();\n  }\n\n  public showMessage(message: string, duration: number = 2000): void {\n    const { width, height } = this.scene.cameras.main;\n    \n    const messageText = this.scene.add.text(width / 2, height / 2 - 100, message, {\n      fontSize: '32px',\n      color: '#f39c12',\n      fontFamily: 'Arial',\n      fontStyle: 'bold',\n      stroke: '#2c3e50',\n      strokeThickness: 4\n    });\n    messageText.setOrigin(0.5);\n    messageText.setScrollFactor(0);\n    messageText.setAlpha(0);\n\n    // 淡入動畫\n    this.scene.tweens.add({\n      targets: messageText,\n      alpha: 1,\n      scaleX: 1.2,\n      scaleY: 1.2,\n      duration: 300,\n      ease: 'Back.easeOut'\n    });\n\n    // 淡出動畫\n    this.scene.time.delayedCall(duration, () => {\n      this.scene.tweens.add({\n        targets: messageText,\n        alpha: 0,\n        scaleX: 0.8,\n        scaleY: 0.8,\n        duration: 300,\n        onComplete: () => messageText.destroy()\n      });\n    });\n  }\n\n  public getCurrentScore(): number {\n    return this.currentScore;\n  }\n\n  public getCurrentHealth(): number {\n    return this.currentHealth;\n  }\n\n  public isHealthLow(): boolean {\n    return (this.currentHealth / this.maxHealth) < 0.3;\n  }\n}\n","import Phaser from 'phaser';\nimport { SCENE_KEYS, GAME_CONFIG } from '../config/gameConfig';\nimport { PlaneConfig } from '../../types/planes';\nimport { InputManager } from '../systems/InputManager';\nimport { PlaneManager } from '../../planes/PlaneManager';\nimport { GameHUD } from '../../ui/GameHUD';\n\nexport class GameScene extends Phaser.Scene {\n  private player!: Phaser.GameObjects.Sprite;\n  private enemies!: Phaser.GameObjects.Group;\n  private bullets!: Phaser.GameObjects.Group;\n  private inputManager!: InputManager;\n  private planeManager!: PlaneManager;\n  private gameHUD!: GameHUD;\n\n  // 月球視差背景層\n  private backgroundLayers!: {\n    sky: Phaser.GameObjects.TileSprite;\n    earth: Phaser.GameObjects.TileSprite;\n    back: Phaser.GameObjects.TileSprite;\n    mid: Phaser.GameObjects.TileSprite;\n    front: Phaser.GameObjects.TileSprite;\n    floor: Phaser.GameObjects.TileSprite;\n  };\n\n  private score: number = 0;\n  private gameOver: boolean = false;\n  private bulletTime: number = 0;\n  private enemyTimer!: Phaser.Time.TimerEvent;\n  private playerHealth: number = 100;\n\n  private selectedPlane!: PlaneConfig;\n\n  constructor() {\n    super({ key: SCENE_KEYS.GAME });\n  }\n\n  init() {\n    console.log('🎮 GameScene: 初始化遊戲場景');\n    // 直接使用射手配置，不再需要飛機選擇\n    this.selectedPlane = {\n      id: 'shooter',\n      name: 'Shooter',\n      displayName: '射手',\n      description: '高科技射手，火力強大',\n      type: 'shooter',\n      speed: 350,\n      fireRate: 180,\n      health: 120,\n      damage: 35,\n      scale: 1.0,\n      color: '#ffffff'\n    };\n\n    console.log(`🎯 使用射手: ${this.selectedPlane.displayName}`);\n  }\n\n  create() {\n    const { width, height } = this.cameras.main;\n\n    // 初始化管理器\n    this.planeManager = PlaneManager.getInstance(this);\n    this.inputManager = new InputManager(this);\n\n    // 創建視差背景\n    this.createParallaxBackground();\n\n    // 創建玩家飛機\n    this.createPlayer();\n\n    // 創建遊戲物件群組\n    this.createGroups();\n\n    // 創建現代化 HUD\n    this.createGameHUD();\n\n    // 設置輸入控制\n    this.setupInput();\n\n    // 設置物理碰撞\n    this.setupPhysics();\n\n    // 開始敵機生成\n    this.startEnemySpawning();\n\n    console.log('🎯 遊戲場景創建完成');\n  }\n\n  update(time: number, _delta: number) {\n    if (this.gameOver) return;\n\n    // 更新視差背景\n    this.updateParallaxBackground();\n\n    // 更新輸入管理器\n    this.inputManager.update();\n\n    // 玩家移動\n    this.handlePlayerMovement();\n\n    // 處理射擊\n    this.handleShooting(time);\n\n    // 清理超出邊界的物件\n    this.cleanupObjects();\n  }\n\n  private createPlayer() {\n    const { height } = this.cameras.main;\n\n    // 使用PlaneManager創建單精靈射手\n    this.player = this.planeManager.createPlaneSprite(this, this.selectedPlane);\n    this.player.setPosition(GAME_CONFIG.PLAYER.START_X, height / 2);\n\n    // 播放射手動畫\n    const animKey = `shooter-${this.selectedPlane.id}`;\n    if (this.anims.exists(animKey)) {\n      this.player.play(animKey);\n    }\n\n    console.log(`🎯 創建射手: ${this.selectedPlane.displayName}`);\n\n    // 啟用物理\n    this.physics.add.existing(this.player);\n    const playerBody = this.player.body as Phaser.Physics.Arcade.Body;\n    playerBody.setCollideWorldBounds(true);\n    playerBody.setDrag(GAME_CONFIG.PLAYER.DRAG);\n    playerBody.setMaxVelocity(this.selectedPlane.speed);\n  }\n\n  private createGroups() {\n    // 創建子彈群組\n    this.bullets = this.physics.add.group({\n      defaultKey: 'bullet-placeholder',\n      maxSize: GAME_CONFIG.BULLET.MAX_BULLETS\n    });\n    \n    // 創建雲朵敵人群組\n    this.enemies = this.physics.add.group({\n      defaultKey: 'cloud-enemy'\n    });\n  }\n\n  private createGameHUD() {\n    this.gameHUD = new GameHUD({\n      scene: this,\n      selectedPlane: this.selectedPlane\n    });\n\n    this.playerHealth = this.selectedPlane.health;\n  }\n\n  private setupInput() {\n    // 設置輸入管理器事件監聽\n    this.inputManager.on('restart-game', () => {\n      if (this.gameOver) {\n        this.restartGame();\n      }\n    });\n\n    this.inputManager.on('fire-weapon', () => {\n      // 射擊邏輯將在 update 中處理\n    });\n  }\n\n  private setupPhysics() {\n    // 子彈與敵機碰撞\n    this.physics.add.overlap(this.bullets, this.enemies, (bullet, enemy) => {\n      this.hitEnemy(bullet as Phaser.GameObjects.Image, enemy as Phaser.GameObjects.Image);\n    });\n    \n    // 玩家與敵機碰撞\n    this.physics.add.overlap(this.player, this.enemies, (_player, enemy) => {\n      this.hitPlayer(enemy as Phaser.GameObjects.Image);\n    });\n  }\n\n  private startEnemySpawning() {\n    this.enemyTimer = this.time.addEvent({\n      delay: GAME_CONFIG.ENEMY.SPAWN_RATE,\n      callback: this.spawnEnemy,\n      callbackScope: this,\n      loop: true\n    });\n  }\n\n  private handlePlayerMovement() {\n    const playerBody = this.player.body as Phaser.Physics.Arcade.Body;\n    const movement = this.inputManager.getMovementVector();\n\n    // 設置加速度\n    playerBody.setAcceleration(\n      movement.x * GAME_CONFIG.PLAYER.ACCELERATION,\n      movement.y * GAME_CONFIG.PLAYER.ACCELERATION\n    );\n  }\n\n  private handleShooting(time: number) {\n    if (this.inputManager.isActionPressed('fire') && time > this.bulletTime) {\n      this.fireBullet();\n      this.bulletTime = time + this.selectedPlane.fireRate;\n    }\n  }\n\n  private fireBullet() {\n    const bullet = this.bullets.get(this.player.x + 30, this.player.y);\n    \n    if (bullet) {\n      bullet.setActive(true);\n      bullet.setVisible(true);\n      \n      const bulletBody = bullet.body as Phaser.Physics.Arcade.Body;\n      bulletBody.setVelocityX(GAME_CONFIG.BULLET.SPEED);\n    }\n  }\n\n  private spawnEnemy() {\n    const y = Phaser.Math.Between(GAME_CONFIG.ENEMY.MIN_Y, GAME_CONFIG.ENEMY.MAX_Y);\n\n    const enemy = this.enemies.create(GAME_CONFIG.ENEMY.SPAWN_X, y, 'cloud-enemy');\n    const enemyBody = enemy.body as Phaser.Physics.Arcade.Body;\n\n    // 設置雲朵敵人的大小和外觀\n    enemy.setScale(0.8); // 適中的雲朵大小\n    enemy.setTint(0xffffff); // 保持白色\n\n    const speed = Phaser.Math.Between(GAME_CONFIG.ENEMY.MIN_SPEED, GAME_CONFIG.ENEMY.MAX_SPEED);\n    enemyBody.setVelocityX(-speed);\n\n    console.log('☁️ 生成雲朵敵人');\n  }\n\n  private hitEnemy(bullet: Phaser.GameObjects.Image, enemy: Phaser.GameObjects.Image) {\n    // 移除子彈和雲朵敵人\n    bullet.setActive(false);\n    bullet.setVisible(false);\n    enemy.destroy();\n\n    // 增加分數\n    this.score += 10;\n    this.gameHUD.updateScore(this.score);\n\n    console.log(`💥 擊散雲朵！分數: ${this.score}`);\n  }\n\n  private hitPlayer(enemy: Phaser.GameObjects.Image) {\n    console.log('💥 玩家被擊中！');\n\n    enemy.destroy();\n\n    // 減少生命值\n    this.playerHealth -= 20;\n    this.gameHUD.updateHealth(this.playerHealth);\n\n    // 檢查是否遊戲結束\n    if (this.playerHealth <= 0) {\n      this.gameOver = true;\n      this.enemyTimer.destroy();\n      this.showGameOver();\n    } else {\n      // 顯示受傷訊息\n      this.gameHUD.showMessage('受到傷害！', 1000);\n    }\n  }\n\n  private showGameOver() {\n    const { width, height } = this.cameras.main;\n    \n    // 半透明背景\n    this.add.rectangle(width / 2, height / 2, width, height, 0x000000, 0.7);\n    \n    // 遊戲結束文字\n    this.add.text(width / 2, height / 2 - 50, '遊戲結束', {\n      fontSize: '48px',\n      color: '#e74c3c',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    }).setOrigin(0.5);\n    \n    // 最終分數\n    this.add.text(width / 2, height / 2, `最終分數: ${this.score}`, {\n      fontSize: '24px',\n      color: '#ecf0f1',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n    \n    // 重新開始提示\n    this.add.text(width / 2, height / 2 + 50, '按 R 鍵重新開始', {\n      fontSize: '18px',\n      color: '#3498db',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n  }\n\n  private cleanupObjects() {\n    const { width } = this.cameras.main;\n\n    // 清理超出邊界的子彈\n    this.bullets.children.entries.forEach((bullet) => {\n      const bulletSprite = bullet as Phaser.GameObjects.Image;\n      if (bulletSprite.x > width + 50) {\n        bulletSprite.setActive(false);\n        bulletSprite.setVisible(false);\n      }\n    });\n\n    // 清理超出邊界的敵機\n    this.enemies.children.entries.forEach((enemy) => {\n      const enemySprite = enemy as Phaser.GameObjects.Image;\n      if (enemySprite.x < -50) {\n        enemySprite.destroy();\n      }\n    });\n  }\n\n  private restartGame() {\n    console.log('🔄 重新開始遊戲');\n    this.scene.restart();\n  }\n\n  private createParallaxBackground() {\n    const { width, height } = this.cameras.main;\n\n    console.log('🌙 創建月球視差背景');\n\n    // 創建月球視差背景層（從後到前）\n    this.backgroundLayers = {\n      sky: this.add.tileSprite(0, 0, width, height, 'moon-sky').setOrigin(0, 0),\n      earth: this.add.tileSprite(0, 0, width, height, 'moon-earth').setOrigin(0, 0),\n      back: this.add.tileSprite(0, 0, width, height, 'moon-back').setOrigin(0, 0),\n      mid: this.add.tileSprite(0, 0, width, height, 'moon-mid').setOrigin(0, 0),\n      front: this.add.tileSprite(0, 0, width, height, 'moon-front').setOrigin(0, 0),\n      floor: this.add.tileSprite(0, 0, width, height, 'moon-floor').setOrigin(0, 0)\n    };\n\n    // 設置深度層級（確保背景在最後面）\n    this.backgroundLayers.sky.setDepth(-100);\n    this.backgroundLayers.earth.setDepth(-95);\n    this.backgroundLayers.back.setDepth(-90);\n    this.backgroundLayers.mid.setDepth(-85);\n    this.backgroundLayers.front.setDepth(-80);\n    this.backgroundLayers.floor.setDepth(-75);\n\n    // 確保地球層可見 - 使用更強的設置\n    this.backgroundLayers.earth.setAlpha(1.0);\n    this.backgroundLayers.earth.setVisible(true);\n    this.backgroundLayers.earth.setTint(0xffffff); // 確保沒有色調影響\n    this.backgroundLayers.earth.setScrollFactor(0.1); // 設置視差滾動因子\n\n    console.log('🌍 地球層設置: 可見度=', this.backgroundLayers.earth.visible, ', 透明度=', this.backgroundLayers.earth.alpha);\n\n    // 額外的地球層調試信息\n    console.log('🔍 地球層詳細信息:', {\n      textureKey: this.backgroundLayers.earth.texture.key,\n      width: this.backgroundLayers.earth.width,\n      height: this.backgroundLayers.earth.height,\n      x: this.backgroundLayers.earth.x,\n      y: this.backgroundLayers.earth.y,\n      depth: this.backgroundLayers.earth.depth,\n      tileScaleX: this.backgroundLayers.earth.tileScaleX,\n      tileScaleY: this.backgroundLayers.earth.tileScaleY\n    });\n\n    console.log('✅ 月球視差背景創建完成');\n  }\n\n  private updateParallaxBackground() {\n    if (!this.backgroundLayers) return;\n\n    // 月球視差效果：不同層以不同速度移動\n    this.backgroundLayers.sky.tilePositionX += 0.05;     // 太空天空最慢\n    this.backgroundLayers.earth.tilePositionX += 0.2;    // 地球 - 調整為較慢速度\n    this.backgroundLayers.back.tilePositionX += 0.3;     // 遠景月球地形\n    this.backgroundLayers.mid.tilePositionX += 0.5;      // 中景月球地形\n    this.backgroundLayers.front.tilePositionX += 0.7;    // 前景月球地形\n    this.backgroundLayers.floor.tilePositionX += 1.0;    // 月球地面最快\n  }\n}\n","import Phaser from 'phaser';\n\nexport interface ButtonConfig {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  text: string;\n  style?: Phaser.Types.GameObjects.Text.TextStyle;\n  backgroundColor?: number;\n  borderColor?: number;\n  borderWidth?: number;\n  cornerRadius?: number;\n  hoverColor?: number;\n  pressedColor?: number;\n  disabled?: boolean;\n}\n\nexport class Button extends Phaser.GameObjects.Container {\n  private background: Phaser.GameObjects.Graphics;\n  private label: Phaser.GameObjects.Text;\n  private config: ButtonConfig;\n  private isHovered: boolean = false;\n  private isPressed: boolean = false;\n  private isDisabled: boolean = false;\n\n  constructor(scene: Phaser.Scene, config: ButtonConfig) {\n    super(scene, config.x, config.y);\n    \n    this.config = {\n      backgroundColor: 0x3498db,\n      borderColor: 0x2980b9,\n      borderWidth: 2,\n      cornerRadius: 8,\n      hoverColor: 0x2980b9,\n      pressedColor: 0x1f4e79,\n      disabled: false,\n      style: {\n        fontSize: '16px',\n        color: '#ffffff',\n        fontFamily: 'Arial',\n        fontStyle: 'bold'\n      },\n      ...config\n    };\n\n    this.isDisabled = this.config.disabled || false;\n\n    // 創建背景\n    this.background = scene.add.graphics();\n    this.add(this.background);\n\n    // 創建文字標籤\n    this.label = scene.add.text(0, 0, this.config.text, this.config.style);\n    this.label.setOrigin(0.5);\n    this.add(this.label);\n\n    // 設置互動區域\n    this.setSize(this.config.width, this.config.height);\n    this.setInteractive();\n\n    // 設置事件監聽\n    this.setupEvents();\n\n    // 初始渲染\n    this.render();\n\n    // 添加到場景\n    scene.add.existing(this);\n  }\n\n  private setupEvents() {\n    if (this.isDisabled) return;\n\n    this.on('pointerover', this.onPointerOver, this);\n    this.on('pointerout', this.onPointerOut, this);\n    this.on('pointerdown', this.onPointerDown, this);\n    this.on('pointerup', this.onPointerUp, this);\n    this.on('pointerupoutside', this.onPointerUp, this);\n  }\n\n  private onPointerOver() {\n    if (this.isDisabled) return;\n    \n    this.isHovered = true;\n    this.render();\n    this.setScale(1.05);\n    \n    // 播放懸停音效\n    this.scene.sound.play('ui-hover', { volume: 0.3 });\n  }\n\n  private onPointerOut() {\n    if (this.isDisabled) return;\n    \n    this.isHovered = false;\n    this.isPressed = false;\n    this.render();\n    this.setScale(1);\n  }\n\n  private onPointerDown() {\n    if (this.isDisabled) return;\n    \n    this.isPressed = true;\n    this.render();\n    this.setScale(0.95);\n    \n    // 播放點擊音效\n    this.scene.sound.play('ui-click', { volume: 0.5 });\n  }\n\n  private onPointerUp() {\n    if (this.isDisabled) return;\n    \n    if (this.isPressed) {\n      this.emit('click');\n    }\n    \n    this.isPressed = false;\n    this.render();\n    this.setScale(this.isHovered ? 1.05 : 1);\n  }\n\n  private render() {\n    this.background.clear();\n\n    let fillColor = this.config.backgroundColor!;\n    \n    if (this.isDisabled) {\n      fillColor = 0x7f8c8d;\n    } else if (this.isPressed) {\n      fillColor = this.config.pressedColor!;\n    } else if (this.isHovered) {\n      fillColor = this.config.hoverColor!;\n    }\n\n    // 繪製背景\n    this.background.fillStyle(fillColor);\n    this.background.fillRoundedRect(\n      -this.config.width / 2,\n      -this.config.height / 2,\n      this.config.width,\n      this.config.height,\n      this.config.cornerRadius\n    );\n\n    // 繪製邊框\n    if (this.config.borderWidth! > 0) {\n      this.background.lineStyle(this.config.borderWidth!, this.config.borderColor!);\n      this.background.strokeRoundedRect(\n        -this.config.width / 2,\n        -this.config.height / 2,\n        this.config.width,\n        this.config.height,\n        this.config.cornerRadius\n      );\n    }\n\n    // 更新文字顏色\n    if (this.isDisabled) {\n      this.label.setColor('#bdc3c7');\n    } else {\n      this.label.setColor(this.config.style?.color as string || '#ffffff');\n    }\n  }\n\n  public setText(text: string): this {\n    this.label.setText(text);\n    return this;\n  }\n\n  public setEnabled(enabled: boolean): this {\n    this.isDisabled = !enabled;\n    \n    if (this.isDisabled) {\n      this.removeInteractive();\n      this.setScale(1);\n    } else {\n      this.setInteractive();\n    }\n    \n    this.render();\n    return this;\n  }\n\n  public setStyle(style: Partial<Phaser.Types.GameObjects.Text.TextStyle>): this {\n    this.label.setStyle(style);\n    return this;\n  }\n\n  public setBackgroundColor(color: number): this {\n    this.config.backgroundColor = color;\n    this.render();\n    return this;\n  }\n\n  public setHoverColor(color: number): this {\n    this.config.hoverColor = color;\n    return this;\n  }\n\n  public setPressedColor(color: number): this {\n    this.config.pressedColor = color;\n    return this;\n  }\n\n  public isButtonDisabled(): boolean {\n    return this.isDisabled;\n  }\n\n  public destroy(fromScene?: boolean): void {\n    this.removeAllListeners();\n    super.destroy(fromScene);\n  }\n}\n\n// 預設按鈕樣式\nexport const ButtonStyles = {\n  PRIMARY: {\n    backgroundColor: 0x3498db,\n    hoverColor: 0x2980b9,\n    pressedColor: 0x1f4e79,\n    borderColor: 0x2980b9\n  },\n  \n  SUCCESS: {\n    backgroundColor: 0x27ae60,\n    hoverColor: 0x229954,\n    pressedColor: 0x1e8449,\n    borderColor: 0x229954\n  },\n  \n  DANGER: {\n    backgroundColor: 0xe74c3c,\n    hoverColor: 0xc0392b,\n    pressedColor: 0xa93226,\n    borderColor: 0xc0392b\n  },\n  \n  WARNING: {\n    backgroundColor: 0xf39c12,\n    hoverColor: 0xe67e22,\n    pressedColor: 0xd35400,\n    borderColor: 0xe67e22\n  },\n  \n  SECONDARY: {\n    backgroundColor: 0x95a5a6,\n    hoverColor: 0x7f8c8d,\n    pressedColor: 0x6c7b7d,\n    borderColor: 0x7f8c8d\n  }\n};\n","import Phaser from 'phaser';\nimport { PlaneConfig } from '../types/planes';\nimport { Button, ButtonStyles } from './components/Button';\nimport { Panel, PanelStyles } from './components/Panel';\nimport { PlaneRenderer } from '../planes/PlaneRenderer';\n\nexport interface PlaneSelectorConfig {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  planes: PlaneConfig[];\n  columns?: number;\n  spacing?: number;\n}\n\nexport class PlaneSelector extends Phaser.GameObjects.Container {\n  private config: PlaneSelectorConfig;\n  private planeButtons: Button[] = [];\n  private selectedIndex: number = 0;\n  private backgroundPanel: Panel;\n  private planeRenderer: PlaneRenderer;\n  private planeGraphics: Map<string, Phaser.GameObjects.Graphics> = new Map();\n\n  constructor(scene: Phaser.Scene, config: PlaneSelectorConfig) {\n    super(scene, config.x, config.y);\n    \n    this.config = {\n      columns: 4,\n      spacing: 10,\n      ...config\n    };\n\n    this.planeRenderer = new PlaneRenderer(scene);\n\n    // 創建背景面板\n    this.backgroundPanel = new Panel(scene, {\n      x: 0,\n      y: 0,\n      width: this.config.width,\n      height: this.config.height,\n      title: '🛩️ 選擇您的飛機',\n      ...PanelStyles.DEFAULT\n    });\n    this.add(this.backgroundPanel);\n\n    // 創建飛機按鈕\n    this.createPlaneButtons();\n\n    // 選擇第一架飛機\n    this.selectPlane(0);\n\n    // 添加到場景\n    scene.add.existing(this);\n  }\n\n  private createPlaneButtons() {\n    const contentBounds = this.backgroundPanel.getContentBounds();\n    const buttonWidth = (contentBounds.width - (this.config.columns! - 1) * this.config.spacing!) / this.config.columns!;\n    const buttonHeight = 80;\n    const rows = Math.ceil(this.config.planes.length / this.config.columns!);\n    const totalHeight = rows * buttonHeight + (rows - 1) * this.config.spacing!;\n    const startY = contentBounds.y + (contentBounds.height - totalHeight) / 2;\n\n    this.config.planes.forEach((plane, index) => {\n      const row = Math.floor(index / this.config.columns!);\n      const col = index % this.config.columns!;\n      \n      const x = contentBounds.x + col * (buttonWidth + this.config.spacing!) + buttonWidth / 2;\n      const y = startY + row * (buttonHeight + this.config.spacing!) + buttonHeight / 2;\n\n      // 創建飛機圖形\n      const planeGraphics = this.scene.add.graphics();\n      this.planeRenderer.renderPlane(planeGraphics, plane);\n      planeGraphics.setScale(0.6);\n      this.planeGraphics.set(plane.id, planeGraphics);\n\n      // 創建按鈕\n      const button = new Button(this.scene, {\n        x: x,\n        y: y,\n        width: buttonWidth,\n        height: buttonHeight,\n        text: '',\n        ...ButtonStyles.SECONDARY\n      });\n\n      // 添加飛機圖形到按鈕\n      button.add(planeGraphics);\n      planeGraphics.setPosition(0, -10);\n\n      // 添加飛機名稱\n      const nameText = this.scene.add.text(0, 25, plane.displayName, {\n        fontSize: '12px',\n        color: '#ecf0f1',\n        fontFamily: 'Arial',\n        align: 'center'\n      });\n      nameText.setOrigin(0.5);\n      button.add(nameText);\n\n      // 設置點擊事件\n      button.on('click', () => {\n        this.selectPlane(index);\n        this.emit('plane-selected', plane, index);\n      });\n\n      this.planeButtons.push(button);\n      this.backgroundPanel.addContent(button);\n    });\n  }\n\n  public selectPlane(index: number): void {\n    if (index < 0 || index >= this.config.planes.length) return;\n\n    // 更新之前選中的按鈕\n    if (this.planeButtons[this.selectedIndex]) {\n      this.planeButtons[this.selectedIndex].setBackgroundColor(ButtonStyles.SECONDARY.backgroundColor!);\n    }\n\n    // 更新新選中的按鈕\n    this.selectedIndex = index;\n    if (this.planeButtons[this.selectedIndex]) {\n      this.planeButtons[this.selectedIndex].setBackgroundColor(ButtonStyles.PRIMARY.backgroundColor!);\n    }\n\n    console.log(`✈️ 選擇飛機: ${this.config.planes[index].displayName}`);\n  }\n\n  public getSelectedPlane(): PlaneConfig {\n    return this.config.planes[this.selectedIndex];\n  }\n\n  public getSelectedIndex(): number {\n    return this.selectedIndex;\n  }\n\n  public setPlanes(planes: PlaneConfig[]): void {\n    this.config.planes = planes;\n    \n    // 清除現有按鈕\n    this.planeButtons.forEach(button => button.destroy());\n    this.planeButtons = [];\n    this.planeGraphics.clear();\n    this.backgroundPanel.clearContent();\n\n    // 重新創建按鈕\n    this.createPlaneButtons();\n    this.selectPlane(0);\n  }\n\n  public setEnabled(enabled: boolean): void {\n    this.planeButtons.forEach(button => {\n      button.setEnabled(enabled);\n    });\n  }\n\n  public highlightPlane(index: number, _duration: number = 1000): void {\n    if (index < 0 || index >= this.planeButtons.length) return;\n\n    const button = this.planeButtons[index];\n    const originalScale = button.scaleX;\n\n    // 創建高亮動畫\n    this.scene.tweens.add({\n      targets: button,\n      scaleX: originalScale * 1.2,\n      scaleY: originalScale * 1.2,\n      duration: 200,\n      yoyo: true,\n      repeat: 2,\n      ease: 'Power2'\n    });\n\n    // 創建顏色閃爍效果\n    const originalColor = ButtonStyles.SECONDARY.backgroundColor!;\n    const highlightColor = 0xf39c12;\n\n    this.scene.tweens.add({\n      targets: { color: originalColor },\n      color: highlightColor,\n      duration: 100,\n      yoyo: true,\n      repeat: 4,\n      onUpdate: (tween) => {\n        button.setBackgroundColor(Math.floor(tween.getValue() || 0));\n      },\n      onComplete: () => {\n        if (index !== this.selectedIndex) {\n          button.setBackgroundColor(originalColor);\n        }\n      }\n    });\n  }\n\n  public animateIn(): void {\n    // 設置初始狀態\n    this.setAlpha(0);\n    this.setScale(0.8);\n\n    // 淡入動畫\n    this.scene.tweens.add({\n      targets: this,\n      alpha: 1,\n      scaleX: 1,\n      scaleY: 1,\n      duration: 500,\n      ease: 'Back.easeOut'\n    });\n\n    // 按鈕依次出現動畫\n    this.planeButtons.forEach((button, index) => {\n      button.setAlpha(0);\n      button.setScale(0);\n\n      this.scene.tweens.add({\n        targets: button,\n        alpha: 1,\n        scaleX: 1,\n        scaleY: 1,\n        duration: 300,\n        delay: index * 50,\n        ease: 'Back.easeOut'\n      });\n    });\n  }\n\n  public animateOut(): Promise<void> {\n    return new Promise((resolve) => {\n      this.scene.tweens.add({\n        targets: this,\n        alpha: 0,\n        scaleX: 0.8,\n        scaleY: 0.8,\n        duration: 300,\n        ease: 'Power2.easeIn',\n        onComplete: () => resolve()\n      });\n    });\n  }\n\n  public destroy(fromScene?: boolean): void {\n    this.planeButtons.forEach(button => button.destroy());\n    this.planeGraphics.forEach(graphics => graphics.destroy());\n    this.planeGraphics.clear();\n    this.planeRenderer.destroy();\n    super.destroy(fromScene);\n  }\n}\n","import Phaser from 'phaser';\nimport { SCENE_KEYS } from '../config/gameConfig';\nimport { ALL_PLANE_CONFIGS } from '../../planes/configs/index';\nimport { PlaneManager } from '../../planes/PlaneManager';\nimport { PlaneSelector } from '../../ui/PlaneSelector';\nimport { Panel, PanelStyles } from '../../ui/components/Panel';\nimport { PlaneConfig } from '../../types/planes';\n\nexport class MenuScene extends Phaser.Scene {\n  private selectedPlaneIndex: number = 0;\n  private planeSelector!: PlaneSelector;\n  private planeDetailPanel!: Panel;\n  private planeManager!: PlaneManager;\n\n  constructor() {\n    super({ key: SCENE_KEYS.MENU });\n  }\n\n  create() {\n    console.log('🎮 MenuScene: 創建選單場景');\n\n    const { width, height } = this.cameras.main;\n\n    // 設置背景\n    this.add.image(width / 2, height / 2, 'background-placeholder');\n\n    // 創建標題\n    this.createTitle();\n\n    // 創建直接開始按鈕（不再需要飛機選擇）\n    this.createDirectStartButton();\n  }\n\n  private createDirectStartButton() {\n    const { width, height } = this.cameras.main;\n\n    // 創建大型開始按鈕\n    const startButton = this.add.rectangle(width / 2, height / 2, 300, 80, 0x4CAF50)\n      .setInteractive()\n      .setStrokeStyle(3, 0x45a049);\n\n    const startText = this.add.text(width / 2, height / 2, '🎯 開始射手冒險', {\n      fontSize: '24px',\n      color: '#ffffff',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n\n    // 按鈕懸停效果\n    startButton.on('pointerover', () => {\n      startButton.setFillStyle(0x45a049);\n      startText.setScale(1.1);\n    });\n\n    startButton.on('pointerout', () => {\n      startButton.setFillStyle(0x4CAF50);\n      startText.setScale(1.0);\n    });\n\n    // 點擊直接開始遊戲\n    startButton.on('pointerdown', () => {\n      console.log('🎯 直接開始射手遊戲');\n      this.scene.start(SCENE_KEYS.GAME);\n    });\n  }\n\n  private createTitle() {\n    const { width } = this.cameras.main;\n\n    this.add.text(width / 2, 60, '� 太空梭森林冒險', {\n      fontSize: '36px',\n      color: '#2c3e50',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    }).setOrigin(0.5);\n\n    // 添加陰影效果\n    this.add.text(width / 2 + 2, 62, '� 太空梭森林冒險', {\n      fontSize: '36px',\n      color: '#34495e',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    }).setOrigin(0.5).setDepth(-1);\n\n    // 添加副標題\n    this.add.text(width / 2, 100, '駕駛太空梭穿越神秘森林', {\n      fontSize: '18px',\n      color: '#7f8c8d',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n  }\n\n  private createModernPlaneSelector() {\n    const { width, height } = this.cameras.main;\n\n    this.planeSelector = new PlaneSelector(this, {\n      x: width / 2,\n      y: height / 2 - 20,\n      width: 600,\n      height: 200,\n      planes: ALL_PLANE_CONFIGS,\n      columns: 4,\n      spacing: 10\n    });\n\n    // 監聽飛機選擇事件\n    this.planeSelector.on('plane-selected', (plane: PlaneConfig, index: number) => {\n      this.selectedPlaneIndex = index;\n      this.planeManager.setCurrentPlane(plane.id);\n      this.updatePlaneDetailPanel(plane);\n    });\n  }\n\n  private createPlaneDetailPanel() {\n    const { width, height } = this.cameras.main;\n\n    this.planeDetailPanel = new Panel(this, {\n      x: width / 2,\n      y: height - 120,\n      width: 500,\n      height: 100,\n      title: '✈️ 飛機詳細資訊',\n      ...PanelStyles.DARK\n    });\n\n    // 初始顯示第一架飛機的資訊\n    this.updatePlaneDetailPanel(ALL_PLANE_CONFIGS[0]);\n  }\n\n  private updatePlaneDetailPanel(plane: PlaneConfig) {\n    // 清除舊內容\n    this.planeDetailPanel.clearContent();\n\n    // 飛機名稱和描述\n    const nameText = this.add.text(0, -20, plane.displayName, {\n      fontSize: '18px',\n      color: '#3498db',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    }).setOrigin(0.5);\n\n    const descText = this.add.text(0, 0, plane.description, {\n      fontSize: '14px',\n      color: '#ecf0f1',\n      fontFamily: 'Arial',\n      align: 'center'\n    }).setOrigin(0.5);\n\n    // 性能統計\n    const statsText = this.add.text(0, 20,\n      `速度: ${plane.speed} | 射擊: ${plane.fireRate}ms | 生命: ${plane.health} | 傷害: ${plane.damage}`, {\n      fontSize: '12px',\n      color: '#f39c12',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n\n    this.planeDetailPanel.addContent(nameText);\n    this.planeDetailPanel.addContent(descText);\n    this.planeDetailPanel.addContent(statsText);\n  }\n\n  private createModernStartButton() {\n    const { width, height } = this.cameras.main;\n\n    // 創建簡單的開始按鈕\n    const buttonBg = this.add.rectangle(width / 2, height - 50, 200, 50, 0xe74c3c)\n      .setStrokeStyle(2, 0xc0392b);\n\n    const buttonText = this.add.text(width / 2, height - 50, '🚀 開始遊戲', {\n      fontSize: '20px',\n      color: '#ffffff',\n      fontFamily: 'Arial',\n      fontStyle: 'bold'\n    }).setOrigin(0.5);\n\n    // 設置互動\n    buttonBg.setInteractive()\n      .on('pointerdown', () => this.startGame())\n      .on('pointerover', () => {\n        buttonBg.setFillStyle(0xc0392b);\n        buttonBg.setScale(1.1);\n        buttonText.setScale(1.1);\n      })\n      .on('pointerout', () => {\n        buttonBg.setFillStyle(0xe74c3c);\n        buttonBg.setScale(1);\n        buttonText.setScale(1);\n      });\n  }\n\n  private playEntranceAnimation() {\n    // 飛機選擇器入場動畫\n    this.planeSelector.animateIn();\n\n    // 詳細面板入場動畫\n    this.planeDetailPanel.setAlpha(0);\n    this.planeDetailPanel.setY(this.planeDetailPanel.y + 50);\n\n    this.tweens.add({\n      targets: this.planeDetailPanel,\n      alpha: 1,\n      y: this.planeDetailPanel.y - 50,\n      duration: 600,\n      delay: 300,\n      ease: 'Power2.easeOut'\n    });\n\n    // 開始按鈕入場動畫已在 createModernStartButton 中處理\n  }\n\n  private onPlaneSelected(event: any) {\n    console.log('飛機選擇事件:', event);\n  }\n\n  // 移除重複的舊方法，使用新的現代化組件\n  // private selectPlane(index: number): void {\n  //   if (index < 0 || index >= ALL_PLANE_CONFIGS.length) return;\n  //\n  //   this.selectedPlaneIndex = index;\n  //   const selectedPlane = ALL_PLANE_CONFIGS[index];\n  //   this.planeManager.setCurrentPlane(selectedPlane.id);\n  //   this.updatePlaneDetailPanel(selectedPlane);\n  //\n  //   console.log(`✈️ 選擇飛機: ${selectedPlane.displayName}`);\n  // }\n\n  private startGame() {\n    console.log(`🚀 開始遊戲，使用飛機: ${ALL_PLANE_CONFIGS[this.selectedPlaneIndex].displayName}`);\n\n    // 傳遞選中的飛機配置到遊戲場景\n    this.scene.start(SCENE_KEYS.GAME, {\n      selectedPlane: ALL_PLANE_CONFIGS[this.selectedPlaneIndex]\n    });\n  }\n}\n\n","import Phaser from 'phaser';\nimport { SCENE_KEYS, GAME_CONFIG, ASSET_KEYS } from '../config/gameConfig';\n// import { AssetLoader } from '../../utils/AssetLoader';\n\nexport class LoadingScene extends Phaser.Scene {\n  private loadingText!: Phaser.GameObjects.Text;\n  private progressBar!: Phaser.GameObjects.Graphics;\n  private progressBox!: Phaser.GameObjects.Graphics;\n  // private _loadingProgress: number = 0;\n  // private assetLoader!: AssetLoader;\n\n  constructor() {\n    super({ key: SCENE_KEYS.LOADING });\n  }\n\n  preload() {\n    console.log('📦 LoadingScene: 開始載入資源');\n\n    // 初始化資源載入器\n    // this.assetLoader = new AssetLoader(this);\n\n    // 創建載入畫面 UI\n    this.createLoadingUI();\n\n    // 設置載入事件監聽\n    this.setupLoadingEvents();\n\n    // 載入基本資源（暫時使用程序生成的圖形）\n    this.loadBasicAssets();\n  }\n\n  create() {\n    console.log('✅ LoadingScene: 資源載入完成');\n    \n    // 短暫延遲後切換到選單場景\n    this.time.delayedCall(1000, () => {\n      this.scene.start(SCENE_KEYS.MENU);\n    });\n  }\n\n  private createLoadingUI() {\n    const { width, height } = this.cameras.main;\n    \n    // 背景\n    this.add.rectangle(width / 2, height / 2, width, height, 0x2c3e50);\n    \n    // 標題\n    this.add.text(width / 2, height / 2 - 100, '🛩️ Phaser 3 飛機選擇器', {\n      fontSize: '32px',\n      color: '#3498db',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n    \n    // 載入文字\n    this.loadingText = this.add.text(width / 2, height / 2 + 50, '載入中...', {\n      fontSize: '18px',\n      color: '#ecf0f1',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5);\n    \n    // 進度條背景\n    this.progressBox = this.add.graphics();\n    this.progressBox.fillStyle(0x34495e);\n    this.progressBox.fillRect(width / 2 - 160, height / 2 + 80, 320, 20);\n    \n    // 進度條\n    this.progressBar = this.add.graphics();\n  }\n\n  private setupLoadingEvents() {\n    // 載入進度事件\n    this.load.on('progress', (value: number) => {\n      // this._loadingProgress = value;\n      this.updateProgressBar(value);\n      this.loadingText.setText(`載入中... ${Math.round(value * 100)}%`);\n    });\n\n    // 載入完成事件\n    this.load.on('complete', () => {\n      this.loadingText.setText('載入完成！');\n      console.log('📦 所有資源載入完成');\n    });\n\n    // 載入錯誤事件\n    this.load.on('loaderror', (file: any) => {\n      console.error('❌ 資源載入失敗:', file.key);\n      this.loadingText.setText(`載入失敗: ${file.key}`);\n    });\n  }\n\n  private updateProgressBar(progress: number) {\n    const { width, height } = this.cameras.main;\n\n    this.progressBar.clear();\n    this.progressBar.fillStyle(0x3498db);\n    this.progressBar.fillRect(width / 2 - 158, height / 2 + 82, 316 * progress, 16);\n  }\n\n  private loadBasicAssets() {\n    // 載入真實的飛機圖片\n    this.loadPlaneAssets();\n\n    // 創建基本的程序生成圖形作為佔位符\n    this.load.image('plane-placeholder', this.createPlaneTexture());\n\n    // 創建子彈精靈的佔位符\n    this.load.image('bullet-placeholder', this.createBulletTexture());\n\n    // 創建敵機精靈的佔位符\n    this.load.image('enemy-placeholder', this.createEnemyTexture());\n\n    // 創建背景精靈的佔位符\n    this.load.image('background-placeholder', this.createBackgroundTexture());\n\n    // 模擬載入時間\n    for (let i = 0; i < 10; i++) {\n      this.load.image(`dummy-${i}`, this.createDummyTexture());\n    }\n  }\n\n  private loadPlaneAssets() {\n    // 載入所有飛機圖片\n    console.log('🛩️ 開始載入真實飛機圖片...');\n\n    try {\n      this.load.image(ASSET_KEYS.PLANES.B17, 'assets/planes/b17.png');\n      this.load.image(ASSET_KEYS.PLANES.BF109, 'assets/planes/bf109.png');\n      this.load.image(ASSET_KEYS.PLANES.BIPLANE, 'assets/planes/biplane.png');\n      this.load.image(ASSET_KEYS.PLANES.TBM3, 'assets/planes/tbm3.png');\n      this.load.image(ASSET_KEYS.PLANES.HAWKER, 'assets/planes/hawker.png');\n      this.load.image(ASSET_KEYS.PLANES.JU87, 'assets/planes/ju87.png');\n      this.load.image(ASSET_KEYS.PLANES.BLENHEIM, 'assets/planes/blenheim.png');\n\n      // 載入雲朵敵人\n      this.load.image('cloud-enemy', 'assets/cloud-enemy.png');\n\n      // 載入月球視差背景\n      this.load.image('moon-sky', 'assets/backgrounds/moon_sky.png');\n      this.load.image('moon-earth', 'assets/backgrounds/moon_earth.png');\n      this.load.image('moon-back', 'assets/backgrounds/moon_back.png');\n      this.load.image('moon-mid', 'assets/backgrounds/moon_mid.png');\n      this.load.image('moon-front', 'assets/backgrounds/moon_front.png');\n      this.load.image('moon-floor', 'assets/backgrounds/moon_floor.png');\n\n      // 載入射手精靈圖（替代太空梭）\n      // 實際結構：2540x218，4幀動畫序列，每幀635x218像素\n      this.load.spritesheet('shooter-sprite', 'assets/shooter-sprite.png', {\n        frameWidth: 635,  // 每幀635像素寬\n        frameHeight: 218  // 高度218像素\n      });\n\n      console.log('✅ 雲朵敵人、月球視差背景和射手精靈載入配置完成');\n    } catch (error) {\n      console.error('❌ 資源載入配置失敗:', error);\n    }\n  }\n\n  private createPlaneTexture(): string {\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const ctx = canvas.getContext('2d')!;\n    \n    // 繪製簡單的飛機形狀\n    ctx.fillStyle = '#3498db';\n    ctx.beginPath();\n    ctx.moveTo(32, 10);\n    ctx.lineTo(20, 40);\n    ctx.lineTo(32, 35);\n    ctx.lineTo(44, 40);\n    ctx.closePath();\n    ctx.fill();\n    \n    // 機翼\n    ctx.fillStyle = '#2980b9';\n    ctx.fillRect(15, 25, 34, 8);\n    \n    return canvas.toDataURL();\n  }\n\n  private createBulletTexture(): string {\n    const canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 16;\n    const ctx = canvas.getContext('2d')!;\n    \n    ctx.fillStyle = '#f39c12';\n    ctx.fillRect(2, 0, 4, 16);\n    \n    return canvas.toDataURL();\n  }\n\n  private createEnemyTexture(): string {\n    const canvas = document.createElement('canvas');\n    canvas.width = 48;\n    canvas.height = 48;\n    const ctx = canvas.getContext('2d')!;\n    \n    // 繪製敵機\n    ctx.fillStyle = '#e74c3c';\n    ctx.beginPath();\n    ctx.moveTo(24, 38);\n    ctx.lineTo(12, 8);\n    ctx.lineTo(24, 13);\n    ctx.lineTo(36, 8);\n    ctx.closePath();\n    ctx.fill();\n    \n    // 機翼\n    ctx.fillStyle = '#c0392b';\n    ctx.fillRect(8, 18, 32, 6);\n    \n    return canvas.toDataURL();\n  }\n\n  private createBackgroundTexture(): string {\n    const canvas = document.createElement('canvas');\n    canvas.width = GAME_CONFIG.SCREEN.WIDTH;\n    canvas.height = GAME_CONFIG.SCREEN.HEIGHT;\n    const ctx = canvas.getContext('2d')!;\n\n    // 創建漸變背景（純天空，無雲朵）\n    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n    gradient.addColorStop(0, '#87CEEB');\n    gradient.addColorStop(1, '#4682B4');\n\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // 移除雲朵 - 現在雲朵將作為敵人出現\n    console.log('🌤️ 創建純天空背景，雲朵將作為敵人出現');\n\n    return canvas.toDataURL();\n  }\n\n  private createDummyTexture(): string {\n    const canvas = document.createElement('canvas');\n    canvas.width = 32;\n    canvas.height = 32;\n    const ctx = canvas.getContext('2d')!;\n    \n    ctx.fillStyle = '#95a5a6';\n    ctx.fillRect(0, 0, 32, 32);\n    \n    return canvas.toDataURL();\n  }\n}\n","import Phaser from 'phaser';\nimport { GameScene } from '../scenes/GameScene';\nimport { MenuScene } from '../scenes/MenuScene';\nimport { LoadingScene } from '../scenes/LoadingScene';\n\n// 遊戲常數\nexport const GAME_CONFIG = {\n  // 畫面設定\n  SCREEN: {\n    WIDTH: 1200,\n    HEIGHT: 900,\n    BACKGROUND_COLOR: '#2c3e50'\n  },\n  \n  // 物理設定\n  PHYSICS: {\n    GRAVITY_Y: 0,\n    DEBUG: false\n  },\n  \n  // 玩家設定\n  PLAYER: {\n    START_X: 150,\n    START_Y: 450,\n    MAX_SPEED: 400,\n    ACCELERATION: 800,\n    DRAG: 600\n  },\n  \n  // 敵人設定\n  ENEMY: {\n    SPAWN_RATE: 2000,\n    MIN_SPEED: 100,\n    MAX_SPEED: 300,\n    SPAWN_X: 1250,\n    MIN_Y: 75,\n    MAX_Y: 825\n  },\n  \n  // 子彈設定\n  BULLET: {\n    SPEED: 600,\n    FIRE_RATE: 250,\n    MAX_BULLETS: 20\n  },\n  \n  // UI 設定\n  UI: {\n    FONT_FAMILY: 'Arial',\n    FONT_SIZE: 24,\n    SCORE_COLOR: '#ffffff',\n    HUD_PADDING: 20\n  }\n} as const;\n\n// Phaser 3 遊戲配置\nexport const phaserConfig: Phaser.Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  width: GAME_CONFIG.SCREEN.WIDTH,\n  height: GAME_CONFIG.SCREEN.HEIGHT,\n  parent: 'game-container',\n  backgroundColor: GAME_CONFIG.SCREEN.BACKGROUND_COLOR,\n  \n  // 場景配置\n  scene: [\n    LoadingScene,\n    MenuScene,\n    GameScene\n  ],\n  \n  // 物理引擎配置\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { x: 0, y: GAME_CONFIG.PHYSICS.GRAVITY_Y },\n      debug: GAME_CONFIG.PHYSICS.DEBUG\n    }\n  },\n  \n  // 輸入配置\n  input: {\n    keyboard: true,\n    mouse: true,\n    touch: true\n  },\n  \n  // 渲染配置\n  render: {\n    antialias: true,\n    pixelArt: false,\n    roundPixels: false\n  },\n  \n  // 音頻配置\n  audio: {\n    disableWebAudio: false\n  },\n  \n  // 縮放配置\n  scale: {\n    mode: Phaser.Scale.NONE,\n    autoCenter: Phaser.Scale.NO_CENTER,\n    width: 1200,\n    height: 900\n  }\n};\n\n// 場景鍵值\nexport const SCENE_KEYS = {\n  LOADING: 'LoadingScene',\n  MENU: 'MenuScene',\n  GAME: 'GameScene'\n} as const;\n\n// 資源鍵值\nexport const ASSET_KEYS = {\n  // 飛機\n  PLANES: {\n    B17: 'plane-b17',\n    BF109: 'plane-bf109',\n    BIPLANE: 'plane-biplane',\n    TBM3: 'plane-tbm3',\n    HAWKER: 'plane-hawker',\n    JU87: 'plane-ju87',\n    BLENHEIM: 'plane-blenheim'\n  },\n  \n  // 音效\n  SOUNDS: {\n    SHOOT: 'sound-shoot',\n    EXPLOSION: 'sound-explosion',\n    ENGINE: 'sound-engine',\n    SELECT: 'sound-select'\n  },\n  \n  // UI\n  UI: {\n    BUTTON: 'ui-button',\n    PANEL: 'ui-panel',\n    SELECTOR: 'ui-selector'\n  }\n} as const;\n\n// 輸入鍵值映射\nexport const INPUT_KEYS = {\n  // 移動控制\n  UP: 'UP',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT',\n  \n  // 動作控制\n  FIRE: 'SPACE',\n  RESTART: 'R',\n  \n  // 飛機選擇\n  PLANE_1: 'ONE',\n  PLANE_2: 'TWO',\n  PLANE_3: 'THREE',\n  PLANE_4: 'FOUR',\n  PLANE_5: 'FIVE',\n  PLANE_6: 'SIX',\n  PLANE_7: 'SEVEN'\n} as const;\n\n// 遊戲狀態\nexport enum GameState {\n  LOADING = 'loading',\n  MENU = 'menu',\n  PLAYING = 'playing',\n  PAUSED = 'paused',\n  GAME_OVER = 'game_over'\n}\n\n// 事件名稱\nexport const GAME_EVENTS = {\n  PLANE_SELECTED: 'plane-selected',\n  SCORE_UPDATED: 'score-updated',\n  GAME_OVER: 'game-over',\n  ENEMY_DESTROYED: 'enemy-destroyed',\n  PLAYER_HIT: 'player-hit'\n} as const;\n"],"names":["InputManager","constructor","scene","this","keys","inputBuffer","Map","debounceDelay","keyComboBuffer","comboTimeout","eventEmitter","Phaser","Events","EventEmitter","inputState","movement","up","down","left","right","actions","fire","restart","planeSelection","setupKeyboard","setupMouse","setupGamepad","input","keyboard","cursors","createCursorKeys","addKey","INPUT_KEYS","FIRE","RESTART","i","keyName","w","a","s","d","setupKeyboardEvents","on","canProcessInput","emit","GAME_EVENTS","PLANE_SELECTED","recordInput","event","handleKeyCombo","code","pointer","leftButtonDown","isDown","x","y","worldX","worldY","gamepad","pad","console","log","id","setupGamepadControls","index","_value","_button","update","updateMovementState","updateActionState","cleanupInputBuffer","getPad","leftStick","inputKey","Date","now","get","set","key","timestamp","entries","delete","keyCode","push","checkSpecialCombos","time","delayedCall","combo","join","combos","comboKey","eventName","Object","includes","getInputState","getMovementVector","length","Math","sqrt","isActionPressed","action","callback","context","off","destroy","removeAllListeners","clear","ALL_PLANE_CONFIGS","name","displayName","description","type","speed","fireRate","health","damage","scale","color","assetPath","soundPath","abilities","cooldown","effect","duration","multiplier","Panel","GameObjects","Container","config","super","backgroundColor","borderColor","borderWidth","cornerRadius","alpha","padding","titleStyle","fontSize","fontFamily","fontStyle","background","add","graphics","title","createTitle","contentArea","container","setSize","width","height","render","existing","titleText","text","setOrigin","fillStyle","fillRoundedRect","lineStyle","strokeRoundedRect","lineBetween","addContent","gameObject","removeContent","remove","clearContent","removeAll","setTitle","setText","setBackgroundColor","setBorderColor","resize","getContentArea","getContentBounds","titleOffset","PanelStyles","GameHUD","currentScore","currentHealth","maxHealth","selectedPlane","createHUD","updateDisplay","setScrollFactor","cameras","main","scorePanel","scoreText","planeInfoPanel","planeNameText","planeStatsText","getPlaneStatsText","align","createHealthBar","healthBg","healthBar","healthText","healthLabel","toString","updateHealthBar","healthPercentage","currentWidth","healthColor","tweens","targets","yoyo","repeat","setAlpha","killTweensOf","updateScore","score","oldScore","scaleX","scaleY","ease","value","onUpdate","tween","floor","getValue","updateHealth","oldHealth","max","min","shake","redOverlay","rectangle","onComplete","setPlane","plane","showMessage","message","messageText","stroke","strokeThickness","getCurrentScore","getCurrentHealth","isHealthLow","GameScene","Scene","SCENE_KEYS","GAME","gameOver","bulletTime","playerHealth","init","create","planeManager","PlaneManager","getInstance","inputManager","createParallaxBackground","createPlayer","createGroups","createGameHUD","setupInput","setupPhysics","startEnemySpawning","_delta","updateParallaxBackground","handlePlayerMovement","handleShooting","cleanupObjects","player","createPlaneSprite","setPosition","GAME_CONFIG","PLAYER","START_X","animKey","anims","exists","play","physics","playerBody","body","setCollideWorldBounds","setDrag","DRAG","setMaxVelocity","bullets","group","defaultKey","maxSize","BULLET","MAX_BULLETS","enemies","gameHUD","restartGame","overlap","bullet","enemy","hitEnemy","_player","hitPlayer","enemyTimer","addEvent","delay","ENEMY","SPAWN_RATE","spawnEnemy","callbackScope","loop","setAcceleration","ACCELERATION","fireBullet","setActive","setVisible","setVelocityX","SPEED","Between","MIN_Y","MAX_Y","SPAWN_X","enemyBody","setScale","setTint","MIN_SPEED","MAX_SPEED","showGameOver","children","forEach","bulletSprite","enemySprite","backgroundLayers","sky","tileSprite","earth","back","mid","front","setDepth","visible","textureKey","texture","depth","tileScaleX","tileScaleY","tilePositionX","Button","isHovered","isPressed","isDisabled","hoverColor","pressedColor","disabled","style","label","setInteractive","setupEvents","onPointerOver","onPointerOut","onPointerDown","onPointerUp","sound","volume","fillColor","setColor","setEnabled","enabled","removeInteractive","setStyle","setHoverColor","setPressedColor","isButtonDisabled","fromScene","ButtonStyles","PlaneSelector","planeButtons","selectedIndex","planeGraphics","columns","spacing","planeRenderer","PlaneRenderer","backgroundPanel","createPlaneButtons","selectPlane","contentBounds","buttonWidth","rows","ceil","planes","totalHeight","startY","row","col","buttonHeight","renderPlane","button","nameText","getSelectedPlane","getSelectedIndex","setPlanes","highlightPlane","_duration","originalScale","originalColor","animateIn","animateOut","Promise","resolve","MenuScene","MENU","selectedPlaneIndex","image","createDirectStartButton","startButton","setStrokeStyle","startText","setFillStyle","start","createModernPlaneSelector","planeSelector","setCurrentPlane","updatePlaneDetailPanel","createPlaneDetailPanel","planeDetailPanel","descText","statsText","createModernStartButton","buttonBg","buttonText","startGame","playEntranceAnimation","setY","onPlaneSelected","LoadingScene","LOADING","preload","createLoadingUI","setupLoadingEvents","loadBasicAssets","loadingText","progressBox","fillRect","progressBar","load","updateProgressBar","round","file","error","progress","loadPlaneAssets","createPlaneTexture","createBulletTexture","createEnemyTexture","createBackgroundTexture","createDummyTexture","ASSET_KEYS","PLANES","B17","BF109","BIPLANE","TBM3","HAWKER","JU87","BLENHEIM","spritesheet","frameWidth","frameHeight","canvas","document","createElement","ctx","getContext","beginPath","moveTo","lineTo","closePath","fill","toDataURL","SCREEN","WIDTH","HEIGHT","gradient","createLinearGradient","addColorStop","BACKGROUND_COLOR","PHYSICS","GRAVITY_Y","DEBUG","START_Y","FIRE_RATE","UI","FONT_FAMILY","FONT_SIZE","SCORE_COLOR","HUD_PADDING","phaserConfig","AUTO","parent","default","arcade","gravity","debug","mouse","touch","antialias","pixelArt","roundPixels","audio","disableWebAudio","mode","Scale","NONE","autoCenter","NO_CENTER","SOUNDS","SHOOT","EXPLOSION","ENGINE","SELECT","BUTTON","PANEL","SELECTOR","UP","DOWN","LEFT","RIGHT","PLANE_1","PLANE_2","PLANE_3","PLANE_4","PLANE_5","PLANE_6","PLANE_7","SCORE_UPDATED","GAME_OVER","ENEMY_DESTROYED","PLAYER_HIT"],"mappings":"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"}