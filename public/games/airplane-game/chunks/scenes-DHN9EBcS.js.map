{"version":3,"file":"scenes-DHN9EBcS.js","sources":["../../src/managers/BilingualManager.ts","../../src/managers/ChineseUIManager.ts","../../src/managers/ResponsiveManager.ts","../../src/ui/HealthBar.ts","../../src/ui/FullscreenButton.ts","../../src/scenes/GameScene.ts"],"sourcesContent":["/**\r\n * BilingualManager - 中英文雙語管理系統\r\n * 基於 Task 1.5.1 需求分析設計\r\n * 整合 GEPTManager 提供完整的雙語功能\r\n */\r\n\r\nimport { GEPTManager, GEPTWord, GEPTLevel } from './GEPTManager';\r\n\r\nexport interface BilingualDisplayConfig {\r\n  position: 'top-center' | 'bottom-center' | 'floating';\r\n  style: {\r\n    fontSize: number;\r\n    fontFamily: string;\r\n    color: string;\r\n    backgroundColor: string;\r\n    padding: { x: number; y: number };\r\n    borderRadius: number;\r\n    border: string;\r\n  };\r\n  animation: {\r\n    fadeIn: { duration: number; ease: string };\r\n    fadeOut: { duration: number; ease: string };\r\n    bounce?: { amplitude: number; duration: number };\r\n  };\r\n}\r\n\r\nexport interface BilingualPromptState {\r\n  isVisible: boolean;\r\n  currentWord: GEPTWord | null;\r\n  displayMode: 'chinese-only' | 'english-only' | 'both';\r\n  lastUpdateTime: number;\r\n}\r\n\r\nexport interface AccessibilitySettings {\r\n  fontSize: 'small' | 'medium' | 'large' | 'extra-large';\r\n  contrast: 'normal' | 'high' | 'reverse';\r\n  enableVoice: boolean;\r\n  enableKeyboardNav: boolean;\r\n  screenReaderMode: boolean;\r\n}\r\n\r\n/**\r\n * 雙語管理器 - 核心雙語功能管理\r\n */\r\nexport class BilingualManager {\r\n  private scene: Phaser.Scene;\r\n  private geptManager: GEPTManager;\r\n  private promptContainer: Phaser.GameObjects.Container | null = null;\r\n  private chineseText: Phaser.GameObjects.Text | null = null;\r\n  private englishText: Phaser.GameObjects.Text | null = null;\r\n  private backgroundRect: Phaser.GameObjects.Rectangle | null = null;\r\n  \r\n  private config: BilingualDisplayConfig;\r\n  private state: BilingualPromptState;\r\n  private accessibilitySettings: AccessibilitySettings;\r\n  \r\n  // 快取系統\r\n  private wordCache: Map<string, GEPTWord> = new Map();\r\n  private translationCache: Map<string, string> = new Map();\r\n  \r\n  constructor(scene: Phaser.Scene, geptManager: GEPTManager) {\r\n    this.scene = scene;\r\n    this.geptManager = geptManager;\r\n    \r\n    // 初始化配置\r\n    this.config = this.getDefaultConfig();\r\n    this.state = this.getInitialState();\r\n    this.accessibilitySettings = this.getDefaultAccessibilitySettings();\r\n    \r\n    this.initializePromptUI();\r\n    console.log('🌐 BilingualManager 初始化完成');\r\n  }\r\n\r\n  /**\r\n   * 獲取默認顯示配置\r\n   */\r\n  private getDefaultConfig(): BilingualDisplayConfig {\r\n    return {\r\n      position: 'top-center',\r\n      style: {\r\n        fontSize: 24,\r\n        fontFamily: 'Microsoft YaHei, SimHei, Arial, sans-serif',\r\n        color: '#FFFFFF',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        padding: { x: 16, y: 8 },\r\n        borderRadius: 8,\r\n        border: '2px solid #FFD700'\r\n      },\r\n      animation: {\r\n        fadeIn: { duration: 300, ease: 'Power2.easeOut' },\r\n        fadeOut: { duration: 200, ease: 'Power2.easeIn' },\r\n        bounce: { amplitude: 10, duration: 500 }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取初始狀態\r\n   */\r\n  private getInitialState(): BilingualPromptState {\r\n    return {\r\n      isVisible: false,\r\n      currentWord: null,\r\n      displayMode: 'chinese-only', // 用戶要求只顯示中文\r\n      lastUpdateTime: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取默認無障礙設置\r\n   */\r\n  private getDefaultAccessibilitySettings(): AccessibilitySettings {\r\n    return {\r\n      fontSize: 'medium',\r\n      contrast: 'normal',\r\n      enableVoice: false,\r\n      enableKeyboardNav: true,\r\n      screenReaderMode: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 初始化提示 UI\r\n   */\r\n  private initializePromptUI(): void {\r\n    const gameWidth = this.scene.scale.width;\r\n    const gameHeight = this.scene.scale.height;\r\n    \r\n    // 創建容器\r\n    this.promptContainer = this.scene.add.container(0, 0);\r\n    this.promptContainer.setDepth(1000); // 確保在最上層\r\n    \r\n    // 創建背景\r\n    this.backgroundRect = this.scene.add.rectangle(\r\n      0, 0, 200, 60,\r\n      0x000000, 0.8\r\n    );\r\n    this.backgroundRect.setStrokeStyle(2, 0xFFD700);\r\n    \r\n    // 創建中文文字\r\n    this.chineseText = this.scene.add.text(0, -10, '', {\r\n      fontSize: `${this.config.style.fontSize}px`,\r\n      fontFamily: this.config.style.fontFamily,\r\n      color: this.config.style.color,\r\n      align: 'center',\r\n      fontStyle: 'bold'\r\n    });\r\n    this.chineseText.setOrigin(0.5);\r\n    \r\n    // 創建英文文字（小字）\r\n    this.englishText = this.scene.add.text(0, 15, '', {\r\n      fontSize: `${this.config.style.fontSize * 0.7}px`,\r\n      fontFamily: 'Arial, sans-serif',\r\n      color: '#CCCCCC',\r\n      align: 'center'\r\n    });\r\n    this.englishText.setOrigin(0.5);\r\n    \r\n    // 添加到容器\r\n    this.promptContainer.add([this.backgroundRect, this.chineseText, this.englishText]);\r\n    \r\n    // 設置位置\r\n    this.updatePromptPosition();\r\n    \r\n    // 初始隱藏\r\n    this.promptContainer.setVisible(false);\r\n    this.promptContainer.setAlpha(0);\r\n  }\r\n\r\n  /**\r\n   * 更新提示位置\r\n   */\r\n  private updatePromptPosition(): void {\r\n    if (!this.promptContainer) return;\r\n    \r\n    const gameWidth = this.scene.scale.width;\r\n    const gameHeight = this.scene.scale.height;\r\n    \r\n    switch (this.config.position) {\r\n      case 'top-center':\r\n        this.promptContainer.setPosition(gameWidth / 2, 80);\r\n        break;\r\n      case 'bottom-center':\r\n        this.promptContainer.setPosition(gameWidth / 2, gameHeight - 80);\r\n        break;\r\n      case 'floating':\r\n        // 浮動位置會在 showChinesePrompt 中動態設置\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示中文提示\r\n   */\r\n  showChinesePrompt(englishWord: string, targetPosition?: { x: number; y: number }): void {\r\n    const word = this.getWordFromCache(englishWord);\r\n    if (!word) {\r\n      console.warn(`⚠️ 未找到詞彙: ${englishWord}`);\r\n      return;\r\n    }\r\n\r\n    this.state.currentWord = word;\r\n    this.state.isVisible = true;\r\n    this.state.lastUpdateTime = Date.now();\r\n\r\n    // 更新文字內容\r\n    if (this.chineseText) {\r\n      this.chineseText.setText(word.chinese);\r\n    }\r\n    \r\n    if (this.englishText && this.state.displayMode === 'both') {\r\n      this.englishText.setText(`(${word.english})`);\r\n    } else if (this.englishText) {\r\n      this.englishText.setText('');\r\n    }\r\n\r\n    // 調整背景大小\r\n    this.adjustBackgroundSize();\r\n\r\n    // 設置浮動位置\r\n    if (this.config.position === 'floating' && targetPosition) {\r\n      this.promptContainer?.setPosition(\r\n        targetPosition.x,\r\n        targetPosition.y - 60\r\n      );\r\n    }\r\n\r\n    // 顯示動畫\r\n    this.playShowAnimation();\r\n\r\n    console.log(`🌐 顯示中文提示: ${word.chinese} (${word.english})`);\r\n  }\r\n\r\n  /**\r\n   * 隱藏中文提示\r\n   */\r\n  hideChinesePrompt(): void {\r\n    if (!this.state.isVisible) return;\r\n\r\n    this.state.isVisible = false;\r\n    this.state.currentWord = null;\r\n\r\n    // 隱藏動畫\r\n    this.playHideAnimation();\r\n\r\n    console.log('🌐 隱藏中文提示');\r\n  }\r\n\r\n  /**\r\n   * 更新目標詞彙\r\n   */\r\n  updateTargetWord(englishWord: string): void {\r\n    const word = this.getWordFromCache(englishWord);\r\n    if (!word) {\r\n      console.warn(`⚠️ 未找到目標詞彙: ${englishWord}`);\r\n      return;\r\n    }\r\n\r\n    // 如果當前正在顯示，更新內容\r\n    if (this.state.isVisible) {\r\n      this.showChinesePrompt(englishWord);\r\n    }\r\n\r\n    console.log(`🎯 更新目標詞彙: ${word.chinese} (${word.english})`);\r\n  }\r\n\r\n  /**\r\n   * 從快取獲取詞彙\r\n   */\r\n  private getWordFromCache(englishWord: string): GEPTWord | null {\r\n    // 先檢查快取\r\n    if (this.wordCache.has(englishWord)) {\r\n      return this.wordCache.get(englishWord)!;\r\n    }\r\n\r\n    // 從 GEPTManager 查找\r\n    const word = this.geptManager.findWordByEnglish(englishWord);\r\n    if (word) {\r\n      // 添加到快取\r\n      this.wordCache.set(englishWord, word);\r\n      this.translationCache.set(englishWord, word.chinese);\r\n    }\r\n\r\n    return word;\r\n  }\r\n\r\n  /**\r\n   * 調整背景大小\r\n   */\r\n  private adjustBackgroundSize(): void {\r\n    if (!this.backgroundRect || !this.chineseText) return;\r\n\r\n    const textBounds = this.chineseText.getBounds();\r\n    const padding = this.config.style.padding;\r\n    \r\n    const width = Math.max(textBounds.width + padding.x * 2, 120);\r\n    const height = Math.max(textBounds.height + padding.y * 2, 50);\r\n    \r\n    this.backgroundRect.setSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * 播放顯示動畫\r\n   */\r\n  private playShowAnimation(): void {\r\n    if (!this.promptContainer) return;\r\n\r\n    this.promptContainer.setVisible(true);\r\n    \r\n    // 淡入動畫\r\n    this.scene.tweens.add({\r\n      targets: this.promptContainer,\r\n      alpha: 1,\r\n      duration: this.config.animation.fadeIn.duration,\r\n      ease: this.config.animation.fadeIn.ease,\r\n      onComplete: () => {\r\n        // 可選的彈跳效果\r\n        if (this.config.animation.bounce) {\r\n          this.playBounceAnimation();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 播放隱藏動畫\r\n   */\r\n  private playHideAnimation(): void {\r\n    if (!this.promptContainer) return;\r\n\r\n    this.scene.tweens.add({\r\n      targets: this.promptContainer,\r\n      alpha: 0,\r\n      duration: this.config.animation.fadeOut.duration,\r\n      ease: this.config.animation.fadeOut.ease,\r\n      onComplete: () => {\r\n        this.promptContainer?.setVisible(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 播放彈跳動畫\r\n   */\r\n  private playBounceAnimation(): void {\r\n    if (!this.promptContainer || !this.config.animation.bounce) return;\r\n\r\n    const originalY = this.promptContainer.y;\r\n    const bounce = this.config.animation.bounce;\r\n\r\n    this.scene.tweens.add({\r\n      targets: this.promptContainer,\r\n      y: originalY - bounce.amplitude,\r\n      duration: bounce.duration / 2,\r\n      ease: 'Power2.easeOut',\r\n      yoyo: true,\r\n      repeat: 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 設置顯示模式\r\n   */\r\n  setDisplayMode(mode: 'chinese-only' | 'english-only' | 'both'): void {\r\n    this.state.displayMode = mode;\r\n    \r\n    // 如果當前正在顯示，更新顯示\r\n    if (this.state.isVisible && this.state.currentWord) {\r\n      this.showChinesePrompt(this.state.currentWord.english);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 應用無障礙設置\r\n   */\r\n  applyAccessibilitySettings(settings: Partial<AccessibilitySettings>): void {\r\n    this.accessibilitySettings = { ...this.accessibilitySettings, ...settings };\r\n    \r\n    // 更新字體大小\r\n    this.updateFontSize();\r\n    \r\n    // 更新對比度\r\n    this.updateContrast();\r\n    \r\n    console.log('♿ 應用無障礙設置:', this.accessibilitySettings);\r\n  }\r\n\r\n  /**\r\n   * 更新字體大小\r\n   */\r\n  private updateFontSize(): void {\r\n    const sizeMap = {\r\n      'small': 18,\r\n      'medium': 24,\r\n      'large': 30,\r\n      'extra-large': 36\r\n    };\r\n    \r\n    const fontSize = sizeMap[this.accessibilitySettings.fontSize];\r\n    \r\n    if (this.chineseText) {\r\n      this.chineseText.setFontSize(fontSize);\r\n    }\r\n    \r\n    if (this.englishText) {\r\n      this.englishText.setFontSize(fontSize * 0.7);\r\n    }\r\n    \r\n    // 重新調整背景大小\r\n    this.adjustBackgroundSize();\r\n  }\r\n\r\n  /**\r\n   * 更新對比度\r\n   */\r\n  private updateContrast(): void {\r\n    const contrastMap = {\r\n      'normal': { bg: 0x000000, text: '#FFFFFF', border: 0xFFD700 },\r\n      'high': { bg: 0x000000, text: '#FFFF00', border: 0xFFFFFF },\r\n      'reverse': { bg: 0xFFFFFF, text: '#000000', border: 0x000000 }\r\n    };\r\n    \r\n    const colors = contrastMap[this.accessibilitySettings.contrast];\r\n    \r\n    if (this.backgroundRect) {\r\n      this.backgroundRect.setFillStyle(colors.bg, 0.9);\r\n      this.backgroundRect.setStrokeStyle(2, colors.border);\r\n    }\r\n    \r\n    if (this.chineseText) {\r\n      this.chineseText.setColor(colors.text);\r\n    }\r\n    \r\n    if (this.englishText) {\r\n      this.englishText.setColor(colors.text);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 獲取中文翻譯\r\n   */\r\n  getChineseTranslation(englishWord: string): string {\r\n    // 先檢查翻譯快取\r\n    if (this.translationCache.has(englishWord)) {\r\n      return this.translationCache.get(englishWord)!;\r\n    }\r\n\r\n    // 從詞彙快取獲取\r\n    const word = this.getWordFromCache(englishWord);\r\n    return word ? word.chinese : '';\r\n  }\r\n\r\n  /**\r\n   * 清理資源\r\n   */\r\n  destroy(): void {\r\n    if (this.promptContainer) {\r\n      this.promptContainer.destroy();\r\n      this.promptContainer = null;\r\n    }\r\n    \r\n    this.wordCache.clear();\r\n    this.translationCache.clear();\r\n    \r\n    console.log('🧹 BilingualManager 已銷毀');\r\n  }\r\n\r\n  /**\r\n   * 獲取當前狀態\r\n   */\r\n  getState(): BilingualPromptState {\r\n    return { ...this.state };\r\n  }\r\n\r\n  /**\r\n   * 獲取統計信息\r\n   */\r\n  getStatistics() {\r\n    return {\r\n      cacheSize: this.wordCache.size,\r\n      translationCacheSize: this.translationCache.size,\r\n      currentLevel: this.geptManager.getCurrentLevel(),\r\n      isVisible: this.state.isVisible,\r\n      displayMode: this.state.displayMode\r\n    };\r\n  }\r\n}\r\n","/**\r\n * ChineseUIManager - 中文 UI 管理系統\r\n * 負責遊戲中所有中文界面元素的管理和顯示\r\n * 基於 Task 1.5.1 需求分析設計\r\n */\r\n\r\nimport { GEPTManager, GEPTWord } from './GEPTManager';\r\nimport { BilingualManager, AccessibilitySettings } from './BilingualManager';\r\n\r\nexport interface ChineseUIElements {\r\n  scoreText: Phaser.GameObjects.Text | null;\r\n  livesText: Phaser.GameObjects.Text | null;\r\n  targetText: Phaser.GameObjects.Text | null;\r\n  statusText: Phaser.GameObjects.Text | null;\r\n  instructionText: Phaser.GameObjects.Text | null;\r\n}\r\n\r\nexport interface UITextConfig {\r\n  fontSize: number;\r\n  fontFamily: string;\r\n  color: string;\r\n  stroke: string;\r\n  strokeThickness: number;\r\n  shadow: {\r\n    offsetX: number;\r\n    offsetY: number;\r\n    color: string;\r\n    blur: number;\r\n    fill: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * 中文 UI 管理器\r\n */\r\nexport class ChineseUIManager {\r\n  private scene: Phaser.Scene;\r\n  private geptManager: GEPTManager;\r\n  private bilingualManager: BilingualManager;\r\n  \r\n  private uiElements: ChineseUIElements;\r\n  private textConfig: UITextConfig;\r\n  private accessibilitySettings: AccessibilitySettings;\r\n  \r\n  // UI 容器\r\n  private hudContainer: Phaser.GameObjects.Container | null = null;\r\n  private targetContainer: Phaser.GameObjects.Container | null = null;\r\n  \r\n  // 遊戲狀態\r\n  private currentScore: number = 0;\r\n  private currentLives: number = 100;\r\n  private currentTarget: GEPTWord | null = null;\r\n  private gameStatus: 'waiting' | 'playing' | 'paused' | 'ended' = 'waiting';\r\n\r\n  constructor(\r\n    scene: Phaser.Scene, \r\n    geptManager: GEPTManager, \r\n    bilingualManager: BilingualManager\r\n  ) {\r\n    this.scene = scene;\r\n    this.geptManager = geptManager;\r\n    this.bilingualManager = bilingualManager;\r\n    \r\n    this.uiElements = this.initializeUIElements();\r\n    this.textConfig = this.getDefaultTextConfig();\r\n    this.accessibilitySettings = this.getDefaultAccessibilitySettings();\r\n    \r\n    this.createChineseHUD();\r\n    console.log('🎨 ChineseUIManager 初始化完成');\r\n  }\r\n\r\n  /**\r\n   * 初始化 UI 元素\r\n   */\r\n  private initializeUIElements(): ChineseUIElements {\r\n    return {\r\n      scoreText: null,\r\n      livesText: null,\r\n      targetText: null,\r\n      statusText: null,\r\n      instructionText: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取默認文字配置\r\n   */\r\n  private getDefaultTextConfig(): UITextConfig {\r\n    return {\r\n      fontSize: 20,\r\n      fontFamily: 'Microsoft YaHei, SimHei, Arial, sans-serif',\r\n      color: '#FFFFFF',\r\n      stroke: '#000000',\r\n      strokeThickness: 2,\r\n      shadow: {\r\n        offsetX: 2,\r\n        offsetY: 2,\r\n        color: '#000000',\r\n        blur: 4,\r\n        fill: true\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取默認無障礙設置\r\n   */\r\n  private getDefaultAccessibilitySettings(): AccessibilitySettings {\r\n    return {\r\n      fontSize: 'medium',\r\n      contrast: 'normal',\r\n      enableVoice: false,\r\n      enableKeyboardNav: true,\r\n      screenReaderMode: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 創建中文 HUD - 極簡版本（只保留統一控制的元素）\r\n   */\r\n  private createChineseHUD(): void {\r\n    // 只創建目標詞彙容器（統一控制的元素）\r\n    this.createTargetDisplay();\r\n\r\n    console.log('🎨 極簡中文 HUD 創建完成（只保留統一控制元素）');\r\n  }\r\n\r\n  /**\r\n   * 創建目標詞彙顯示 - 極簡版本\r\n   */\r\n  private createTargetDisplay(): void {\r\n    const gameWidth = this.scene.scale.width;\r\n\r\n    // 創建目標容器 - 極簡版本\r\n    this.targetContainer = this.scene.add.container(gameWidth / 2, 120);\r\n    this.targetContainer.setDepth(998);\r\n\r\n    // 極簡目標詞彙文字 - 只有一個大字\r\n    this.uiElements.targetText = this.scene.add.text(0, 0, '等待設置...', {\r\n      fontSize: '48px', // 更大字體\r\n      fontFamily: this.textConfig.fontFamily,\r\n      color: '#FFFFFF',\r\n      align: 'center',\r\n      fontStyle: 'bold',\r\n      backgroundColor: '#FFD700', // 黃色背景\r\n      padding: { x: 20, y: 10 }\r\n    });\r\n    this.uiElements.targetText.setOrigin(0.5);\r\n    this.uiElements.targetText.setInteractive(); // 可點擊\r\n    this.targetContainer.add(this.uiElements.targetText);\r\n\r\n    // 添加點擊事件 - 發英文音\r\n    this.uiElements.targetText.on('pointerdown', () => {\r\n      if (this.currentTarget) {\r\n        this.speakEnglish(this.currentTarget.english);\r\n      }\r\n    });\r\n\r\n    console.log('🎯 極簡目標詞彙顯示創建完成');\r\n  }\r\n\r\n  // 移除操作說明文字（不是統一控制的元素）\r\n\r\n  /**\r\n   * 獲取文字樣式\r\n   */\r\n  private getTextStyle(): Phaser.Types.GameObjects.Text.TextStyle {\r\n    return {\r\n      fontSize: `${this.textConfig.fontSize}px`,\r\n      fontFamily: this.textConfig.fontFamily,\r\n      color: this.textConfig.color,\r\n      stroke: this.textConfig.stroke,\r\n      strokeThickness: this.textConfig.strokeThickness,\r\n      shadow: this.textConfig.shadow\r\n    };\r\n  }\r\n\r\n  // 移除分數和生命值顯示（不是統一控制的元素）\r\n  updateScore(score: number): void {\r\n    this.currentScore = score;\r\n    // 不再顯示分數UI\r\n  }\r\n\r\n  updateLives(lives: number): void {\r\n    this.currentLives = lives;\r\n    // 不再顯示生命值UI\r\n  }\r\n\r\n  /**\r\n   * 更新目標詞彙顯示 - 極簡版本\r\n   */\r\n  updateTargetWord(word: GEPTWord): void {\r\n    this.currentTarget = word;\r\n    if (this.uiElements.targetText) {\r\n      // 極簡版本：只顯示一個中文字\r\n      this.uiElements.targetText.setText(word.chinese);\r\n\r\n      // 自動發中文音\r\n      this.speakChinese(word.chinese);\r\n    }\r\n\r\n    // 同時更新雙語管理器\r\n    this.bilingualManager.updateTargetWord(word.english);\r\n\r\n    console.log(`🎯 極簡目標詞彙: ${word.chinese}`);\r\n  }\r\n\r\n  // 移除遊戲狀態顯示（不是統一控制的元素）\r\n  updateGameStatus(status: 'waiting' | 'playing' | 'paused' | 'ended'): void {\r\n    this.gameStatus = status;\r\n    // 不再顯示遊戲狀態UI\r\n  }\r\n\r\n  /**\r\n   * 顯示成功提示 - 極簡版本 + 英文發音\r\n   */\r\n  showSuccessMessage(word: GEPTWord, points: number): void {\r\n    const gameWidth = this.scene.scale.width;\r\n    const gameHeight = this.scene.scale.height;\r\n\r\n    // 創建成功提示 - 極簡版本\r\n    const successText = this.scene.add.text(\r\n      gameWidth / 2,\r\n      gameHeight / 2,\r\n      `正確！\\n${word.chinese}\\n+${points} 分`,\r\n      {\r\n        fontSize: '32px',\r\n        fontFamily: this.textConfig.fontFamily,\r\n        color: '#00FF00',\r\n        align: 'center',\r\n        fontStyle: 'bold',\r\n        stroke: '#000000',\r\n        strokeThickness: 3\r\n      }\r\n    );\r\n    successText.setOrigin(0.5);\r\n    successText.setDepth(1001);\r\n\r\n    // 碰撞成功時發英文音（學習獎勵）\r\n    this.speakEnglish(word.english);\r\n\r\n    // 動畫效果\r\n    this.scene.tweens.add({\r\n      targets: successText,\r\n      scaleX: 1.2,\r\n      scaleY: 1.2,\r\n      alpha: 0,\r\n      duration: 1500,\r\n      ease: 'Power2.easeOut',\r\n      onComplete: () => {\r\n        successText.destroy();\r\n      }\r\n    });\r\n\r\n    console.log(`✅ 成功提示: ${word.chinese} +${points}分 🔊${word.english}`);\r\n  }\r\n\r\n  /**\r\n   * 顯示錯誤提示\r\n   */\r\n  showErrorMessage(word: GEPTWord, penalty: number): void {\r\n    const gameWidth = this.scene.scale.width;\r\n    const gameHeight = this.scene.scale.height;\r\n\r\n    // 創建錯誤提示 - 用戶要求只顯示中文\r\n    const errorText = this.scene.add.text(\r\n      gameWidth / 2,\r\n      gameHeight / 2,\r\n      `錯誤！\\n${word.chinese}\\n-${penalty} 生命值`,\r\n      {\r\n        fontSize: '28px',\r\n        fontFamily: this.textConfig.fontFamily,\r\n        color: '#FF0000',\r\n        align: 'center',\r\n        fontStyle: 'bold',\r\n        stroke: '#000000',\r\n        strokeThickness: 3\r\n      }\r\n    );\r\n    errorText.setOrigin(0.5);\r\n    errorText.setDepth(1001);\r\n\r\n    // 動畫效果\r\n    this.scene.tweens.add({\r\n      targets: errorText,\r\n      scaleX: 0.8,\r\n      scaleY: 0.8,\r\n      alpha: 0,\r\n      duration: 1200,\r\n      ease: 'Power2.easeIn',\r\n      onComplete: () => {\r\n        errorText.destroy();\r\n      }\r\n    });\r\n\r\n    console.log(`❌ 顯示錯誤提示: ${word.chinese} -${penalty}生命值`);\r\n  }\r\n\r\n  /**\r\n   * 應用無障礙設置\r\n   */\r\n  applyAccessibilitySettings(settings: Partial<AccessibilitySettings>): void {\r\n    this.accessibilitySettings = { ...this.accessibilitySettings, ...settings };\r\n    \r\n    // 更新字體大小\r\n    this.updateAllFontSizes();\r\n    \r\n    // 更新對比度\r\n    this.updateAllContrast();\r\n    \r\n    console.log('♿ ChineseUIManager 應用無障礙設置:', this.accessibilitySettings);\r\n  }\r\n\r\n  /**\r\n   * 更新所有字體大小\r\n   */\r\n  private updateAllFontSizes(): void {\r\n    const sizeMap = {\r\n      'small': 16,\r\n      'medium': 20,\r\n      'large': 24,\r\n      'extra-large': 28\r\n    };\r\n    \r\n    const fontSize = sizeMap[this.accessibilitySettings.fontSize];\r\n    this.textConfig.fontSize = fontSize;\r\n    \r\n    // 更新所有文字元素\r\n    Object.values(this.uiElements).forEach(element => {\r\n      if (element && element.setFontSize) {\r\n        element.setFontSize(fontSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 更新所有對比度\r\n   */\r\n  private updateAllContrast(): void {\r\n    const contrastMap = {\r\n      'normal': { text: '#FFFFFF', stroke: '#000000' },\r\n      'high': { text: '#FFFF00', stroke: '#000000' },\r\n      'reverse': { text: '#000000', stroke: '#FFFFFF' }\r\n    };\r\n    \r\n    const colors = contrastMap[this.accessibilitySettings.contrast];\r\n    this.textConfig.color = colors.text;\r\n    this.textConfig.stroke = colors.stroke;\r\n    \r\n    // 更新所有文字元素\r\n    Object.values(this.uiElements).forEach(element => {\r\n      if (element && element.setColor) {\r\n        element.setColor(colors.text);\r\n        element.setStroke(colors.stroke, this.textConfig.strokeThickness);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 設置 UI 可見性\r\n   */\r\n  setVisible(visible: boolean): void {\r\n    if (this.hudContainer) {\r\n      this.hudContainer.setVisible(visible);\r\n    }\r\n    if (this.targetContainer) {\r\n      this.targetContainer.setVisible(visible);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發中文音\r\n   */\r\n  private speakChinese(text: string): void {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = 'zh-CN'; // 中文\r\n      utterance.rate = 0.8;\r\n      utterance.volume = 0.7;\r\n      speechSynthesis.speak(utterance);\r\n      console.log(`🔊 發中文音: ${text}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發英文音\r\n   */\r\n  private speakEnglish(text: string): void {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = 'en-US'; // 英文\r\n      utterance.rate = 0.8;\r\n      utterance.volume = 0.7;\r\n      speechSynthesis.speak(utterance);\r\n      console.log(`🔊 發英文音: ${text}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 獲取當前狀態\r\n   */\r\n  getState() {\r\n    return {\r\n      score: this.currentScore,\r\n      lives: this.currentLives,\r\n      target: this.currentTarget,\r\n      status: this.gameStatus,\r\n      accessibilitySettings: this.accessibilitySettings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 清理資源\r\n   */\r\n  destroy(): void {\r\n    if (this.hudContainer) {\r\n      this.hudContainer.destroy();\r\n      this.hudContainer = null;\r\n    }\r\n    \r\n    if (this.targetContainer) {\r\n      this.targetContainer.destroy();\r\n      this.targetContainer = null;\r\n    }\r\n    \r\n    // 清空 UI 元素引用\r\n    Object.keys(this.uiElements).forEach(key => {\r\n      this.uiElements[key as keyof ChineseUIElements] = null;\r\n    });\r\n    \r\n    console.log('🧹 ChineseUIManager 已銷毀');\r\n  }\r\n}\r\n","/**\r\n * 響應式管理器\r\n * 統一管理所有遊戲元素的自適應行為\r\n * 支援背景層、遊戲物件、UI 元素的縮放和重新定位\r\n */\r\n\r\nexport interface ResponsiveElement {\r\n  element: any;\r\n  type: 'background' | 'gameObject' | 'ui' | 'text';\r\n  originalX: number;\r\n  originalY: number;\r\n  originalScale: number;\r\n  originalSize?: { width: number; height: number };\r\n  anchor?: { x: number; y: number };\r\n  constraints?: {\r\n    minScale?: number;\r\n    maxScale?: number;\r\n    keepAspectRatio?: boolean;\r\n    fixedPosition?: boolean;\r\n  };\r\n}\r\n\r\nexport interface ViewportInfo {\r\n  width: number;\r\n  height: number;\r\n  scale: number;\r\n  isFullscreen: boolean;\r\n  deviceType: 'mobile' | 'tablet' | 'desktop';\r\n  orientation: 'portrait' | 'landscape';\r\n}\r\n\r\nexport interface ResponsiveConfig {\r\n  baseWidth: number;\r\n  baseHeight: number;\r\n  minScale: number;\r\n  maxScale: number;\r\n  aspectRatio: number;\r\n  enableSmoothing: boolean;\r\n  animationDuration: number;\r\n  throttleMs: number;\r\n}\r\n\r\n/**\r\n * 性能監控器\r\n */\r\nclass PerformanceMonitor {\r\n  private updateCount: number = 0;\r\n  private totalUpdateTime: number = 0;\r\n  private lastReportTime: number = Date.now();\r\n  private memoryUsage: number[] = [];\r\n\r\n  public recordUpdate(duration: number): void {\r\n    this.updateCount++;\r\n    this.totalUpdateTime += duration;\r\n\r\n    // 記錄記憶體使用情況\r\n    if ((performance as any).memory) {\r\n      const memory = (performance as any).memory;\r\n      this.memoryUsage.push(memory.usedJSHeapSize / 1024 / 1024); // MB\r\n\r\n      // 只保留最近 100 次記錄\r\n      if (this.memoryUsage.length > 100) {\r\n        this.memoryUsage.shift();\r\n      }\r\n    }\r\n\r\n    // 每 30 秒報告一次性能\r\n    const now = Date.now();\r\n    if (now - this.lastReportTime > 30000) {\r\n      this.reportPerformance();\r\n      this.lastReportTime = now;\r\n    }\r\n  }\r\n\r\n  private reportPerformance(): void {\r\n    if (this.updateCount === 0) return;\r\n\r\n    const avgUpdateTime = this.totalUpdateTime / this.updateCount;\r\n    const avgMemory = this.memoryUsage.length > 0 ?\r\n      this.memoryUsage.reduce((a, b) => a + b, 0) / this.memoryUsage.length : 0;\r\n\r\n    console.log('📊 響應式管理器性能報告:', {\r\n      更新次數: this.updateCount,\r\n      平均更新時間: `${avgUpdateTime.toFixed(2)}ms`,\r\n      平均記憶體使用: `${avgMemory.toFixed(1)}MB`,\r\n      記憶體趨勢: this.getMemoryTrend()\r\n    });\r\n\r\n    // 重置計數器\r\n    this.updateCount = 0;\r\n    this.totalUpdateTime = 0;\r\n  }\r\n\r\n  private getMemoryTrend(): string {\r\n    if (this.memoryUsage.length < 10) return '數據不足';\r\n\r\n    const recent = this.memoryUsage.slice(-10);\r\n    const older = this.memoryUsage.slice(-20, -10);\r\n\r\n    if (older.length === 0) return '穩定';\r\n\r\n    const recentAvg = recent.reduce((a, b) => a + b, 0) / recent.length;\r\n    const olderAvg = older.reduce((a, b) => a + b, 0) / older.length;\r\n\r\n    const diff = recentAvg - olderAvg;\r\n\r\n    if (diff > 5) return '上升 ⚠️';\r\n    if (diff < -5) return '下降 ✅';\r\n    return '穩定 ✅';\r\n  }\r\n\r\n  public getStats() {\r\n    return {\r\n      updateCount: this.updateCount,\r\n      avgUpdateTime: this.updateCount > 0 ? this.totalUpdateTime / this.updateCount : 0,\r\n      memoryUsage: this.memoryUsage.slice(-10) // 最近 10 次記錄\r\n    };\r\n  }\r\n}\r\n\r\nexport class ResponsiveManager {\r\n  private scene: Phaser.Scene;\r\n  private config: ResponsiveConfig;\r\n  private elements: Map<string, ResponsiveElement> = new Map();\r\n  private currentViewport: ViewportInfo;\r\n  private isAnimating: boolean = false;\r\n  \r\n  // 性能優化\r\n  private updateThrottleTimer: number | null = null;\r\n  private lastUpdateTime: number = 0;\r\n  private cleanupTimer: number | null = null;\r\n  private performanceMonitor: PerformanceMonitor;\r\n  \r\n  // 預設配置\r\n  private static readonly DEFAULT_CONFIG: ResponsiveConfig = {\r\n    baseWidth: 1274,\r\n    baseHeight: 739,\r\n    minScale: 0.3,\r\n    maxScale: 2.0,\r\n    aspectRatio: 1274 / 739,\r\n    enableSmoothing: true,\r\n    animationDuration: 300,\r\n    throttleMs: 100\r\n  };\r\n\r\n  constructor(scene: Phaser.Scene, config?: Partial<ResponsiveConfig>) {\r\n    try {\r\n      this.scene = scene;\r\n      this.config = { ...ResponsiveManager.DEFAULT_CONFIG, ...config };\r\n\r\n      // 初始化性能監控器\r\n      this.performanceMonitor = new PerformanceMonitor();\r\n\r\n      // 初始化視窗信息\r\n      this.currentViewport = this.calculateViewportInfo();\r\n\r\n      // 設置事件監聽\r\n      this.setupEventListeners();\r\n\r\n      // 啟動定期清理\r\n      this.startPeriodicCleanup();\r\n\r\n      console.log('🎯 響應式管理器初始化完成', {\r\n        baseSize: `${this.config.baseWidth}×${this.config.baseHeight}`,\r\n        currentViewport: this.currentViewport,\r\n        throttleMs: this.config.throttleMs\r\n      });\r\n    } catch (error) {\r\n      console.error('❌ 響應式管理器初始化失敗:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 註冊需要響應式管理的元素\r\n   */\r\n  public registerElement(\r\n    id: string,\r\n    element: any,\r\n    type: ResponsiveElement['type'],\r\n    options?: Partial<ResponsiveElement>\r\n  ): void {\r\n    try {\r\n      // 驗證輸入參數\r\n      if (!id || typeof id !== 'string') {\r\n        throw new Error('元素 ID 必須是非空字符串');\r\n      }\r\n\r\n      if (!element) {\r\n        throw new Error('元素不能為空');\r\n      }\r\n\r\n      if (!['background', 'gameObject', 'ui', 'text'].includes(type)) {\r\n        throw new Error(`不支援的元素類型: ${type}`);\r\n      }\r\n\r\n      // 檢查元素是否已經註冊\r\n      if (this.elements.has(id)) {\r\n        console.warn(`⚠️ 元素 ${id} 已存在，將被覆蓋`);\r\n      }\r\n\r\n      // 檢查元素是否有效\r\n      if (element.destroyed) {\r\n        throw new Error(`元素 ${id} 已被銷毀，無法註冊`);\r\n      }\r\n\r\n      const responsiveElement: ResponsiveElement = {\r\n        element,\r\n        type,\r\n        originalX: this.safeGetProperty(element, 'x', 0),\r\n        originalY: this.safeGetProperty(element, 'y', 0),\r\n        originalScale: this.safeGetProperty(element, 'scale',\r\n          this.safeGetProperty(element, 'scaleX', 1)),\r\n        originalSize: element.width && element.height ?\r\n          { width: element.width, height: element.height } : undefined,\r\n        anchor: { x: 0.5, y: 0.5 },\r\n        constraints: {\r\n          keepAspectRatio: true,\r\n          minScale: this.config.minScale,\r\n          maxScale: this.config.maxScale\r\n        },\r\n        ...options\r\n      };\r\n\r\n      this.elements.set(id, responsiveElement);\r\n      console.log(`📝 註冊響應式元素: ${id} (${type})`);\r\n\r\n    } catch (error) {\r\n      console.error(`❌ 註冊響應式元素失敗 (${id}):`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 安全獲取物件屬性\r\n   */\r\n  private safeGetProperty(obj: any, property: string, defaultValue: any): any {\r\n    try {\r\n      return obj && typeof obj[property] !== 'undefined' ? obj[property] : defaultValue;\r\n    } catch (error) {\r\n      console.warn(`⚠️ 無法獲取屬性 ${property}，使用預設值:`, defaultValue);\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除響應式元素\r\n   */\r\n  public unregisterElement(id: string): void {\r\n    if (this.elements.has(id)) {\r\n      this.elements.delete(id);\r\n      console.log(`🗑️ 移除響應式元素: ${id}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 計算當前視窗信息\r\n   */\r\n  private calculateViewportInfo(): ViewportInfo {\r\n    const gameSize = this.scene.scale.gameSize;\r\n    const displaySize = this.scene.scale.displaySize;\r\n    \r\n    const width = displaySize.width;\r\n    const height = displaySize.height;\r\n    const scale = Math.min(width / this.config.baseWidth, height / this.config.baseHeight);\r\n    \r\n    // 檢測全螢幕狀態\r\n    const isFullscreen = !!(\r\n      document.fullscreenElement ||\r\n      (document as any).webkitFullscreenElement ||\r\n      (document as any).mozFullScreenElement ||\r\n      (document as any).msFullscreenElement\r\n    );\r\n\r\n    // 檢測設備類型\r\n    let deviceType: ViewportInfo['deviceType'] = 'desktop';\r\n    if (width < 768) deviceType = 'mobile';\r\n    else if (width < 1024) deviceType = 'tablet';\r\n\r\n    // 檢測方向\r\n    const orientation: ViewportInfo['orientation'] = width > height ? 'landscape' : 'portrait';\r\n\r\n    return {\r\n      width,\r\n      height,\r\n      scale: Math.max(this.config.minScale, Math.min(this.config.maxScale, scale)),\r\n      isFullscreen,\r\n      deviceType,\r\n      orientation\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 更新所有響應式元素（帶性能優化）\r\n   */\r\n  public updateAllElements(animated: boolean = true): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      // 性能優化：防抖處理\r\n      const now = Date.now();\r\n      if (now - this.lastUpdateTime < this.config.throttleMs) {\r\n        if (this.updateThrottleTimer) {\r\n          clearTimeout(this.updateThrottleTimer);\r\n        }\r\n        \r\n        this.updateThrottleTimer = window.setTimeout(() => {\r\n          this.performUpdate(animated).then(resolve);\r\n        }, this.config.throttleMs);\r\n        return;\r\n      }\r\n      \r\n      this.lastUpdateTime = now;\r\n      this.performUpdate(animated).then(resolve);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 執行實際的更新操作\r\n   */\r\n  private performUpdate(animated: boolean): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const startTime = performance.now();\r\n\r\n      if (this.isAnimating && animated) {\r\n        console.log('⏳ 動畫進行中，跳過更新');\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // 更新視窗信息\r\n      const newViewport = this.calculateViewportInfo();\r\n      const viewportChanged = this.hasViewportChanged(newViewport);\r\n\r\n      if (!viewportChanged) {\r\n        console.log('📐 視窗未變化，跳過更新');\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      console.log('🔄 開始更新所有響應式元素', {\r\n        from: this.currentViewport,\r\n        to: newViewport\r\n      });\r\n\r\n      this.currentViewport = newViewport;\r\n\r\n      // 清理無效元素\r\n      this.cleanupInvalidElements();\r\n\r\n      const finishUpdate = () => {\r\n        const endTime = performance.now();\r\n        const duration = endTime - startTime;\r\n\r\n        // 記錄性能數據\r\n        this.performanceMonitor.recordUpdate(duration);\r\n\r\n        resolve();\r\n      };\r\n\r\n      if (animated && this.config.enableSmoothing) {\r\n        this.animateElements().then(finishUpdate);\r\n      } else {\r\n        this.updateElementsImmediate();\r\n        finishUpdate();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 檢查視窗是否發生變化\r\n   */\r\n  private hasViewportChanged(newViewport: ViewportInfo): boolean {\r\n    const threshold = 0.01; // 1% 的變化閾值\r\n    \r\n    return (\r\n      Math.abs(newViewport.width - this.currentViewport.width) > 10 ||\r\n      Math.abs(newViewport.height - this.currentViewport.height) > 10 ||\r\n      Math.abs(newViewport.scale - this.currentViewport.scale) > threshold ||\r\n      newViewport.isFullscreen !== this.currentViewport.isFullscreen ||\r\n      newViewport.deviceType !== this.currentViewport.deviceType ||\r\n      newViewport.orientation !== this.currentViewport.orientation\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 立即更新所有元素（無動畫）\r\n   */\r\n  private updateElementsImmediate(): void {\r\n    this.elements.forEach((element, id) => {\r\n      this.updateSingleElement(element, false);\r\n    });\r\n    \r\n    console.log(`✅ 立即更新完成 ${this.elements.size} 個元素`);\r\n  }\r\n\r\n  /**\r\n   * 動畫更新所有元素\r\n   */\r\n  private animateElements(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      this.isAnimating = true;\r\n      \r\n      const animations: Promise<void>[] = [];\r\n      \r\n      this.elements.forEach((element, id) => {\r\n        const animationPromise = this.animateSingleElement(element);\r\n        animations.push(animationPromise);\r\n      });\r\n\r\n      Promise.all(animations).then(() => {\r\n        this.isAnimating = false;\r\n        console.log(`✨ 動畫更新完成 ${this.elements.size} 個元素`);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 更新單個元素\r\n   */\r\n  private updateSingleElement(responsiveElement: ResponsiveElement, animated: boolean = false): void {\r\n    try {\r\n      const { element, type, originalX, originalY, originalScale, constraints } = responsiveElement;\r\n\r\n      // 安全檢查\r\n      if (!element) {\r\n        console.warn('⚠️ 元素為空，跳過更新');\r\n        return;\r\n      }\r\n\r\n      if (element.destroyed) {\r\n        console.warn('⚠️ 元素已銷毀，跳過更新');\r\n        return;\r\n      }\r\n\r\n      if (!element.active && element.hasOwnProperty('active')) {\r\n        console.warn('⚠️ 元素未激活，跳過更新');\r\n        return;\r\n      }\r\n\r\n      // 計算新的縮放比例\r\n      let newScale = this.currentViewport.scale * originalScale;\r\n\r\n      // 🔧 詳細的縮放計算調試\r\n      console.log('🔍 縮放計算詳情:', {\r\n        elementId: responsiveElement.id || 'unknown',\r\n        viewportScale: this.currentViewport.scale,\r\n        originalScale: originalScale,\r\n        calculatedScale: newScale,\r\n        constraints: constraints\r\n      });\r\n\r\n      // 應用約束\r\n      const beforeConstraints = newScale;\r\n      if (constraints?.minScale) newScale = Math.max(newScale, constraints.minScale);\r\n      if (constraints?.maxScale) newScale = Math.min(newScale, constraints.maxScale);\r\n\r\n      if (beforeConstraints !== newScale) {\r\n        console.log('⚙️ 約束已應用:', {\r\n          before: beforeConstraints,\r\n          after: newScale,\r\n          minScale: constraints?.minScale,\r\n          maxScale: constraints?.maxScale\r\n        });\r\n      }\r\n\r\n      // 驗證縮放值\r\n      if (!isFinite(newScale) || newScale <= 0) {\r\n        console.warn(`⚠️ 無效的縮放值: ${newScale}，使用預設值 1`);\r\n        newScale = 1;\r\n      }\r\n\r\n      // 計算新的位置\r\n      const newX = this.calculateNewPosition(originalX, 'x');\r\n      const newY = this.calculateNewPosition(originalY, 'y');\r\n\r\n      // 驗證位置值\r\n      if (!isFinite(newX) || !isFinite(newY)) {\r\n        console.warn(`⚠️ 無效的位置值: (${newX}, ${newY})，跳過更新`);\r\n        return;\r\n      }\r\n\r\n      // 根據元素類型應用不同的更新策略\r\n      switch (type) {\r\n        case 'background':\r\n          this.updateBackgroundElement(element, newX, newY, newScale);\r\n          break;\r\n        case 'gameObject':\r\n          this.updateGameObjectElement(element, newX, newY, newScale);\r\n          break;\r\n        case 'ui':\r\n          this.updateUIElement(element, newX, newY, newScale);\r\n          break;\r\n        case 'text':\r\n          this.updateTextElement(element, newX, newY, newScale);\r\n          break;\r\n        default:\r\n          console.warn(`⚠️ 未知的元素類型: ${type}`);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('❌ 更新單個元素時發生錯誤:', error);\r\n      // 不重新拋出錯誤，避免影響其他元素的更新\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 動畫更新單個元素\r\n   */\r\n  private animateSingleElement(responsiveElement: ResponsiveElement): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const { element } = responsiveElement;\r\n      \r\n      if (!element || !element.active) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // 計算目標值\r\n      const targetScale = this.currentViewport.scale * responsiveElement.originalScale;\r\n      const targetX = this.calculateNewPosition(responsiveElement.originalX, 'x');\r\n      const targetY = this.calculateNewPosition(responsiveElement.originalY, 'y');\r\n\r\n      // 創建動畫\r\n      this.scene.tweens.add({\r\n        targets: element,\r\n        x: targetX,\r\n        y: targetY,\r\n        scaleX: targetScale,\r\n        scaleY: targetScale,\r\n        duration: this.config.animationDuration,\r\n        ease: 'Power2',\r\n        onComplete: () => resolve()\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 計算新位置\r\n   */\r\n  private calculateNewPosition(originalPosition: number, axis: 'x' | 'y'): number {\r\n    const baseSize = axis === 'x' ? this.config.baseWidth : this.config.baseHeight;\r\n    const currentSize = axis === 'x' ? this.currentViewport.width : this.currentViewport.height;\r\n    \r\n    // 按比例縮放位置\r\n    return (originalPosition / baseSize) * currentSize;\r\n  }\r\n\r\n  /**\r\n   * 更新背景元素\r\n   */\r\n  private updateBackgroundElement(element: any, x: number, y: number, scale: number): void {\r\n    try {\r\n      if (element.setPosition && typeof element.setPosition === 'function') {\r\n        element.setPosition(x, y);\r\n      } else if (element.x !== undefined && element.y !== undefined) {\r\n        element.x = x;\r\n        element.y = y;\r\n      }\r\n\r\n      if (element.setScale && typeof element.setScale === 'function') {\r\n        element.setScale(scale);\r\n      } else if (element.scaleX !== undefined && element.scaleY !== undefined) {\r\n        element.scaleX = scale;\r\n        element.scaleY = scale;\r\n      }\r\n\r\n      // TileSprite 特殊處理\r\n      if (element.setSize && typeof element.setSize === 'function' && this.currentViewport.isFullscreen) {\r\n        element.setSize(this.currentViewport.width, this.currentViewport.height);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 更新背景元素時發生錯誤:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新遊戲物件元素\r\n   */\r\n  private updateGameObjectElement(element: any, x: number, y: number, scale: number): void {\r\n    // 🔧 添加詳細調試信息\r\n    console.log('🎯 更新遊戲物件:', {\r\n      elementType: element.constructor.name,\r\n      currentPosition: { x: element.x, y: element.y },\r\n      currentScale: { x: element.scaleX, y: element.scaleY },\r\n      newPosition: { x, y },\r\n      newScale: scale,\r\n      hasSetPosition: !!element.setPosition,\r\n      hasSetScale: !!element.setScale\r\n    });\r\n\r\n    if (element.setPosition) {\r\n      element.setPosition(x, y);\r\n      console.log('✅ 位置已更新:', { x: element.x, y: element.y });\r\n    }\r\n\r\n    if (element.setScale) {\r\n      // 🔧 確保等比例縮放，避免變形\r\n      element.setScale(scale, scale);\r\n      console.log('✅ 縮放已更新（等比例）:', { x: element.scaleX, y: element.scaleY });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新UI元素\r\n   */\r\n  private updateUIElement(element: any, x: number, y: number, scale: number): void {\r\n    if (element.setPosition) element.setPosition(x, y);\r\n    if (element.setScale) element.setScale(scale);\r\n  }\r\n\r\n  /**\r\n   * 更新文字元素\r\n   */\r\n  private updateTextElement(element: any, x: number, y: number, scale: number): void {\r\n    if (element.setPosition) element.setPosition(x, y);\r\n    if (element.setScale) element.setScale(scale);\r\n    \r\n    // 文字大小調整\r\n    if (element.setFontSize) {\r\n      const originalSize = parseInt(element.style.fontSize) || 16;\r\n      const newSize = Math.round(originalSize * scale);\r\n      element.setFontSize(`${newSize}px`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 設置事件監聽\r\n   */\r\n  private setupEventListeners(): void {\r\n    // 監聽 Phaser 的 resize 事件\r\n    this.scene.scale.on('resize', () => {\r\n      this.updateAllElements(true);\r\n    });\r\n\r\n    // 監聽全螢幕變化\r\n    const handleFullscreenChange = () => {\r\n      setTimeout(() => {\r\n        this.updateAllElements(true);\r\n      }, 100);\r\n    };\r\n\r\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\r\n\r\n    console.log('👂 響應式事件監聽器已設置');\r\n  }\r\n\r\n  /**\r\n   * 清理無效元素（性能優化）\r\n   */\r\n  private cleanupInvalidElements(): void {\r\n    const invalidElements: string[] = [];\r\n    \r\n    this.elements.forEach((element, id) => {\r\n      if (!element.element || !element.element.active || element.element.destroyed) {\r\n        invalidElements.push(id);\r\n      }\r\n    });\r\n    \r\n    invalidElements.forEach(id => {\r\n      this.elements.delete(id);\r\n      console.log(`🗑️ 清理無效響應式元素: ${id}`);\r\n    });\r\n    \r\n    if (invalidElements.length > 0) {\r\n      console.log(`🧹 清理了 ${invalidElements.length} 個無效元素`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 定期清理任務\r\n   */\r\n  private startPeriodicCleanup(): void {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n    }\r\n    \r\n    this.cleanupTimer = window.setInterval(() => {\r\n      this.cleanupInvalidElements();\r\n    }, 30000); // 每30秒清理一次\r\n  }\r\n\r\n  /**\r\n   * 獲取當前視窗信息\r\n   */\r\n  public getViewportInfo(): ViewportInfo {\r\n    return { ...this.currentViewport };\r\n  }\r\n\r\n  /**\r\n   * 強制更新（用於全螢幕按鈕觸發）\r\n   */\r\n  public forceUpdate(animated: boolean = true): Promise<void> {\r\n    console.log('🔄 強制更新所有響應式元素');\r\n\r\n    // 🔧 添加全螢幕專用調試信息\r\n    const currentViewport = this.calculateViewportInfo();\r\n    console.log('📐 當前視窗信息:', {\r\n      width: currentViewport.width,\r\n      height: currentViewport.height,\r\n      scale: currentViewport.scale,\r\n      isFullscreen: currentViewport.isFullscreen,\r\n      deviceType: currentViewport.deviceType,\r\n      orientation: currentViewport.orientation\r\n    });\r\n\r\n    console.log('🎯 註冊的元素數量:', this.elements.size);\r\n\r\n    return this.updateAllElements(animated);\r\n  }\r\n\r\n  /**\r\n   * 獲取性能統計\r\n   */\r\n  public getPerformanceStats() {\r\n    return {\r\n      ...this.performanceMonitor.getStats(),\r\n      elementsCount: this.elements.size,\r\n      currentViewport: this.currentViewport,\r\n      config: this.config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 優化建議檢查\r\n   */\r\n  public getOptimizationSuggestions(): string[] {\r\n    const suggestions: string[] = [];\r\n    const stats = this.performanceMonitor.getStats();\r\n\r\n    // 檢查元素數量\r\n    if (this.elements.size > 100) {\r\n      suggestions.push(`元素數量過多 (${this.elements.size})，考慮分組管理`);\r\n    }\r\n\r\n    // 檢查更新頻率\r\n    if (stats.avgUpdateTime > 50) {\r\n      suggestions.push(`平均更新時間過長 (${stats.avgUpdateTime.toFixed(2)}ms)，考慮增加防抖間隔`);\r\n    }\r\n\r\n    // 檢查記憶體使用\r\n    const memoryTrend = this.getMemoryTrend();\r\n    if (memoryTrend === '上升 ⚠️') {\r\n      suggestions.push('記憶體使用呈上升趨勢，檢查是否有記憶體洩漏');\r\n    }\r\n\r\n    // 檢查防抖設置\r\n    if (this.config.throttleMs < 50) {\r\n      suggestions.push('防抖間隔過短，可能影響性能');\r\n    }\r\n\r\n    return suggestions;\r\n  }\r\n\r\n  /**\r\n   * 獲取記憶體趨勢\r\n   */\r\n  private getMemoryTrend(): string {\r\n    const stats = this.performanceMonitor.getStats();\r\n    const memoryUsage = stats.memoryUsage;\r\n\r\n    if (memoryUsage.length < 5) return '數據不足';\r\n\r\n    const recent = memoryUsage.slice(-3);\r\n    const older = memoryUsage.slice(-6, -3);\r\n\r\n    if (older.length === 0) return '穩定';\r\n\r\n    const recentAvg = recent.reduce((a, b) => a + b, 0) / recent.length;\r\n    const olderAvg = older.reduce((a, b) => a + b, 0) / older.length;\r\n\r\n    const diff = recentAvg - olderAvg;\r\n\r\n    if (diff > 5) return '上升 ⚠️';\r\n    if (diff < -5) return '下降 ✅';\r\n    return '穩定 ✅';\r\n  }\r\n\r\n  /**\r\n   * 強制垃圾回收（如果支援）\r\n   */\r\n  public forceGarbageCollection(): void {\r\n    if ((window as any).gc) {\r\n      (window as any).gc();\r\n      console.log('🧹 強制垃圾回收已執行');\r\n    } else {\r\n      console.log('⚠️ 瀏覽器不支援強制垃圾回收');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 銷毀管理器\r\n   */\r\n  public destroy(): void {\r\n    // 清理定時器\r\n    if (this.updateThrottleTimer) {\r\n      clearTimeout(this.updateThrottleTimer);\r\n      this.updateThrottleTimer = null;\r\n    }\r\n    \r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n      this.cleanupTimer = null;\r\n    }\r\n    \r\n    // 清理所有元素\r\n    this.elements.clear();\r\n    \r\n    console.log('🧹 響應式管理器已銷毀（包含性能優化清理）');\r\n  }\r\n}\r\n\r\nexport default ResponsiveManager;\r\n","/**\r\n * 血條 UI 組件\r\n * 用於顯示玩家的生命值，替代原本的文字顯示\r\n */\r\nexport class HealthBar {\r\n  private scene: Phaser.Scene;\r\n  private container: Phaser.GameObjects.Container;\r\n  private background: Phaser.GameObjects.Graphics;\r\n  private healthBar: Phaser.GameObjects.Graphics;\r\n  private border: Phaser.GameObjects.Graphics;\r\n  private healthText: Phaser.GameObjects.Text;\r\n  private heartIcon: Phaser.GameObjects.Graphics;\r\n  \r\n  private maxHealth: number = 100;\r\n  private currentHealth: number = 100;\r\n  private barWidth: number = 200;\r\n  private barHeight: number = 20;\r\n  \r\n  // 血條顏色配置\r\n  private colors = {\r\n    background: 0x333333,\r\n    border: 0x000000,\r\n    healthy: 0x00ff00,    // 綠色 (80-100%)\r\n    warning: 0xffff00,    // 黃色 (40-79%)\r\n    danger: 0xff6600,     // 橙色 (20-39%)\r\n    critical: 0xff0000    // 紅色 (0-19%)\r\n  };\r\n  \r\n  constructor(scene: Phaser.Scene, x: number, y: number) {\r\n    this.scene = scene;\r\n    \r\n    // 創建容器\r\n    this.container = scene.add.container(x, y);\r\n    this.container.setDepth(100);\r\n    \r\n    this.createHealthBar();\r\n    this.createHeartIcon();\r\n    this.createHealthText();\r\n    \r\n    console.log('❤️ 血條組件已創建');\r\n  }\r\n  \r\n  /**\r\n   * 創建血條圖形\r\n   */\r\n  private createHealthBar(): void {\r\n    // 背景\r\n    this.background = this.scene.add.graphics();\r\n    this.background.fillStyle(this.colors.background);\r\n    this.background.fillRoundedRect(0, 0, this.barWidth, this.barHeight, 5);\r\n    \r\n    // 血條\r\n    this.healthBar = this.scene.add.graphics();\r\n    this.updateHealthBarColor();\r\n    this.healthBar.fillRoundedRect(2, 2, this.barWidth - 4, this.barHeight - 4, 3);\r\n    \r\n    // 邊框\r\n    this.border = this.scene.add.graphics();\r\n    this.border.lineStyle(2, this.colors.border);\r\n    this.border.strokeRoundedRect(0, 0, this.barWidth, this.barHeight, 5);\r\n    \r\n    // 添加到容器\r\n    this.container.add([this.background, this.healthBar, this.border]);\r\n  }\r\n  \r\n  /**\r\n   * 創建愛心圖標\r\n   */\r\n  private createHeartIcon(): void {\r\n    this.heartIcon = this.scene.add.graphics();\r\n    \r\n    // 繪製愛心形狀\r\n    this.heartIcon.fillStyle(0xff0000);\r\n    this.heartIcon.beginPath();\r\n    \r\n    // 愛心的數學路徑\r\n    const heartSize = 8;\r\n    const heartX = -25;\r\n    const heartY = this.barHeight / 2;\r\n    \r\n    // 左半圓\r\n    this.heartIcon.arc(heartX - heartSize/4, heartY - heartSize/4, heartSize/2, 0, Math.PI, true);\r\n    // 右半圓\r\n    this.heartIcon.arc(heartX + heartSize/4, heartY - heartSize/4, heartSize/2, 0, Math.PI, true);\r\n    // 底部三角形\r\n    this.heartIcon.lineTo(heartX, heartY + heartSize/2);\r\n    this.heartIcon.closePath();\r\n    this.heartIcon.fillPath();\r\n    \r\n    this.container.add(this.heartIcon);\r\n  }\r\n  \r\n  /**\r\n   * 創建血量文字\r\n   */\r\n  private createHealthText(): void {\r\n    this.healthText = this.scene.add.text(\r\n      this.barWidth + 10, \r\n      this.barHeight / 2, \r\n      `${this.currentHealth}/${this.maxHealth}`, \r\n      {\r\n        fontSize: '16px',\r\n        color: '#ffffff',\r\n        fontStyle: 'bold'\r\n      }\r\n    );\r\n    this.healthText.setOrigin(0, 0.5);\r\n    \r\n    this.container.add(this.healthText);\r\n  }\r\n  \r\n  /**\r\n   * 更新血條顏色\r\n   */\r\n  private updateHealthBarColor(): void {\r\n    const healthPercentage = (this.currentHealth / this.maxHealth) * 100;\r\n    let color: number;\r\n    \r\n    if (healthPercentage >= 80) {\r\n      color = this.colors.healthy;\r\n    } else if (healthPercentage >= 40) {\r\n      color = this.colors.warning;\r\n    } else if (healthPercentage >= 20) {\r\n      color = this.colors.danger;\r\n    } else {\r\n      color = this.colors.critical;\r\n    }\r\n    \r\n    this.healthBar.clear();\r\n    this.healthBar.fillStyle(color);\r\n    \r\n    // 計算血條寬度\r\n    const healthWidth = ((this.barWidth - 4) * this.currentHealth) / this.maxHealth;\r\n    this.healthBar.fillRoundedRect(2, 2, healthWidth, this.barHeight - 4, 3);\r\n  }\r\n  \r\n  /**\r\n   * 更新生命值\r\n   * @param health 當前生命值\r\n   * @param animated 是否使用動畫效果\r\n   */\r\n  public updateHealth(health: number, animated: boolean = true): void {\r\n    const oldHealth = this.currentHealth;\r\n    this.currentHealth = Math.max(0, Math.min(health, this.maxHealth));\r\n    \r\n    console.log(`❤️ 血條更新: ${oldHealth} → ${this.currentHealth}`);\r\n    \r\n    if (animated && oldHealth !== this.currentHealth) {\r\n      this.animateHealthChange(oldHealth, this.currentHealth);\r\n    } else {\r\n      this.updateHealthBarColor();\r\n      this.updateHealthText();\r\n    }\r\n    \r\n    // 生命值過低時的警告效果\r\n    if (this.currentHealth <= 20 && this.currentHealth > 0) {\r\n      this.startCriticalHealthEffect();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 動畫效果更新血條\r\n   */\r\n  private animateHealthChange(fromHealth: number, toHealth: number): void {\r\n    const duration = 500; // 動畫持續時間\r\n    \r\n    this.scene.tweens.add({\r\n      targets: { health: fromHealth },\r\n      health: toHealth,\r\n      duration: duration,\r\n      ease: 'Power2',\r\n      onUpdate: (tween) => {\r\n        const currentValue = Math.round(tween.targets[0].health);\r\n        this.currentHealth = currentValue;\r\n        this.updateHealthBarColor();\r\n        this.updateHealthText();\r\n      },\r\n      onComplete: () => {\r\n        console.log('❤️ 血條動畫完成');\r\n      }\r\n    });\r\n    \r\n    // 受傷時的震動效果\r\n    if (toHealth < fromHealth) {\r\n      this.scene.tweens.add({\r\n        targets: this.container,\r\n        x: this.container.x + 5,\r\n        duration: 50,\r\n        yoyo: true,\r\n        repeat: 3,\r\n        ease: 'Power2'\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 更新血量文字\r\n   */\r\n  private updateHealthText(): void {\r\n    this.healthText.setText(`${this.currentHealth}/${this.maxHealth}`);\r\n    \r\n    // 根據血量調整文字顏色\r\n    const healthPercentage = (this.currentHealth / this.maxHealth) * 100;\r\n    if (healthPercentage <= 20) {\r\n      this.healthText.setColor('#ff0000'); // 紅色\r\n    } else if (healthPercentage <= 40) {\r\n      this.healthText.setColor('#ff6600'); // 橙色\r\n    } else {\r\n      this.healthText.setColor('#ffffff'); // 白色\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 危險血量閃爍效果\r\n   */\r\n  private startCriticalHealthEffect(): void {\r\n    // 停止之前的閃爍效果\r\n    this.scene.tweens.killTweensOf(this.healthBar);\r\n    \r\n    // 開始閃爍\r\n    this.scene.tweens.add({\r\n      targets: this.healthBar,\r\n      alpha: 0.3,\r\n      duration: 300,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: 'Power2'\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 停止危險血量效果\r\n   */\r\n  private stopCriticalHealthEffect(): void {\r\n    this.scene.tweens.killTweensOf(this.healthBar);\r\n    this.healthBar.setAlpha(1);\r\n  }\r\n  \r\n  /**\r\n   * 設置血條位置\r\n   */\r\n  public setPosition(x: number, y: number): void {\r\n    this.container.setPosition(x, y);\r\n  }\r\n  \r\n  /**\r\n   * 設置血條可見性\r\n   */\r\n  public setVisible(visible: boolean): void {\r\n    this.container.setVisible(visible);\r\n  }\r\n  \r\n  /**\r\n   * 銷毀血條\r\n   */\r\n  public destroy(): void {\r\n    this.scene.tweens.killTweensOf(this.container);\r\n    this.scene.tweens.killTweensOf(this.healthBar);\r\n    this.container.destroy();\r\n    console.log('❤️ 血條組件已銷毀');\r\n  }\r\n  \r\n  /**\r\n   * 獲取當前生命值\r\n   */\r\n  public getCurrentHealth(): number {\r\n    return this.currentHealth;\r\n  }\r\n  \r\n  /**\r\n   * 獲取最大生命值\r\n   */\r\n  public getMaxHealth(): number {\r\n    return this.maxHealth;\r\n  }\r\n\r\n  /**\r\n   * 獲取容器（用於響應式管理器）\r\n   */\r\n  public getContainer(): Phaser.GameObjects.Container {\r\n    return this.container;\r\n  }\r\n  \r\n  /**\r\n   * 設置最大生命值\r\n   */\r\n  public setMaxHealth(maxHealth: number): void {\r\n    this.maxHealth = maxHealth;\r\n    this.updateHealthBarColor();\r\n    this.updateHealthText();\r\n  }\r\n}\r\n","/**\r\n * 全螢幕按鈕 UI 組件\r\n * 位於右下角，支援全螢幕切換功能，自適應所有螢幕尺寸\r\n * 具備專業的視覺效果和用戶體驗\r\n */\r\n\r\nexport interface FullscreenButtonConfig {\r\n  size: number;\r\n  cornerRadius: number;\r\n  colors: {\r\n    background: number;\r\n    backgroundHover: number;\r\n    backgroundActive: number;\r\n    icon: number;\r\n    iconHover: number;\r\n    border: number;\r\n    borderHover: number;\r\n  };\r\n  animations: {\r\n    hoverScale: number;\r\n    clickScale: number;\r\n    duration: number;\r\n  };\r\n}\r\n\r\nexport class FullscreenButton {\r\n  private scene: Phaser.Scene;\r\n  private container!: Phaser.GameObjects.Container;\r\n  private background!: Phaser.GameObjects.Graphics;\r\n  private icon!: Phaser.GameObjects.Graphics;\r\n  private tooltip?: Phaser.GameObjects.Container;\r\n\r\n  private isFullscreen: boolean = false;\r\n  private isHovered: boolean = false;\r\n  private isPressed: boolean = false;\r\n\r\n  // 配置\r\n  private config: FullscreenButtonConfig;\r\n\r\n  // 錯誤處理\r\n  private errorStats: Map<string, number> = new Map();\r\n  private lastErrorTime: number = 0;\r\n  private retryCount: number = 0;\r\n  private maxRetries: number = 3;\r\n  \r\n  // 預設配置\r\n  private static readonly DEFAULT_CONFIG: FullscreenButtonConfig = {\r\n    size: 48,\r\n    cornerRadius: 8,\r\n    colors: {\r\n      background: 0x000000,\r\n      backgroundHover: 0x333333,\r\n      backgroundActive: 0x555555,\r\n      icon: 0xffffff,\r\n      iconHover: 0x00ff88,\r\n      border: 0x666666,\r\n      borderHover: 0x00ff88\r\n    },\r\n    animations: {\r\n      hoverScale: 1.1,\r\n      clickScale: 0.95,\r\n      duration: 150\r\n    }\r\n  };\r\n\r\n  constructor(scene: Phaser.Scene, config?: Partial<FullscreenButtonConfig>) {\r\n    try {\r\n      this.scene = scene;\r\n      this.config = { ...FullscreenButton.DEFAULT_CONFIG, ...config };\r\n\r\n      this.createButton();\r\n      this.setupEvents();\r\n      this.updatePosition();\r\n      this.checkFullscreenStatus();\r\n\r\n      // 延遲顯示功能介紹\r\n      this.scene.time.delayedCall(3000, () => {\r\n        this.showFeatureIntro();\r\n      });\r\n\r\n      console.log('🖥️ 專業全螢幕按鈕已創建（整合響應式管理器 + UX優化）');\r\n    } catch (error) {\r\n      console.error('❌ 全螢幕按鈕創建失敗:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 創建按鈕圖形\r\n   */\r\n  private createButton(): void {\r\n    // 創建容器\r\n    this.container = this.scene.add.container(0, 0);\r\n    this.container.setDepth(1000); // 確保在最上層\r\n\r\n    // 創建背景\r\n    this.background = this.scene.add.graphics();\r\n    this.drawBackground();\r\n\r\n    // 創建圖標\r\n    this.icon = this.scene.add.graphics();\r\n    this.drawIcon();\r\n\r\n    // 添加到容器\r\n    this.container.add([this.background, this.icon]);\r\n\r\n    // 設置互動區域\r\n    this.container.setSize(this.config.size, this.config.size);\r\n    this.container.setInteractive({\r\n      useHandCursor: true,\r\n      hitArea: new Phaser.Geom.Rectangle(\r\n        -this.config.size / 2,\r\n        -this.config.size / 2,\r\n        this.config.size,\r\n        this.config.size\r\n      ),\r\n      hitAreaCallback: Phaser.Geom.Rectangle.Contains\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 繪製背景\r\n   */\r\n  private drawBackground(): void {\r\n    this.background.clear();\r\n\r\n    const { size, cornerRadius } = this.config;\r\n    const colors = this.config.colors;\r\n\r\n    // 選擇背景顏色\r\n    let bgColor = colors.background;\r\n    let borderColor = colors.border;\r\n    let alpha = 0.8;\r\n\r\n    if (this.isPressed) {\r\n      bgColor = colors.backgroundActive;\r\n      borderColor = colors.borderHover;\r\n      alpha = 0.95;\r\n    } else if (this.isHovered) {\r\n      bgColor = colors.backgroundHover;\r\n      borderColor = colors.borderHover;\r\n      alpha = 0.9;\r\n    }\r\n\r\n    // 繪製背景\r\n    this.background.fillStyle(bgColor, alpha);\r\n    this.background.fillRoundedRect(\r\n      -size / 2,\r\n      -size / 2,\r\n      size,\r\n      size,\r\n      cornerRadius\r\n    );\r\n\r\n    // 繪製邊框\r\n    this.background.lineStyle(2, borderColor, 0.6);\r\n    this.background.strokeRoundedRect(\r\n      -size / 2,\r\n      -size / 2,\r\n      size,\r\n      size,\r\n      cornerRadius\r\n    );\r\n\r\n    // 添加內陰影效果\r\n    if (this.isPressed) {\r\n      this.background.lineStyle(1, 0x000000, 0.3);\r\n      this.background.strokeRoundedRect(\r\n        -size / 2 + 1,\r\n        -size / 2 + 1,\r\n        size - 2,\r\n        size - 2,\r\n        cornerRadius - 1\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 繪製全螢幕圖標\r\n   */\r\n  private drawIcon(): void {\r\n    this.icon.clear();\r\n    this.icon.lineStyle(2, this.config.colors.icon, 1);\r\n\r\n    if (!this.isFullscreen) {\r\n      // 進入全螢幕圖標 - 四個角的擴展箭頭\r\n      const size = (this.config.size * 0.6) / 2;\r\n      \r\n      // 左上角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(-size, -size + 6);\r\n      this.icon.lineTo(-size, -size);\r\n      this.icon.lineTo(-size + 6, -size);\r\n      this.icon.strokePath();\r\n      \r\n      // 右上角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(size - 6, -size);\r\n      this.icon.lineTo(size, -size);\r\n      this.icon.lineTo(size, -size + 6);\r\n      this.icon.strokePath();\r\n      \r\n      // 左下角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(-size, size - 6);\r\n      this.icon.lineTo(-size, size);\r\n      this.icon.lineTo(-size + 6, size);\r\n      this.icon.strokePath();\r\n      \r\n      // 右下角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(size - 6, size);\r\n      this.icon.lineTo(size, size);\r\n      this.icon.lineTo(size, size - 6);\r\n      this.icon.strokePath();\r\n    } else {\r\n      // 退出全螢幕圖標 - 四個角的收縮箭頭\r\n      const size = (this.config.size * 0.6) / 2;\r\n      \r\n      // 左上角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(-size + 6, -size);\r\n      this.icon.lineTo(-size + 6, -size + 6);\r\n      this.icon.lineTo(-size, -size + 6);\r\n      this.icon.strokePath();\r\n      \r\n      // 右上角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(size, -size + 6);\r\n      this.icon.lineTo(size - 6, -size + 6);\r\n      this.icon.lineTo(size - 6, -size);\r\n      this.icon.strokePath();\r\n      \r\n      // 左下角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(-size, size - 6);\r\n      this.icon.lineTo(-size + 6, size - 6);\r\n      this.icon.lineTo(-size + 6, size);\r\n      this.icon.strokePath();\r\n      \r\n      // 右下角\r\n      this.icon.beginPath();\r\n      this.icon.moveTo(size - 6, size);\r\n      this.icon.lineTo(size - 6, size - 6);\r\n      this.icon.lineTo(size, size - 6);\r\n      this.icon.strokePath();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 設置事件監聽\r\n   */\r\n  private setupEvents(): void {\r\n    // 滑鼠事件\r\n    this.container.on('pointerover', this.onPointerOver, this);\r\n    this.container.on('pointerout', this.onPointerOut, this);\r\n    this.container.on('pointerdown', this.onPointerDown, this);\r\n    this.container.on('pointerup', this.onPointerUp, this);\r\n\r\n    // 全螢幕狀態變化監聽\r\n    document.addEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.addEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.addEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.addEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\r\n\r\n    // 鍵盤快捷鍵 (F11)\r\n    this.scene.input.keyboard?.on('keydown-F11', (event: KeyboardEvent) => {\r\n      event.preventDefault();\r\n      this.toggleFullscreen();\r\n      this.showKeyboardHint('F11 快捷鍵已觸發');\r\n    });\r\n\r\n    // ESC 鍵退出全螢幕\r\n    this.scene.input.keyboard?.on('keydown-ESC', () => {\r\n      if (this.isFullscreen) {\r\n        this.exitFullscreen();\r\n        this.showKeyboardHint('ESC 快捷鍵已觸發');\r\n      }\r\n    });\r\n\r\n    // 添加鍵盤快捷鍵提示\r\n    this.showInitialHint();\r\n  }\r\n\r\n  /**\r\n   * 滑鼠懸停進入\r\n   */\r\n  private onPointerOver(): void {\r\n    if (this.isHovered) return;\r\n\r\n    this.isHovered = true;\r\n    this.updateVisuals();\r\n    this.playHoverAnimation();\r\n    this.showTooltip();\r\n  }\r\n\r\n  /**\r\n   * 滑鼠懸停離開\r\n   */\r\n  private onPointerOut(): void {\r\n    if (!this.isHovered) return;\r\n\r\n    this.isHovered = false;\r\n    this.isPressed = false;\r\n    this.updateVisuals();\r\n    this.playNormalAnimation();\r\n    this.hideTooltip();\r\n  }\r\n\r\n  /**\r\n   * 滑鼠按下\r\n   */\r\n  private onPointerDown(): void {\r\n    this.isPressed = true;\r\n    this.updateVisuals();\r\n    this.playClickAnimation();\r\n  }\r\n\r\n  /**\r\n   * 滑鼠釋放\r\n   */\r\n  private onPointerUp(): void {\r\n    if (this.isPressed) {\r\n      this.isPressed = false;\r\n      this.updateVisuals();\r\n      this.toggleFullscreen();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新視覺效果\r\n   */\r\n  private updateVisuals(): void {\r\n    this.drawBackground();\r\n    this.drawIcon();\r\n  }\r\n\r\n  /**\r\n   * 播放懸停動畫\r\n   */\r\n  private playHoverAnimation(): void {\r\n    this.scene.tweens.add({\r\n      targets: this.container,\r\n      scaleX: this.config.animations.hoverScale,\r\n      scaleY: this.config.animations.hoverScale,\r\n      duration: this.config.animations.duration,\r\n      ease: 'Power2'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 播放正常動畫\r\n   */\r\n  private playNormalAnimation(): void {\r\n    this.scene.tweens.add({\r\n      targets: this.container,\r\n      scaleX: 1,\r\n      scaleY: 1,\r\n      duration: this.config.animations.duration,\r\n      ease: 'Power2'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 播放點擊動畫\r\n   */\r\n  private playClickAnimation(): void {\r\n    this.scene.tweens.add({\r\n      targets: this.container,\r\n      scaleX: this.config.animations.clickScale,\r\n      scaleY: this.config.animations.clickScale,\r\n      duration: this.config.animations.duration / 2,\r\n      ease: 'Power2',\r\n      yoyo: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 顯示工具提示\r\n   */\r\n  private showTooltip(): void {\r\n    if (this.tooltip) return;\r\n\r\n    const tooltipText = this.isFullscreen ? '退出全螢幕 (F11)' : '進入全螢幕 (F11)';\r\n\r\n    // 創建工具提示背景\r\n    const tooltipBg = this.scene.add.graphics();\r\n    tooltipBg.fillStyle(0x000000, 0.8);\r\n    tooltipBg.fillRoundedRect(-50, -15, 100, 30, 4);\r\n\r\n    // 創建工具提示文字\r\n    const tooltipTextObj = this.scene.add.text(0, 0, tooltipText, {\r\n      fontSize: '12px',\r\n      color: '#ffffff',\r\n      align: 'center'\r\n    }).setOrigin(0.5);\r\n\r\n    // 創建工具提示容器\r\n    this.tooltip = this.scene.add.container(\r\n      this.container.x - 60,\r\n      this.container.y - 40\r\n    );\r\n    this.tooltip.add([tooltipBg, tooltipTextObj]);\r\n    this.tooltip.setDepth(1001);\r\n    this.tooltip.setAlpha(0);\r\n\r\n    // 淡入動畫\r\n    this.scene.tweens.add({\r\n      targets: this.tooltip,\r\n      alpha: 1,\r\n      duration: 200,\r\n      ease: 'Power2'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 隱藏工具提示\r\n   */\r\n  private hideTooltip(): void {\r\n    if (!this.tooltip) return;\r\n\r\n    this.scene.tweens.add({\r\n      targets: this.tooltip,\r\n      alpha: 0,\r\n      duration: 200,\r\n      ease: 'Power2',\r\n      onComplete: () => {\r\n        this.tooltip?.destroy();\r\n        this.tooltip = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 懸停進入效果（舊方法，保持兼容性）\r\n   */\r\n  private onHover(): void {\r\n    this.background.clear();\r\n    this.background.fillStyle(this.config.colors.backgroundHover, 0.9);\r\n    this.background.fillRoundedRect(\r\n      -this.config.size / 2,\r\n      -this.config.size / 2,\r\n      this.config.size,\r\n      this.config.size,\r\n      this.config.cornerRadius\r\n    );\r\n    this.background.lineStyle(2, this.config.colors.iconHover, 0.8);\r\n    this.background.strokeRoundedRect(\r\n      -this.config.size / 2,\r\n      -this.config.size / 2,\r\n      this.config.size,\r\n      this.config.size,\r\n      this.config.cornerRadius\r\n    );\r\n\r\n    // 更新圖標顏色\r\n    this.icon.clear();\r\n    this.icon.lineStyle(2, this.config.colors.iconHover, 1);\r\n    this.drawIcon();\r\n    \r\n    // 縮放效果\r\n    this.container.setScale(1.1);\r\n  }\r\n  \r\n  /**\r\n   * 懸停離開效果\r\n   */\r\n  private onOut(): void {\r\n    this.background.clear();\r\n    this.background.fillStyle(this.config.colors.background, 0.7);\r\n    this.background.fillRoundedRect(\r\n      -this.config.size / 2,\r\n      -this.config.size / 2,\r\n      this.config.size,\r\n      this.config.size,\r\n      this.config.cornerRadius\r\n    );\r\n    this.background.lineStyle(2, 0xffffff, 0.3);\r\n    this.background.strokeRoundedRect(\r\n      -this.config.size / 2,\r\n      -this.config.size / 2,\r\n      this.config.size,\r\n      this.config.size,\r\n      this.config.cornerRadius\r\n    );\r\n\r\n    // 恢復圖標顏色\r\n    this.icon.clear();\r\n    this.icon.lineStyle(2, this.config.colors.icon, 1);\r\n    this.drawIcon();\r\n    \r\n    // 恢復縮放\r\n    this.container.setScale(1.0);\r\n  }\r\n  \r\n  /**\r\n   * 切換全螢幕模式（跨瀏覽器支援）\r\n   */\r\n  private async toggleFullscreen(): Promise<void> {\r\n    try {\r\n      if (!this.isFullscreen) {\r\n        await this.enterFullscreen();\r\n      } else {\r\n        await this.exitFullscreen();\r\n      }\r\n    } catch (error) {\r\n      this.handleFullscreenError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 進入全螢幕模式\r\n   */\r\n  private async enterFullscreen(): Promise<void> {\r\n    const element = document.documentElement;\r\n\r\n    // 檢查瀏覽器支援\r\n    if (!this.isFullscreenSupported()) {\r\n      throw new Error('瀏覽器不支援全螢幕 API');\r\n    }\r\n\r\n    // 嘗試不同的 API\r\n    if (element.requestFullscreen) {\r\n      await element.requestFullscreen();\r\n    } else if ((element as any).webkitRequestFullscreen) {\r\n      await (element as any).webkitRequestFullscreen();\r\n    } else if ((element as any).mozRequestFullScreen) {\r\n      await (element as any).mozRequestFullScreen();\r\n    } else if ((element as any).msRequestFullscreen) {\r\n      await (element as any).msRequestFullscreen();\r\n    }\r\n\r\n    console.log('🖥️ 成功進入全螢幕模式');\r\n    this.onFullscreenEnter();\r\n  }\r\n\r\n  /**\r\n   * 退出全螢幕模式\r\n   */\r\n  private async exitFullscreen(): Promise<void> {\r\n    // 嘗試不同的 API\r\n    if (document.exitFullscreen) {\r\n      await document.exitFullscreen();\r\n    } else if ((document as any).webkitExitFullscreen) {\r\n      await (document as any).webkitExitFullscreen();\r\n    } else if ((document as any).mozCancelFullScreen) {\r\n      await (document as any).mozCancelFullScreen();\r\n    } else if ((document as any).msExitFullscreen) {\r\n      await (document as any).msExitFullscreen();\r\n    }\r\n\r\n    console.log('🖥️ 成功退出全螢幕模式');\r\n    this.onFullscreenExit();\r\n  }\r\n\r\n  /**\r\n   * 檢查全螢幕 API 支援\r\n   */\r\n  private isFullscreenSupported(): boolean {\r\n    const element = document.documentElement;\r\n    return !!(\r\n      element.requestFullscreen ||\r\n      (element as any).webkitRequestFullscreen ||\r\n      (element as any).mozRequestFullScreen ||\r\n      (element as any).msRequestFullscreen\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 處理全螢幕錯誤\r\n   */\r\n  private handleFullscreenError(error: any): void {\r\n    console.error('❌ 全螢幕操作失敗:', error);\r\n\r\n    let errorMessage = '全螢幕操作失敗';\r\n    let errorType = 'unknown';\r\n\r\n    // 根據錯誤類型提供不同的處理\r\n    if (error.name === 'NotAllowedError') {\r\n      console.warn('⚠️ 全螢幕被用戶或瀏覽器政策阻止');\r\n      errorMessage = '全螢幕功能被阻止，請檢查瀏覽器設定或嘗試用戶手動觸發';\r\n      errorType = 'permission';\r\n    } else if (error.name === 'TypeError') {\r\n      console.warn('⚠️ 瀏覽器不支援全螢幕 API');\r\n      errorMessage = '您的瀏覽器不支援全螢幕功能，請嘗試更新瀏覽器';\r\n      errorType = 'unsupported';\r\n    } else if (error.name === 'InvalidStateError') {\r\n      console.warn('⚠️ 全螢幕狀態無效');\r\n      errorMessage = '全螢幕狀態異常，請重新整理頁面';\r\n      errorType = 'state';\r\n    } else if (error.name === 'SecurityError') {\r\n      console.warn('⚠️ 全螢幕安全限制');\r\n      errorMessage = '安全限制阻止全螢幕，請確保在安全環境下操作';\r\n      errorType = 'security';\r\n    } else {\r\n      console.warn('⚠️ 全螢幕操作遇到未知錯誤');\r\n      errorMessage = '全螢幕操作失敗，請稍後再試或重新整理頁面';\r\n      errorType = 'unknown';\r\n    }\r\n\r\n    // 顯示錯誤訊息\r\n    this.showErrorMessage(errorMessage, errorType);\r\n\r\n    // 記錄錯誤統計\r\n    this.recordError(errorType, error.message);\r\n  }\r\n\r\n  /**\r\n   * 記錄錯誤統計\r\n   */\r\n  private recordError(errorType: string, errorMessage: string): void {\r\n    const count = this.errorStats.get(errorType) || 0;\r\n    this.errorStats.set(errorType, count + 1);\r\n    this.lastErrorTime = Date.now();\r\n\r\n    console.log(`📊 錯誤統計 - ${errorType}: ${count + 1} 次`);\r\n\r\n    // 如果錯誤頻繁，提供額外建議\r\n    if (count >= 2) {\r\n      this.showFrequentErrorAdvice(errorType);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示頻繁錯誤建議\r\n   */\r\n  private showFrequentErrorAdvice(errorType: string): void {\r\n    let advice = '';\r\n\r\n    switch (errorType) {\r\n      case 'permission':\r\n        advice = '建議：在用戶手勢後再嘗試全螢幕，或檢查瀏覽器權限設定';\r\n        break;\r\n      case 'unsupported':\r\n        advice = '建議：使用支援全螢幕 API 的現代瀏覽器';\r\n        break;\r\n      case 'state':\r\n        advice = '建議：重新整理頁面或等待一段時間後再試';\r\n        break;\r\n      case 'security':\r\n        advice = '建議：確保在 HTTPS 環境下使用，或檢查瀏覽器安全設定';\r\n        break;\r\n      default:\r\n        advice = '建議：重新整理頁面或聯繫技術支援';\r\n    }\r\n\r\n    console.log(`💡 ${advice}`);\r\n    this.showKeyboardHint(advice);\r\n  }\r\n\r\n  /**\r\n   * 自動恢復機制\r\n   */\r\n  private attemptRecovery(): void {\r\n    if (this.retryCount >= this.maxRetries) {\r\n      console.log('⚠️ 已達到最大重試次數，停止自動恢復');\r\n      return;\r\n    }\r\n\r\n    this.retryCount++;\r\n    console.log(`🔄 嘗試自動恢復 (${this.retryCount}/${this.maxRetries})`);\r\n\r\n    // 重置狀態\r\n    this.checkFullscreenStatus();\r\n    this.updateVisuals();\r\n\r\n    // 延遲後重新嘗試\r\n    setTimeout(() => {\r\n      if (this.retryCount < this.maxRetries) {\r\n        console.log('🔄 準備重新嘗試全螢幕操作');\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  /**\r\n   * 重置錯誤狀態\r\n   */\r\n  public resetErrorState(): void {\r\n    this.errorStats.clear();\r\n    this.retryCount = 0;\r\n    this.lastErrorTime = 0;\r\n    console.log('🔄 錯誤狀態已重置');\r\n  }\r\n\r\n  /**\r\n   * 獲取錯誤統計\r\n   */\r\n  public getErrorStats(): { [key: string]: number } {\r\n    const stats: { [key: string]: number } = {};\r\n    this.errorStats.forEach((count, type) => {\r\n      stats[type] = count;\r\n    });\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * 顯示錯誤訊息\r\n   */\r\n  private showErrorMessage(message: string, errorType: string = 'unknown'): void {\r\n    // 創建錯誤提示\r\n    const errorTooltip = this.scene.add.container(\r\n      this.container.x - 80,\r\n      this.container.y - 60\r\n    );\r\n\r\n    const errorBg = this.scene.add.graphics();\r\n    errorBg.fillStyle(0xff4444, 0.9);\r\n    errorBg.fillRoundedRect(-70, -20, 140, 40, 6);\r\n\r\n    const errorText = this.scene.add.text(0, 0, message, {\r\n      fontSize: '11px',\r\n      color: '#ffffff',\r\n      align: 'center',\r\n      wordWrap: { width: 130 }\r\n    }).setOrigin(0.5);\r\n\r\n    errorTooltip.add([errorBg, errorText]);\r\n    errorTooltip.setDepth(1002);\r\n\r\n    // 3秒後自動消失\r\n    this.scene.time.delayedCall(3000, () => {\r\n      errorTooltip.destroy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 進入全螢幕回調\r\n   */\r\n  private onFullscreenEnter(): void {\r\n    // 觸發 Phaser 的 resize 事件\r\n    setTimeout(() => {\r\n      this.scene.scale.refresh();\r\n      this.updatePosition();\r\n\r\n      // 🎯 觸發響應式管理器更新所有元素（帶動畫）\r\n      this.triggerResponsiveUpdate();\r\n    }, 100);\r\n\r\n    console.log('🎮 遊戲已進入全螢幕模式');\r\n  }\r\n\r\n  /**\r\n   * 退出全螢幕回調\r\n   */\r\n  private onFullscreenExit(): void {\r\n    // 觸發 Phaser 的 resize 事件\r\n    setTimeout(() => {\r\n      this.scene.scale.refresh();\r\n      this.updatePosition();\r\n\r\n      // 🎯 觸發響應式管理器更新所有元素（帶動畫）\r\n      this.triggerResponsiveUpdate();\r\n    }, 100);\r\n\r\n    console.log('🎮 遊戲已退出全螢幕模式');\r\n  }\r\n\r\n  /**\r\n   * 觸發響應式管理器更新\r\n   */\r\n  private triggerResponsiveUpdate(): void {\r\n    // 檢查場景是否有響應式管理器\r\n    const gameScene = this.scene as any;\r\n    if (gameScene.responsiveManager && typeof gameScene.responsiveManager.forceUpdate === 'function') {\r\n      console.log('🔄 觸發響應式管理器全域更新（帶平滑動畫）');\r\n      gameScene.responsiveManager.forceUpdate(true);\r\n    } else {\r\n      console.log('⚠️ 響應式管理器未找到，跳過更新');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示鍵盤快捷鍵提示\r\n   */\r\n  private showKeyboardHint(message: string): void {\r\n    const hint = this.scene.add.container(\r\n      this.container.x - 80,\r\n      this.container.y - 80\r\n    );\r\n\r\n    const hintBg = this.scene.add.graphics();\r\n    hintBg.fillStyle(0x4CAF50, 0.9);\r\n    hintBg.fillRoundedRect(-60, -15, 120, 30, 6);\r\n\r\n    const hintText = this.scene.add.text(0, 0, message, {\r\n      fontSize: '11px',\r\n      color: '#ffffff',\r\n      align: 'center'\r\n    }).setOrigin(0.5);\r\n\r\n    hint.add([hintBg, hintText]);\r\n    hint.setDepth(1003);\r\n    hint.setAlpha(0);\r\n\r\n    // 淡入動畫\r\n    this.scene.tweens.add({\r\n      targets: hint,\r\n      alpha: 1,\r\n      duration: 200,\r\n      ease: 'Power2',\r\n      onComplete: () => {\r\n        // 2秒後淡出\r\n        this.scene.time.delayedCall(2000, () => {\r\n          this.scene.tweens.add({\r\n            targets: hint,\r\n            alpha: 0,\r\n            duration: 300,\r\n            ease: 'Power2',\r\n            onComplete: () => hint.destroy()\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 顯示初始提示\r\n   */\r\n  private showInitialHint(): void {\r\n    // 5秒後顯示快捷鍵提示\r\n    this.scene.time.delayedCall(5000, () => {\r\n      if (!this.isFullscreen) {\r\n        this.showKeyboardHint('按 F11 進入全螢幕');\r\n      }\r\n    });\r\n\r\n    // 15秒後顯示進階提示\r\n    this.scene.time.delayedCall(15000, () => {\r\n      if (!this.isFullscreen) {\r\n        this.showAdvancedHints();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 顯示進階提示\r\n   */\r\n  private showAdvancedHints(): void {\r\n    const hints = [\r\n      '💡 全螢幕模式可獲得更好的遊戲體驗',\r\n      '🎮 支援鍵盤快捷鍵 F11 和 ESC',\r\n      '📱 在不同設備上都能完美適配',\r\n      '✨ 享受沉浸式的太空冒險'\r\n    ];\r\n\r\n    const randomHint = hints[Math.floor(Math.random() * hints.length)];\r\n    this.showKeyboardHint(randomHint);\r\n  }\r\n\r\n  /**\r\n   * 智能提示系統\r\n   */\r\n  private showSmartHints(): void {\r\n    const gameScene = this.scene as any;\r\n\r\n    // 根據遊戲狀態提供不同提示\r\n    if (gameScene.score && gameScene.score > 100) {\r\n      this.showKeyboardHint('🏆 分數不錯！全螢幕模式體驗更佳');\r\n    } else if (gameScene.gameStarted) {\r\n      this.showKeyboardHint('🎯 遊戲進行中，試試全螢幕模式');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 用戶行為分析\r\n   */\r\n  private analyzeUserBehavior(): void {\r\n    const now = Date.now();\r\n\r\n    // 如果用戶長時間懸停但未點擊\r\n    if (this.isHovered) {\r\n      this.scene.time.delayedCall(3000, () => {\r\n        if (this.isHovered && !this.isFullscreen) {\r\n          this.showKeyboardHint('點擊進入全螢幕，或按 F11');\r\n        }\r\n      });\r\n    }\r\n\r\n    // 如果用戶頻繁嘗試但失敗\r\n    if (this.errorStats.size > 0) {\r\n      this.showTroubleshootingTips();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示故障排除提示\r\n   */\r\n  private showTroubleshootingTips(): void {\r\n    const tips = [\r\n      '🔧 如果全螢幕無法使用，請檢查瀏覽器設定',\r\n      '🔄 嘗試重新整理頁面後再試',\r\n      '🌐 建議使用 Chrome 或 Firefox 瀏覽器',\r\n      '🔒 確保在安全的 HTTPS 環境下使用'\r\n    ];\r\n\r\n    const tip = tips[Math.floor(Math.random() * tips.length)];\r\n    this.showKeyboardHint(tip);\r\n  }\r\n\r\n  /**\r\n   * 顯示功能介紹\r\n   */\r\n  private showFeatureIntro(): void {\r\n    const intro = this.scene.add.container(\r\n      this.container.x - 120,\r\n      this.container.y - 100\r\n    );\r\n\r\n    const introBg = this.scene.add.graphics();\r\n    introBg.fillStyle(0x2196F3, 0.95);\r\n    introBg.fillRoundedRect(-100, -40, 200, 80, 8);\r\n\r\n    const introTitle = this.scene.add.text(0, -15, '🖥️ 全螢幕功能', {\r\n      fontSize: '14px',\r\n      color: '#ffffff',\r\n      fontStyle: 'bold',\r\n      align: 'center'\r\n    }).setOrigin(0.5);\r\n\r\n    const introText = this.scene.add.text(0, 10, '點擊按鈕或按 F11\\n獲得最佳遊戲體驗', {\r\n      fontSize: '11px',\r\n      color: '#ffffff',\r\n      align: 'center'\r\n    }).setOrigin(0.5);\r\n\r\n    intro.add([introBg, introTitle, introText]);\r\n    intro.setDepth(1004);\r\n    intro.setAlpha(0);\r\n\r\n    // 淡入動畫\r\n    this.scene.tweens.add({\r\n      targets: intro,\r\n      alpha: 1,\r\n      duration: 300,\r\n      ease: 'Power2',\r\n      onComplete: () => {\r\n        // 4秒後淡出\r\n        this.scene.time.delayedCall(4000, () => {\r\n          this.scene.tweens.add({\r\n            targets: intro,\r\n            alpha: 0,\r\n            duration: 500,\r\n            ease: 'Power2',\r\n            onComplete: () => intro.destroy()\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 全螢幕狀態變化處理\r\n   */\r\n  private onFullscreenChange(): void {\r\n    this.checkFullscreenStatus();\r\n    this.drawIcon();\r\n\r\n    console.log('🖥️ 全螢幕狀態變化:', {\r\n      isFullscreen: this.isFullscreen,\r\n      windowSize: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      },\r\n      gameSize: {\r\n        width: this.scene.scale.gameSize.width,\r\n        height: this.scene.scale.gameSize.height\r\n      }\r\n    });\r\n\r\n    // 🔧 關鍵修復：觸發響應式管理器強制更新\r\n    setTimeout(() => {\r\n      // 觸發 Phaser 的 resize 事件\r\n      this.scene.scale.refresh();\r\n\r\n      // 🚀 強制更新響應式管理器，確保所有元素等比例自適應\r\n      const gameScene = this.scene as any;\r\n      if (gameScene.responsiveManager) {\r\n        console.log('🔄 觸發響應式管理器強制更新...');\r\n        gameScene.responsiveManager.forceUpdate(true);\r\n        console.log('✅ 響應式管理器更新完成');\r\n      } else {\r\n        console.warn('⚠️ 響應式管理器不存在');\r\n      }\r\n\r\n      // 更新按鈕位置\r\n      this.updatePosition();\r\n\r\n      console.log('🎯 全螢幕自適應處理完成');\r\n    }, 150); // 增加延遲確保 DOM 更新完成\r\n  }\r\n  \r\n  /**\r\n   * 檢查當前全螢幕狀態\r\n   */\r\n  private checkFullscreenStatus(): void {\r\n    this.isFullscreen = !!(\r\n      document.fullscreenElement ||\r\n      (document as any).webkitFullscreenElement ||\r\n      (document as any).mozFullScreenElement ||\r\n      (document as any).msFullscreenElement\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * 更新按鈕位置（右下角）\r\n   */\r\n  public updatePosition(): void {\r\n    const gameSize = this.scene.scale.gameSize;\r\n    const x = gameSize.width - this.config.size / 2 - 16;\r\n    const y = gameSize.height - this.config.size / 2 - 16;\r\n\r\n    this.container.setPosition(x, y);\r\n  }\r\n  \r\n  /**\r\n   * 銷毀按鈕\r\n   */\r\n  public destroy(): void {\r\n    // 移除事件監聽\r\n    document.removeEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.removeEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.removeEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\r\n    document.removeEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\r\n    \r\n    // 銷毀容器\r\n    this.container.destroy();\r\n    \r\n    console.log('🗑️ 全螢幕按鈕已銷毀');\r\n  }\r\n}\r\n","/**\r\n * 主遊戲場景 - Vite + Phaser 3 版本\r\n * 基於記憶科學的飛機碰撞英語學習遊戲\r\n * 整合完整的遊戲邏輯和管理器系統\r\n */\r\n\r\nimport Phaser from 'phaser';\r\nimport { GameConfig, GameState, GEPTWord, ParentMessage } from '../types/game';\r\nimport { GEPTManager, GEPTLevel } from '../managers/GEPTManager';\r\nimport { CollisionDetectionSystem, CollisionEvent } from '../managers/CollisionDetectionSystem';\r\nimport { MemoryEnhancementEngine, LearningEvent } from '../managers/MemoryEnhancementEngine';\r\nimport { BilingualManager } from '../managers/BilingualManager';\r\nimport { ChineseUIManager } from '../managers/ChineseUIManager';\r\nimport { ResponsiveManager } from '../managers/ResponsiveManager';\r\nimport { HealthBar } from '../ui/HealthBar';\r\nimport { FullscreenButton } from '../ui/FullscreenButton';\r\n\r\nexport default class GameScene extends Phaser.Scene {\r\n  // 遊戲配置和狀態\r\n  private gameConfig!: GameConfig;\r\n  private gameState: GameState = {\r\n    isPlaying: false,\r\n    isPaused: false,\r\n    currentScore: 0,\r\n    currentHealth: 100,\r\n    wordsLearned: 0,\r\n    accuracy: 0\r\n  };\r\n\r\n  // 遊戲物件\r\n  private player!: Phaser.Physics.Arcade.Sprite;\r\n  private shooterContainer?: Phaser.GameObjects.Container;\r\n  private clouds!: Phaser.Physics.Arcade.Group;\r\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\r\n  private backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\r\n\r\n  // UI 元素\r\n  private scoreText!: Phaser.GameObjects.Text;\r\n  private healthBar!: HealthBar;  // 🔧 替換文字為血條\r\n  private targetWordText!: Phaser.GameObjects.Text;\r\n  private accuracyText!: Phaser.GameObjects.Text;\r\n  private wordsLearnedText!: Phaser.GameObjects.Text;\r\n\r\n  // 管理器系統\r\n  private geptManager!: GEPTManager;\r\n  private collisionSystem!: CollisionDetectionSystem;\r\n  private memoryEngine!: MemoryEnhancementEngine;\r\n  private bilingualManager!: BilingualManager;\r\n  private chineseUIManager!: ChineseUIManager;\r\n  private responsiveManager!: ResponsiveManager;\r\n\r\n  // UI 組件\r\n  private fullscreenButton!: FullscreenButton;\r\n\r\n  // 雲朵圖片載入狀態\r\n  private useBackupCloudTexture: boolean = false;\r\n\r\n  // 遊戲邏輯\r\n  private cloudSpawnTimer!: Phaser.Time.TimerEvent;\r\n  private currentTargetWord?: GEPTWord;\r\n  private targetWordSetTime: number = 0;\r\n\r\n  // 遊戲統計\r\n  private totalCollisions: number = 0;\r\n  private correctCollisions: number = 0;\r\n  private wrongCollisions: number = 0; // 🎯 追蹤錯誤次數\r\n\r\n  // 開始畫面狀態 (Wordwall 風格)\r\n  private showStartScreen: boolean = true;\r\n  private gameStarted: boolean = false;\r\n  private startScreen?: Phaser.GameObjects.Container;\r\n  private playButton?: Phaser.GameObjects.Image;\r\n\r\n  constructor() {\r\n    super({ key: 'GameScene' });\r\n  }\r\n\r\n  init() {\r\n    console.log('🎮 初始化遊戲場景');\r\n\r\n    // 從註冊表獲取遊戲配置\r\n    this.gameConfig = this.registry.get('gameConfig') || {\r\n      geptLevel: 'elementary',\r\n      enableSound: true,\r\n      enableHapticFeedback: true,\r\n      difficulty: 'medium',\r\n      gameMode: 'practice'\r\n    };\r\n\r\n    console.log('📋 遊戲配置:', this.gameConfig);\r\n\r\n    // 初始化管理器系統\r\n    this.initializeManagers();\r\n  }\r\n\r\n  /**\r\n   * 初始化管理器系統\r\n   */\r\n  private initializeManagers(): void {\r\n    try {\r\n      console.log('🔧 開始初始化管理器系統...');\r\n\r\n      // 初始化 GEPT 管理器\r\n      console.log('📚 初始化 GEPT 管理器...');\r\n      this.geptManager = new GEPTManager();\r\n      this.geptManager.setLevel(this.gameConfig.geptLevel);\r\n      console.log('✅ GEPT 管理器初始化完成');\r\n\r\n      // 初始化記憶增強引擎\r\n      console.log('🧠 初始化記憶增強引擎...');\r\n      this.memoryEngine = new MemoryEnhancementEngine();\r\n      console.log('✅ 記憶增強引擎初始化完成');\r\n\r\n      // 初始化碰撞檢測系統\r\n      console.log('💥 初始化碰撞檢測系統...');\r\n      this.collisionSystem = new CollisionDetectionSystem(\r\n        this,\r\n        this.gameConfig.geptLevel,\r\n        {\r\n          enableParticles: true,\r\n          enableScreenShake: true,\r\n          enableSoundEffects: this.gameConfig.enableSound,\r\n          enableVisualFeedback: true,\r\n          particleIntensity: 'medium',\r\n          soundVolume: 0.7\r\n        }\r\n      );\r\n      console.log('✅ 碰撞檢測系統初始化完成');\r\n\r\n      // 初始化雙語管理器\r\n      console.log('🌐 初始化雙語管理器...');\r\n      this.bilingualManager = new BilingualManager(this, this.geptManager);\r\n      console.log('✅ 雙語管理器初始化完成');\r\n\r\n      // 初始化中文 UI 管理器\r\n      console.log('🈳 初始化中文 UI 管理器...');\r\n      this.chineseUIManager = new ChineseUIManager(this, this.geptManager, this.bilingualManager);\r\n      console.log('✅ 中文 UI 管理器初始化完成');\r\n\r\n      // 初始化響應式管理器\r\n      console.log('📱 初始化響應式管理器...');\r\n      this.responsiveManager = new ResponsiveManager(this, {\r\n        baseWidth: 1274,\r\n        baseHeight: 739,\r\n        enableSmoothing: true,\r\n        animationDuration: 300\r\n      });\r\n      console.log('✅ 響應式管理器初始化完成');\r\n\r\n      console.log('🎉 所有管理器初始化完成（包含雙語系統 + 響應式管理器）');\r\n    } catch (error) {\r\n      console.error('❌ 管理器初始化失敗:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  preload() {\r\n    console.log('🎨 載入遊戲資源');\r\n\r\n    // 載入月亮主題背景圖片\r\n    this.loadMoonBackground();\r\n\r\n    // 🚀 載入您的太空船精靈表 - 恢復完整載入\r\n    console.log('🚀 載入玩家太空船精靈表...');\r\n\r\n    // 載入新的玩家太空船精靈表 - 一艘太空船的7幀飛行動畫\r\n    // 根據實際檢測：總寬度2450px，7幀橫向排列，高度150px\r\n    this.load.spritesheet('player_spaceship', 'assets/sprite_player_spaceship_up_down.png', {\r\n      frameWidth: Math.floor(2450 / 7),  // 2450px ÷ 7幀 = 350px\r\n      frameHeight: 150                   // 實際高度150px\r\n    });\r\n\r\n    // 保留原始精靈表作為備用方案\r\n    this.load.spritesheet('random_shooter', 'assets/random_shooter-sheet.png', {\r\n      frameWidth: 64,   // 備用方案\r\n      frameHeight: 64   // 備用方案\r\n    });\r\n\r\n    // 載入新的玩家太空船圖片（普通圖片模式）\r\n    this.load.image('player_spaceship_image', 'assets/sprite_player_spaceship_up_down.png');\r\n\r\n    // 備用：用戶自定義完整太空船圖片\r\n    this.load.image('complete_spaceship', 'assets/complete_spaceship.png');\r\n\r\n    console.log('✅ 太空船資源載入配置完成');\r\n\r\n    // 備用方案：創建太空船形狀的動態精靈（暫時停用）\r\n    // this.createSpaceshipSprite();\r\n\r\n    // 🔄 恢復原來的飛機紋理創建，但增強錯誤處理\r\n    console.log('✈️ 創建玩家飛機紋理 - 恢復原版 + 增強');\r\n\r\n    try {\r\n      // 玩家飛機 - 藍色三角形 (備用方案)\r\n      const planeGraphics = this.add.graphics();\r\n      planeGraphics.fillStyle(0x0066ff);\r\n      planeGraphics.fillTriangle(16, 0, 0, 32, 32, 32);\r\n\r\n      // 添加白色邊框讓飛機更明顯\r\n      planeGraphics.lineStyle(2, 0xffffff, 1);\r\n      planeGraphics.strokeTriangle(16, 0, 0, 32, 32, 32);\r\n\r\n      planeGraphics.generateTexture('player-plane', 32, 32);\r\n      planeGraphics.destroy();\r\n      console.log('✅ 備用飛機紋理創建完成');\r\n    } catch (error) {\r\n      console.error('❌ 備用飛機紋理創建失敗:', error);\r\n    }\r\n\r\n    // 載入真實雲朵圖片 (使用用戶提供的白色雲朵)\r\n    this.load.image('cloud-word', 'assets/images/cloud_shape3_3.png');\r\n\r\n    // 添加載入成功和錯誤處理\r\n    this.load.on('filecomplete-image-cloud-word', () => {\r\n      console.log('✅ 雲朵圖片載入成功');\r\n    });\r\n\r\n    this.load.on('loaderror', (fileObj: any) => {\r\n      if (fileObj.key === 'cloud-word') {\r\n        console.log('⚠️ 雲朵圖片載入失敗，使用淺藍色備用紋理（防止白色閃爍）');\r\n        // 強制使用備用紋理\r\n        this.useBackupCloudTexture = true;\r\n      }\r\n    });\r\n\r\n    // 🔧 修復白色閃爍：備用雲朵使用淺藍色而不是白色\r\n    const cloudGraphics = this.add.graphics();\r\n    cloudGraphics.fillStyle(0xe6f3ff); // 淺藍色而不是純白色，防止白色閃爍\r\n    cloudGraphics.fillEllipse(32, 16, 60, 28);\r\n    cloudGraphics.lineStyle(2, 0x4a90e2); // 藍色邊框\r\n    cloudGraphics.strokeEllipse(32, 16, 60, 28);\r\n    cloudGraphics.generateTexture('cloud-word-fallback', 64, 32);\r\n    cloudGraphics.destroy();\r\n\r\n    console.log('☁️ 備用雲朵紋理已創建（淺藍色，防止白色閃爍）');\r\n\r\n    // 背景星星 - 小白點\r\n    const starGraphics = this.add.graphics();\r\n    starGraphics.fillStyle(0xffffff);\r\n    starGraphics.fillCircle(2, 2, 2);\r\n    starGraphics.generateTexture('star', 4, 4);\r\n    starGraphics.destroy();\r\n\r\n    // 添加載入完成事件\r\n    this.load.on('complete', () => {\r\n      console.log('✅ 簡化資源載入完成 - 準備測試全螢幕按鈕');\r\n    });\r\n\r\n    console.log('🎨 簡化遊戲資源載入排程完成（專注測試全螢幕按鈕）');\r\n  }\r\n\r\n  /**\r\n   * 創建太空船動畫 - 使用新的玩家太空船精靈表\r\n   */\r\n  private createSpaceshipAnimation(): void {\r\n    console.log('🚀 創建新太空船動畫配置');\r\n\r\n    // 優先檢查新的玩家太空船精靈表\r\n    if (this.textures.exists('player_spaceship')) {\r\n      console.log('✨ 使用新的玩家太空船精靈表');\r\n\r\n      // 檢查紋理詳細信息\r\n      const texture = this.textures.get('player_spaceship');\r\n      console.log('🔍 精靈表詳細信息:', {\r\n        key: 'player_spaceship',\r\n        width: texture.source[0].width,\r\n        height: texture.source[0].height,\r\n        frameTotal: texture.frameTotal,\r\n        frames: Object.keys(texture.frames)\r\n      });\r\n\r\n      // 創建太空船飛行動畫 - 使用7幀飛行動畫（0-6）\r\n      this.anims.create({\r\n        key: 'spaceship_fly',\r\n        frames: this.anims.generateFrameNumbers('player_spaceship', {\r\n          start: 0,\r\n          end: 6     // 使用7幀：0, 1, 2, 3, 4, 5, 6\r\n        }),\r\n        frameRate: 10,       // 每秒10幀，流暢的飛行動畫\r\n        repeat: -1,          // 無限循環\r\n        yoyo: false          // 不反向播放，正常循環\r\n      });\r\n\r\n      console.log('✅ 太空船飛行動畫創建完成: spaceship_fly (7幀動畫，292x512)');\r\n\r\n    } else if (this.textures.exists('random_shooter')) {\r\n      console.log('🔄 備用方案：使用原始精靈表');\r\n\r\n      // 備用方案：使用原始精靈表\r\n      this.anims.create({\r\n        key: 'spaceship_fly',\r\n        frames: this.anims.generateFrameNumbers('random_shooter', {\r\n          start: 0,  // 第一幀\r\n          end: 3     // 使用前4幀作為動畫\r\n        }),\r\n        frameRate: 6,        // 每秒6幀\r\n        repeat: -1,          // 無限循環\r\n        yoyo: false          // 不反向播放\r\n      });\r\n\r\n      console.log('✅ 備用太空船動畫創建完成: spaceship_fly (原始精靈表)');\r\n    } else {\r\n      console.warn('⚠️ 沒有可用的太空船精靈表，跳過動畫創建');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建太空船形狀的動態精靈（備用方案）\r\n   */\r\n  private createSpaceshipSprite(): void {\r\n    // 創建多幀太空船精靈\r\n    const frames = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      const graphics = this.add.graphics();\r\n\r\n      // 太空船主體顏色變化\r\n      const hue = 200 + (i * 10); // 藍色系變化\r\n      const color = Phaser.Display.Color.HSVToRGB(hue / 360, 0.8, 0.9);\r\n\r\n      // 繪製太空船形狀\r\n      graphics.fillStyle(color.color);\r\n\r\n      // 主體（橢圓形）\r\n      graphics.fillEllipse(32, 32, 24, 40);\r\n\r\n      // 機翼\r\n      graphics.fillTriangle(8, 20, 20, 32, 8, 44);\r\n      graphics.fillTriangle(56, 20, 44, 32, 56, 44);\r\n\r\n      // 駕駛艙\r\n      graphics.fillStyle(0x00ffff);\r\n      graphics.fillEllipse(32, 28, 8, 12);\r\n\r\n      // 引擎噴射效果（根據幀變化）\r\n      const flameIntensity = 0.5 + (i * 0.2);\r\n      graphics.fillStyle(Phaser.Display.Color.GetColor(255, 100 + i * 30, 0));\r\n      graphics.fillEllipse(32, 50 + i, 6, 8 * flameIntensity);\r\n\r\n      graphics.generateTexture(`spaceship_${i}`, 64, 64);\r\n      graphics.destroy();\r\n      frames.push({ key: `spaceship_${i}` });\r\n    }\r\n\r\n    // 創建太空船動畫配置\r\n    this.anims.create({\r\n      key: 'spaceship_backup_anim',\r\n      frames: frames,\r\n      frameRate: 8,\r\n      repeat: -1\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 創建動態精靈圖片\r\n   */\r\n  private createDynamicSprite(): void {\r\n    // 創建多幀圓形精靈\r\n    const frames = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      const graphics = this.add.graphics();\r\n      const hue = (i * 45) % 360; // 每幀不同顏色\r\n      const color = Phaser.Display.Color.HSVToRGB(hue / 360, 0.8, 0.9);\r\n      graphics.fillStyle(color.color);\r\n      graphics.fillCircle(32, 32, 28);\r\n      graphics.lineStyle(3, 0xffffff);\r\n      graphics.strokeCircle(32, 32, 28);\r\n      graphics.generateTexture(`enemy_circle_${i}`, 64, 64);\r\n      graphics.destroy();\r\n      frames.push({ key: `enemy_circle_${i}` });\r\n    }\r\n\r\n    // 創建動畫配置\r\n    this.anims.create({\r\n      key: 'enemy_circle_anim',\r\n      frames: frames,\r\n      frameRate: 10,\r\n      repeat: -1\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 載入月亮主題背景圖片\r\n   */\r\n  private loadMoonBackground(): void {\r\n    console.log('🌙 載入月亮主題背景');\r\n\r\n    // 載入真實的月亮視差背景圖片\r\n    try {\r\n      // 天空層 - 最遠的背景\r\n      this.load.image('moon-sky', 'assets/backgrounds/moon/moon_sky.png');\r\n\r\n      // 後景層 - 遠山/星空\r\n      this.load.image('moon-back', 'assets/backgrounds/moon/moon_back.png');\r\n\r\n      // 中景層 - 月球表面\r\n      this.load.image('moon-mid', 'assets/backgrounds/moon/moon_mid.png');\r\n\r\n      // 地球層 - 地球視圖\r\n      this.load.image('moon-earth', 'assets/backgrounds/moon/moon_earth.png');\r\n\r\n      // 前景層 - 近景元素\r\n      this.load.image('moon-front', 'assets/backgrounds/moon/moon_front.png');\r\n\r\n      // 地面層 - 月球地面\r\n      this.load.image('moon-floor', 'assets/backgrounds/moon/moon_floor.png');\r\n\r\n      console.log('🌙 真實月亮背景圖片載入排程完成（相對路徑）');\r\n    } catch (error) {\r\n      console.warn('⚠️ 月亮背景載入失敗，將使用備用背景:', error);\r\n    }\r\n  }\r\n\r\n  create() {\r\n    console.log('🏗️ 創建遊戲場景');\r\n\r\n    // 創建太空船動畫\r\n    this.createSpaceshipAnimation();\r\n\r\n    // 創建視差背景\r\n    this.createParallaxBackground();\r\n\r\n    // 創建玩家飛機\r\n    this.createPlayer();\r\n\r\n    // 創建雲朵群組\r\n    this.createClouds();\r\n\r\n    // 創建完整的 UI\r\n    this.createGameHUD();\r\n\r\n    // 設置輸入控制\r\n    this.setupInput();\r\n\r\n    // 設置物理碰撞\r\n    this.setupPhysics();\r\n\r\n    // 設置目標詞彙\r\n    this.setRandomTargetWord();\r\n\r\n    console.log('✅ 遊戲場景創建完成');\r\n\r\n    // 🎯 暫時跳過開始畫面，直接開始遊戲（解決點擊問題）\r\n    console.log('🚀 跳過開始畫面，直接開始遊戲');\r\n    this.showStartScreen = false;\r\n    this.gameStarted = true;\r\n\r\n    // 延遲啟動遊戲，確保所有系統初始化完成\r\n    this.time.delayedCall(1000, () => {\r\n      console.log('🎮 延遲啟動遊戲...');\r\n      this.startGame();\r\n\r\n      // 🧪 測試雲朵已移除，遊戲更加乾淨\r\n\r\n      // 🔴 紅色方塊測試已移除，遊戲更加乾淨\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 更新雲朵位置和清理離開螢幕的雲朵\r\n   */\r\n  private updateClouds(): void {\r\n    const cloudCount = this.clouds.children.entries.length;\r\n\r\n    // 每 5 秒輸出一次雲朵狀態\r\n    if (Math.floor(Date.now() / 1000) % 5 === 0) {\r\n      console.log('🔄 雲朵更新檢查 - 總數:', cloudCount);\r\n    }\r\n\r\n    this.clouds.children.entries.forEach((cloud: any, index: number) => {\r\n      // 每 5 秒輸出雲朵位置\r\n      if (Math.floor(Date.now() / 1000) % 5 === 0) {\r\n        console.log(`☁️ 雲朵 ${index}: x=${Math.round(cloud.x)}, y=${Math.round(cloud.y)}, velocity=${cloud.body?.velocity?.x || 'N/A'}`);\r\n      }\r\n\r\n      // 檢查雲朵是否移出螢幕左側\r\n      if (cloud.x < -100) {\r\n        // 清理雲朵和相關文字\r\n        const wordText = cloud.getData('wordText');\r\n        if (wordText) {\r\n          wordText.destroy();\r\n        }\r\n        cloud.destroy();\r\n        console.log('🗑️ 清理離開螢幕的雲朵 - 位置:', cloud.x);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 創建 Wordwall 風格的開始畫面\r\n   */\r\n  private createStartScreen(): void {\r\n    console.log('🎮 創建 Wordwall 風格開始畫面');\r\n    console.log('🔍 當前狀態 - showStartScreen:', this.showStartScreen, 'gameStarted:', this.gameStarted);\r\n\r\n    // 創建半透明遮罩 - 設為可互動，完整容器尺寸\r\n    const overlay = this.add.rectangle(637, 369.5, 1274, 739, 0x000000, 0.7);\r\n    overlay.setDepth(1000);\r\n    overlay.setInteractive(); // 🎯 讓遮罩可以接收點擊事件\r\n\r\n    // 在遮罩上添加點擊事件\r\n    overlay.on('pointerdown', () => {\r\n      console.log('🖱️ 遮罩點擊檢測，開始遊戲');\r\n      if (this.showStartScreen) {\r\n        this.hideStartScreen();\r\n        this.startGame();\r\n      }\r\n    });\r\n\r\n    // 創建開始畫面容器\r\n    this.startScreen = this.add.container(634, 336);\r\n    this.startScreen.setDepth(1001);\r\n\r\n    // 遊戲標題\r\n    const title = this.add.text(0, -150, '🛩️ 飛機英語學習遊戲', {\r\n      fontSize: '48px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      color: '#FFFFFF',\r\n      align: 'center',\r\n      fontStyle: 'bold'\r\n    }).setOrigin(0.5);\r\n\r\n    // 遊戲說明\r\n    const instruction = this.add.text(0, -80, '駕駛飛機收集目標英文單字\\n避開其他單字，學習更有效！', {\r\n      fontSize: '24px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      color: '#CCCCCC',\r\n      align: 'center',\r\n      lineSpacing: 10\r\n    }).setOrigin(0.5);\r\n\r\n    // 創建 Wordwall 風格的 Play 按鈕\r\n    const playButtonBg = this.add.circle(0, 50, 80, 0x4CAF50);\r\n    playButtonBg.setStrokeStyle(4, 0xFFFFFF);\r\n\r\n    const playText = this.add.text(0, 50, 'PLAY', {\r\n      fontSize: '32px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      color: '#FFFFFF',\r\n      fontStyle: 'bold'\r\n    }).setOrigin(0.5);\r\n\r\n    // 添加到容器\r\n    this.startScreen.add([title, instruction, playButtonBg, playText]);\r\n\r\n    // 📝 註冊開始畫面到響應式管理器\r\n    this.responsiveManager.registerElement('startScreen', this.startScreen, 'ui', {\r\n      anchor: { x: 0.5, y: 0.5 }, // 中央錨點\r\n      constraints: {\r\n        keepAspectRatio: true,\r\n        minScale: 0.6,\r\n        maxScale: 1.2\r\n      }\r\n    });\r\n\r\n    // 設置按鈕互動 - 使用更大的互動區域\r\n    playButtonBg.setInteractive(new Phaser.Geom.Circle(0, 0, 100), Phaser.Geom.Circle.Contains);\r\n    playText.setInteractive({ useHandCursor: true });\r\n\r\n    // 按鈕點擊事件\r\n    const startGameHandler = () => {\r\n      console.log('🎮 點擊 Play 按鈕，開始遊戲');\r\n      this.hideStartScreen();\r\n      this.startGame();\r\n    };\r\n\r\n    playButtonBg.on('pointerdown', startGameHandler);\r\n    playText.on('pointerdown', startGameHandler);\r\n\r\n    // 添加全畫面點擊監聽器作為備用\r\n    this.input.on('pointerdown', (pointer: Phaser.Input.Pointer) => {\r\n      console.log('🖱️ 檢測到點擊事件，showStartScreen:', this.showStartScreen);\r\n      if (this.showStartScreen) {\r\n        console.log('🎮 全畫面點擊檢測，開始遊戲');\r\n        this.hideStartScreen();\r\n        this.startGame();\r\n      } else {\r\n        console.log('⚠️ 開始畫面已隱藏，忽略點擊');\r\n      }\r\n    });\r\n\r\n    // 按鈕懸停效果\r\n    playButtonBg.on('pointerover', () => {\r\n      playButtonBg.setFillStyle(0x45a049);\r\n      playButtonBg.setScale(1.1);\r\n    });\r\n\r\n    playButtonBg.on('pointerout', () => {\r\n      playButtonBg.setFillStyle(0x4CAF50);\r\n      playButtonBg.setScale(1.0);\r\n    });\r\n\r\n    console.log('✅ Wordwall 風格開始畫面創建完成');\r\n  }\r\n\r\n  /**\r\n   * 隱藏開始畫面並開始遊戲\r\n   */\r\n  private hideStartScreen(): void {\r\n    if (this.startScreen) {\r\n      // 📝 從響應式管理器中移除開始畫面\r\n      this.responsiveManager.unregisterElement('startScreen');\r\n\r\n      this.startScreen.destroy();\r\n      this.startScreen = undefined;\r\n    }\r\n\r\n    // 移除遮罩（通過深度查找）\r\n    this.children.list.forEach(child => {\r\n      if ((child as any).depth === 1000) {\r\n        child.destroy();\r\n      }\r\n    });\r\n\r\n    this.showStartScreen = false;\r\n    this.gameStarted = true;\r\n\r\n    console.log('🎮 開始畫面已隱藏，遊戲開始');\r\n  }\r\n\r\n  /**\r\n   * 創建月亮主題視差背景\r\n   */\r\n  private createParallaxBackground(): void {\r\n    console.log('🌌 創建視差背景');\r\n\r\n    // 創建基礎背景色（深太空黑色）- 完整容器尺寸，消除白色空間\r\n    const bgRect = this.add.rectangle(637, 369.5, 1274, 739, 0x000000);  // 🎯 完整容器尺寸 1274x739\r\n    bgRect.setDepth(-20);\r\n\r\n    // 嘗試使用月亮主題背景，如果載入失敗則使用備用方案\r\n    this.createMoonBackgroundLayers();\r\n\r\n    // 創建星空背景\r\n    this.createStarField();\r\n\r\n    console.log('🌌 視差背景創建完成');\r\n  }\r\n\r\n  /**\r\n   * 創建月亮主題背景層\r\n   */\r\n  private createMoonBackgroundLayers(): void {\r\n    const backgroundLayers: Phaser.GameObjects.TileSprite[] = [];\r\n\r\n    // 檢查真實月亮背景圖片是否載入成功\r\n    const hasMoonSky = this.textures.exists('moon-sky');\r\n    const hasMoonBack = this.textures.exists('moon-back');\r\n    const hasMoonMid = this.textures.exists('moon-mid');\r\n    const hasMoonEarth = this.textures.exists('moon-earth');\r\n    const hasMoonFront = this.textures.exists('moon-front');\r\n    const hasMoonFloor = this.textures.exists('moon-floor');\r\n\r\n    if (hasMoonSky || hasMoonBack || hasMoonMid || hasMoonEarth || hasMoonFront || hasMoonFloor) {\r\n      console.log('🌙 使用真實月亮主題背景圖片');\r\n\r\n      // 天空層 - 最遠的背景\r\n      if (hasMoonSky) {\r\n        const skyLayer = this.add.tileSprite(0, 0, 1274, 739, 'moon-sky');\r\n        skyLayer.setOrigin(0, 0);\r\n        skyLayer.setDepth(-20);\r\n        backgroundLayers.push(skyLayer);\r\n      }\r\n\r\n      // 後景層 - 遠山/星空\r\n      if (hasMoonBack) {\r\n        const backLayer = this.add.tileSprite(0, 0, 1274, 739, 'moon-back');\r\n        backLayer.setOrigin(0, 0);\r\n        backLayer.setDepth(-18);\r\n        backgroundLayers.push(backLayer);\r\n      }\r\n\r\n      // 地球層 - 重新對比參考圖片，正確調整大小和位置\r\n      if (hasMoonEarth) {\r\n        console.log('🌍 重新分析參考圖片，修正地球大小和位置');\r\n        const earthLayer = this.add.image(1220, 277, 'moon-earth');  // 🎯 第三次往上移動1/10\r\n        earthLayer.setDepth(100);   // 🎯 最前景深度，確保可見\r\n        earthLayer.setScale(0.45);  // 🎯 放大0.5倍：0.3*1.5=0.45，3800*0.45=1710px\r\n        earthLayer.setAlpha(1.0);   // 🎯 完全不透明\r\n        // 🎯 不裁剪，保持完整圖片\r\n\r\n        console.log('🌍 地球第三次往上移動1/10完成:', {\r\n          x: earthLayer.x,\r\n          y: earthLayer.y,\r\n          scale: earthLayer.scale,\r\n          calculatedWidth: '3800*0.45=1710px',\r\n          position: '第三次往上移動 (1220, 277)',\r\n          depth: earthLayer.depth\r\n        });\r\n      }\r\n\r\n      // 中景層 - 月球表面\r\n      if (hasMoonMid) {\r\n        const midLayer = this.add.tileSprite(0, 0, 1274, 739, 'moon-mid');\r\n        midLayer.setOrigin(0, 0);\r\n        midLayer.setDepth(-14);\r\n        backgroundLayers.push(midLayer);\r\n      }\r\n\r\n      // 前景層 - 近景元素\r\n      if (hasMoonFront) {\r\n        const frontLayer = this.add.tileSprite(0, 0, 1274, 739, 'moon-front');\r\n        frontLayer.setOrigin(0, 0);\r\n        frontLayer.setDepth(-12);\r\n        backgroundLayers.push(frontLayer);\r\n      }\r\n\r\n      // 地面層 - 月球地面\r\n      if (hasMoonFloor) {\r\n        const floorLayer = this.add.tileSprite(0, 0, 1274, 739, 'moon-floor');\r\n        floorLayer.setOrigin(0, 0);\r\n        floorLayer.setDepth(-10);\r\n        backgroundLayers.push(floorLayer);\r\n      }\r\n\r\n    } else {\r\n      console.log('🌌 使用備用漸層背景');\r\n\r\n      // 備用方案：創建漸層背景\r\n      const layer1 = this.add.graphics();\r\n      layer1.fillGradientStyle(0x0a0a2e, 0x0a0a2e, 0x1a1a4e, 0x1a1a4e);\r\n      layer1.fillRect(0, 0, 800, 600);\r\n      layer1.generateTexture('fallback-bg-1', 800, 600);\r\n      layer1.destroy();\r\n\r\n      const layer2 = this.add.graphics();\r\n      layer2.fillGradientStyle(0x1a1a4e, 0x1a1a4e, 0x2a2a6e, 0x2a2a6e);\r\n      layer2.fillRect(0, 0, 800, 600);\r\n      layer2.generateTexture('fallback-bg-2', 800, 600);\r\n      layer2.destroy();\r\n\r\n      const fallbackLayer1 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-1');\r\n      fallbackLayer1.setOrigin(0, 0);\r\n      fallbackLayer1.setDepth(-15);\r\n      fallbackLayer1.setAlpha(0.7);\r\n      backgroundLayers.push(fallbackLayer1);\r\n\r\n      const fallbackLayer2 = this.add.tileSprite(0, 0, 800, 600, 'fallback-bg-2');\r\n      fallbackLayer2.setOrigin(0, 0);\r\n      fallbackLayer2.setDepth(-13);\r\n      fallbackLayer2.setAlpha(0.5);\r\n      backgroundLayers.push(fallbackLayer2);\r\n    }\r\n\r\n    this.backgroundLayers = backgroundLayers;\r\n\r\n    // 📝 註冊背景層到響應式管理器\r\n    this.registerBackgroundLayersToResponsiveManager();\r\n  }\r\n\r\n  /**\r\n   * 創建星空背景\r\n   */\r\n  private createStarField(): void {\r\n    console.log('⭐ 創建星空背景');\r\n\r\n    // 創建星空效果 - 符合參考圖片的分布\r\n    for (let i = 0; i < 150; i++) {\r\n      const x = Phaser.Math.Between(0, 1268);  // 🎯 全寬度分布\r\n      const y = Phaser.Math.Between(0, 500);   // 🎯 擴大垂直範圍，符合參考圖片\r\n      const star = this.add.image(x, y, 'star');\r\n\r\n      // 🎯 更小更精緻的星星，符合參考圖片\r\n      const scale = Phaser.Math.FloatBetween(0.2, 0.8);\r\n      const alpha = Phaser.Math.FloatBetween(0.6, 1.0);  // 🎯 更亮的星星\r\n\r\n      star.setScale(scale);\r\n      star.setAlpha(alpha);\r\n      star.setDepth(-19);  // 🎯 調整深度層級\r\n\r\n      // 🎯 更慢的閃爍效果，營造深太空氛圍\r\n      this.tweens.add({\r\n        targets: star,\r\n        alpha: alpha * 0.4,\r\n        duration: Phaser.Math.Between(3000, 6000),\r\n        yoyo: true,\r\n        repeat: -1,\r\n        ease: 'Sine.easeInOut'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建玩家飛機 - 使用太空船動畫精靈表\r\n   */\r\n  private createPlayer(): void {\r\n    console.log('🎯 創建玩家射手角色 - 恢復原版太空船邏輯');\r\n\r\n    // 檢查可用的太空船資源（優先級順序）\r\n    const hasPlayerSpaceshipImage = this.textures.exists('player_spaceship_image');\r\n    const hasPlayerSpaceship = this.textures.exists('player_spaceship');\r\n    const hasShooterImage = this.textures.exists('random_shooter');\r\n    const hasCompleteSpaceship = this.textures.exists('complete_spaceship');\r\n    const hasPlayerPlane = this.textures.exists('player-plane');\r\n\r\n    console.log('🔍 檢查可用資源:', {\r\n      player_spaceship_image: hasPlayerSpaceshipImage,\r\n      player_spaceship: hasPlayerSpaceship,\r\n      random_shooter: hasShooterImage,\r\n      complete_spaceship: hasCompleteSpaceship,\r\n      'player-plane': hasPlayerPlane\r\n    });\r\n\r\n    if (hasPlayerSpaceship) {\r\n      console.log('🚀 使用新的玩家太空船精靈表 - 創建一艘太空船');\r\n\r\n      // 創建一艘太空船精靈（只創建1個精靈）\r\n      this.player = this.physics.add.sprite(150, 336, 'player_spaceship');\r\n\r\n      // 設置錨點為中心 (0.5, 0.5)\r\n      this.player.setOrigin(0.5, 0.5);\r\n\r\n      // 播放7幀飛行動畫（0-6幀）\r\n      this.player.play('spaceship_fly');\r\n\r\n      console.log('✅ 太空船創建完成：1個精靈 + 7幀飛行動畫 (292x512)');\r\n\r\n    } else if (hasPlayerSpaceshipImage) {\r\n      console.log('🚀 備用方案：使用新的玩家太空船圖片（普通圖片模式）');\r\n\r\n      // 備用方案：使用普通圖片模式\r\n      this.player = this.physics.add.sprite(150, 336, 'player_spaceship_image');\r\n\r\n      console.log('✅ 新太空船圖片載入中（靜態模式）');\r\n\r\n    } else if (hasShooterImage) {\r\n      console.log('🔄 備用方案1：使用原始精靈表創建太空船動畫');\r\n\r\n      // 備用方案1：使用原始精靈表創建太空船\r\n      this.player = this.physics.add.sprite(150, 336, 'random_shooter');\r\n\r\n      // 播放太空船飛行動畫（使用原始精靈表的多個幀）\r\n      this.player.play('spaceship_fly');\r\n\r\n      console.log('✅ 太空船動畫播放中：spaceship_fly (原始精靈表)');\r\n\r\n    } else if (hasCompleteSpaceship) {\r\n      console.log('🚀 備用方案2：使用用戶提供的完整太空船圖片');\r\n\r\n      // 使用用戶提供的完整太空船圖片\r\n      this.player = this.physics.add.sprite(150, 336, 'complete_spaceship');\r\n\r\n      // 創建引擎火焰效果\r\n      this.createEngineFlameEffect();\r\n\r\n    } else if (hasPlayerPlane) {\r\n      console.log('🔧 備用方案3：使用藍色三角形飛機');\r\n\r\n      // 使用預設的藍色三角形飛機\r\n      this.player = this.physics.add.sprite(150, 336, 'player-plane');\r\n\r\n    } else {\r\n      console.log('❌ 沒有可用的飛機資源，創建緊急備用');\r\n\r\n      // 最後備用方案：立即創建紅色矩形\r\n      const emergencyRect = this.add.rectangle(150, 336, 40, 40, 0xff0000);\r\n      emergencyRect.setDepth(200);\r\n      this.physics.world.enable(emergencyRect);\r\n      this.player = emergencyRect as any;\r\n\r\n      console.log('🚨 使用緊急紅色矩形作為飛機');\r\n      return; // 跳過後續設置\r\n    }\r\n\r\n    // 統一的太空船配置（適用於所有方案）\r\n    this.setupSpaceshipProperties();\r\n\r\n    // 📝 註冊玩家太空船到響應式管理器\r\n    this.responsiveManager.registerElement('player', this.player, 'gameObject', {\r\n      anchor: { x: 0.5, y: 0.5 }, // 中心錨點\r\n      constraints: {\r\n        keepAspectRatio: true,\r\n        minScale: 0.1,  // 🔧 更寬鬆的最小縮放\r\n        maxScale: 2.0   // 🔧 更寬鬆的最大縮放，支援全螢幕放大\r\n      }\r\n    });\r\n\r\n    console.log('📝 玩家太空船已註冊到響應式管理器');\r\n  }\r\n\r\n  /**\r\n   * 設置太空船的統一屬性，確保位置一致\r\n   */\r\n  private setupSpaceshipProperties(): void {\r\n    console.log('⚙️ 設置太空船統一屬性 - 恢復原版');\r\n\r\n    try {\r\n      // 錨點已在創建時設置為中心 (0.5, 0.5)\r\n\r\n      // 🔧 用戶要求縮小50%：0.8 × 0.5 = 0.4\r\n      this.player.setScale(0.4);\r\n\r\n      // 保持原始方向，不進行旋轉和翻轉\r\n\r\n      // 設置物理屬性\r\n      this.player.setCollideWorldBounds(true);\r\n      this.player.setDepth(10);\r\n\r\n      // 🔧 確保飛機完全可見\r\n      this.player.setAlpha(1.0);\r\n      this.player.setVisible(true);\r\n\r\n      console.log('✅ 太空船屬性設置完成: 中心錨點 + 0.8倍縮放 + 深度10');\r\n\r\n    } catch (error) {\r\n      console.error('❌ 太空船屬性設置失敗:', error);\r\n    }\r\n\r\n    // 添加微妙的脈動效果（不影響位置）- 調整為50%大小\r\n    this.tweens.add({\r\n      targets: this.player,\r\n      scaleX: { from: 0.4, to: 0.42 },\r\n      scaleY: { from: 0.4, to: 0.42 },\r\n      duration: 1000,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: 'Sine.easeInOut'\r\n    });\r\n\r\n    console.log('✅ 太空船屬性設置完成: 中心錨點 + 0.4倍縮放（50%大小）+ 保持原始方向（無旋轉翻轉）+ 脈動效果');\r\n\r\n    // 視覺調試輔助線已隱藏\r\n    // if (process.env.NODE_ENV === 'development') {\r\n    //   // 在太空船位置畫十字線幫助視覺對齊檢查\r\n    //   const graphics = this.add.graphics();\r\n    //   graphics.lineStyle(2, 0xff0000, 0.8);\r\n    //   // 水平線\r\n    //   graphics.moveTo(this.player.x - 50, this.player.y);\r\n    //   graphics.lineTo(this.player.x + 50, this.player.y);\r\n    //   // 垂直線\r\n    //   graphics.moveTo(this.player.x, this.player.y - 50);\r\n    //   graphics.lineTo(this.player.x, this.player.y + 50);\r\n    //   graphics.strokePath();\r\n    //   console.log('🎯 添加視覺調試十字線: 中心點(' + this.player.x + ', ' + this.player.y + ')');\r\n    // }\r\n\r\n    // 🔧 詳細的飛機狀態輸出\r\n    console.log('🎯 玩家飛機創建完成 - 詳細狀態:', {\r\n      x: this.player.x,\r\n      y: this.player.y,\r\n      visible: this.player.visible,\r\n      alpha: this.player.alpha,\r\n      depth: this.player.depth,\r\n      scaleX: this.player.scaleX,\r\n      scaleY: this.player.scaleY,\r\n      texture: this.player.texture.key,\r\n      width: this.player.width,\r\n      height: this.player.height,\r\n      originX: this.player.originX,\r\n      originY: this.player.originY,\r\n      active: this.player.active\r\n    });\r\n\r\n    // 🔧 檢查飛機是否在可見範圍內\r\n    const gameWidth = 1274;\r\n    const gameHeight = 739;\r\n    const isInBounds = this.player.x >= 0 && this.player.x <= gameWidth &&\r\n                      this.player.y >= 0 && this.player.y <= gameHeight;\r\n\r\n    console.log('📍 飛機位置檢查:', {\r\n      gameSize: `${gameWidth}x${gameHeight}`,\r\n      playerPosition: `${this.player.x}, ${this.player.y}`,\r\n      isInBounds: isInBounds,\r\n      distanceFromLeft: this.player.x,\r\n      distanceFromTop: this.player.y\r\n    });\r\n  }\r\n\r\n  private createClouds() {\r\n    this.clouds = this.physics.add.group();\r\n    console.log('☁️ 創建雲朵群組');\r\n\r\n    // 檢查物理世界狀態\r\n    console.log('🌍 物理世界狀態:', {\r\n      gravity: this.physics.world.gravity,\r\n      bounds: this.physics.world.bounds,\r\n      isPaused: this.physics.world.isPaused\r\n    });\r\n\r\n    // 強制確保物理世界運行\r\n    if (this.physics.world.isPaused) {\r\n      console.log('⚡ 物理世界已暫停，強制恢復');\r\n      this.physics.world.resume();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建完整的遊戲 HUD\r\n   */\r\n  private createGameHUD(): void {\r\n    console.log('📊 創建遊戲 HUD (已擴展目標詞彙顯示)');\r\n\r\n    // 🔧 重新調整左上角文字佈局，平均分佈填補生命值空間\r\n\r\n    // 分數顯示（保持原位置）\r\n    this.scoreText = this.add.text(16, 16, '分數: 0', {\r\n      fontSize: '24px',\r\n      color: '#000000',  // 黑色文字適應白色背景\r\n      backgroundColor: '#f8f9fa',  // 淺灰背景提供對比\r\n      padding: { x: 8, y: 4 }\r\n    }).setDepth(100);\r\n\r\n    // 準確率顯示（移到原生命值位置）\r\n    this.accuracyText = this.add.text(16, 50, '準確率: 0%', {\r\n      fontSize: '20px',  // 🔧 稍微增大字體填補空間\r\n      color: '#000000',  // 黑色文字適應白色背景\r\n      backgroundColor: '#f8f9fa',  // 淺灰背景提供對比\r\n      padding: { x: 8, y: 4 }\r\n    }).setDepth(100);\r\n\r\n    // 學習詞彙數顯示（調整位置平均分佈）\r\n    this.wordsLearnedText = this.add.text(16, 84, '學習詞彙: 0', {\r\n      fontSize: '20px',  // 🔧 稍微增大字體保持一致性\r\n      color: '#000000',  // 黑色文字適應白色背景\r\n      backgroundColor: '#f8f9fa',  // 淺灰背景提供對比\r\n      padding: { x: 8, y: 4 }\r\n    }).setDepth(100);\r\n\r\n    // 🔧 血條顯示（移動到左下角）\r\n    this.healthBar = new HealthBar(this, 16, this.cameras.main.height - 60);\r\n    console.log('❤️ 血條 UI 已創建（左下角位置）');\r\n\r\n    // 目標詞彙顯示 - 完整容器尺寸版本\r\n    this.targetWordText = this.add.text(637, 20, '目標: 載入中...', {  // 🎯 完整容器寬度中央 (1274/2)\r\n      fontSize: '32px',  // 🎯 放大字體適應完整尺寸\r\n      color: '#1f2937',  // 深灰色文字適應白色背景\r\n      backgroundColor: '#fef3c7',  // 淺黃背景保持目標詞彙的突出效果\r\n      padding: { x: 16, y: 12 },  // 🎯 增加內邊距\r\n      fontStyle: 'bold'\r\n    }).setOrigin(0.5, 0).setDepth(100);\r\n\r\n    // 移除 GEPT 等級顯示（不是統一控制的元素）\r\n\r\n    // 🚀 創建全螢幕按鈕\r\n    try {\r\n      console.log('🖥️ 開始創建全螢幕按鈕...');\r\n      this.fullscreenButton = new FullscreenButton(this);\r\n      console.log('✅ 全螢幕按鈕已創建（右下角位置）');\r\n    } catch (error) {\r\n      console.error('❌ 全螢幕按鈕創建失敗:', error);\r\n      // 不拋出錯誤，讓遊戲繼續運行\r\n    }\r\n\r\n    // 📝 註冊所有 UI 元素到響應式管理器\r\n    this.registerUIElementsToResponsiveManager();\r\n  }\r\n\r\n  /**\r\n   * 註冊 UI 元素到響應式管理器\r\n   */\r\n  private registerUIElementsToResponsiveManager(): void {\r\n    // 註冊分數顯示\r\n    this.responsiveManager.registerElement('scoreText', this.scoreText, 'ui', {\r\n      anchor: { x: 0, y: 0 }, // 左上角錨點\r\n      constraints: { fixedPosition: false }\r\n    });\r\n\r\n    // 註冊準確率顯示\r\n    this.responsiveManager.registerElement('accuracyText', this.accuracyText, 'ui', {\r\n      anchor: { x: 0, y: 0 }, // 左上角錨點\r\n      constraints: { fixedPosition: false }\r\n    });\r\n\r\n    // 註冊學習詞彙數顯示\r\n    this.responsiveManager.registerElement('wordsLearnedText', this.wordsLearnedText, 'ui', {\r\n      anchor: { x: 0, y: 0 }, // 左上角錨點\r\n      constraints: { fixedPosition: false }\r\n    });\r\n\r\n    // 註冊血條\r\n    this.responsiveManager.registerElement('healthBar', this.healthBar.getContainer(), 'ui', {\r\n      anchor: { x: 0, y: 1 }, // 左下角錨點\r\n      constraints: { fixedPosition: false }\r\n    });\r\n\r\n    // 註冊目標詞彙顯示\r\n    this.responsiveManager.registerElement('targetWordText', this.targetWordText, 'ui', {\r\n      anchor: { x: 0.5, y: 0 }, // 頂部中央錨點\r\n      constraints: { fixedPosition: false }\r\n    });\r\n\r\n    console.log('📝 所有 UI 元素已註冊到響應式管理器');\r\n  }\r\n\r\n  /**\r\n   * 註冊背景層到響應式管理器\r\n   */\r\n  private registerBackgroundLayersToResponsiveManager(): void {\r\n    this.backgroundLayers.forEach((layer, index) => {\r\n      this.responsiveManager.registerElement(`backgroundLayer_${index}`, layer, 'background', {\r\n        anchor: { x: 0, y: 0 }, // 左上角錨點\r\n        constraints: {\r\n          keepAspectRatio: true,\r\n          minScale: 0.5,\r\n          maxScale: 2.0\r\n        }\r\n      });\r\n    });\r\n\r\n    console.log(`📝 ${this.backgroundLayers.length} 個背景層已註冊到響應式管理器`);\r\n  }\r\n\r\n  private setupInput() {\r\n    this.cursors = this.input.keyboard!.createCursorKeys();\r\n\r\n    // WASD 控制\r\n    const wasd = this.input.keyboard!.addKeys('W,S,A,D');\r\n    (this as any).wasd = wasd;\r\n\r\n    // 🖱️ 添加觸碰和滑鼠控制\r\n    this.setupTouchAndMouseControls();\r\n\r\n    console.log('🎮 設置輸入控制（鍵盤 + 觸碰 + 滑鼠）');\r\n  }\r\n\r\n  /**\r\n   * 設置觸碰和滑鼠控制\r\n   */\r\n  private setupTouchAndMouseControls(): void {\r\n    console.log('👆 設置觸碰和滑鼠控制');\r\n\r\n    // 添加觸碰/滑鼠控制變數\r\n    (this as any).touchControl = {\r\n      isPressed: false,\r\n      moveUp: false,\r\n      moveDown: false\r\n    };\r\n\r\n    // 監聽指針按下事件（滑鼠左鍵或觸碰）\r\n    this.input.on('pointerdown', (pointer: Phaser.Input.Pointer) => {\r\n      // 只在遊戲進行中響應控制\r\n      if (!this.gameState.isPlaying || this.gameState.isPaused || this.showStartScreen) {\r\n        return;\r\n      }\r\n\r\n      const touchControl = (this as any).touchControl;\r\n      touchControl.isPressed = true;\r\n\r\n      // 根據點擊位置決定移動方向\r\n      const gameHeight = 739; // 遊戲容器高度\r\n      const centerY = gameHeight / 2;\r\n\r\n      if (pointer.y < centerY) {\r\n        // 點擊上半部分 - 向上移動\r\n        touchControl.moveUp = true;\r\n        touchControl.moveDown = false;\r\n        console.log('👆 觸碰控制：向上移動');\r\n      } else {\r\n        // 點擊下半部分 - 向下移動\r\n        touchControl.moveUp = false;\r\n        touchControl.moveDown = true;\r\n        console.log('👇 觸碰控制：向下移動');\r\n      }\r\n    });\r\n\r\n    // 監聽指針釋放事件\r\n    this.input.on('pointerup', () => {\r\n      const touchControl = (this as any).touchControl;\r\n      touchControl.isPressed = false;\r\n      touchControl.moveUp = false;\r\n      touchControl.moveDown = false;\r\n      console.log('✋ 觸碰控制：停止移動');\r\n    });\r\n\r\n    // 監聽指針移出遊戲區域\r\n    this.input.on('pointerout', () => {\r\n      const touchControl = (this as any).touchControl;\r\n      touchControl.isPressed = false;\r\n      touchControl.moveUp = false;\r\n      touchControl.moveDown = false;\r\n      console.log('🚫 觸碰控制：指針移出，停止移動');\r\n    });\r\n\r\n    console.log('✅ 觸碰和滑鼠控制設置完成');\r\n    console.log('📱 使用方法：');\r\n    console.log('  - 點擊/觸碰畫面上半部分：飛機向上移動');\r\n    console.log('  - 點擊/觸碰畫面下半部分：飛機向下移動');\r\n    console.log('  - 釋放滑鼠/手指：停止移動');\r\n  }\r\n\r\n  /**\r\n   * 設置物理碰撞系統\r\n   */\r\n  private setupPhysics(): void {\r\n    console.log('⚡ 設置物理碰撞 (已移除子彈碰撞，修改玩家碰撞)');\r\n\r\n    // 玩家與雲朵碰撞 - 使用完整的碰撞檢測系統\r\n    this.physics.add.overlap(\r\n      this.player,\r\n      this.clouds,\r\n      this.handleAdvancedCollision,\r\n      undefined,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 設置隨機目標詞彙\r\n   */\r\n  private setRandomTargetWord(): void {\r\n    // 從 GEPT 管理器獲取詞彙\r\n    const randomWord = this.geptManager.getRandomWord();\r\n    this.currentTargetWord = randomWord || undefined;\r\n    this.gameState.currentTargetWord = this.currentTargetWord;\r\n    this.targetWordSetTime = Date.now();\r\n\r\n    if (this.targetWordText && this.currentTargetWord) {\r\n      this.targetWordText.setText(`目標: ${this.currentTargetWord.chinese} (${this.currentTargetWord.english})`);\r\n\r\n      // 更新碰撞檢測系統的目標詞彙\r\n      this.collisionSystem.setTargetWord(\r\n        this.currentTargetWord.english,\r\n        this.currentTargetWord.chinese\r\n      );\r\n\r\n      // 更新雙語管理器的目標詞彙\r\n      this.bilingualManager.updateTargetWord(this.currentTargetWord.english);\r\n\r\n      // 更新中文 UI 管理器的目標詞彙\r\n      this.chineseUIManager.updateTargetWord(this.currentTargetWord);\r\n\r\n      console.log('🎯 設置目標詞彙:', this.currentTargetWord.english);\r\n    }\r\n  }\r\n\r\n  private startCloudSpawning() {\r\n    this.cloudSpawnTimer = this.time.addEvent({\r\n      delay: 2000,\r\n      callback: this.spawnCloud,\r\n      callbackScope: this,\r\n      loop: true\r\n    });\r\n    console.log('☁️ 開始雲朵生成 - 每 2 秒生成一個雲朵');\r\n    console.log('🎮 遊戲狀態:', this.gameState);\r\n\r\n    // 立即生成第一個雲朵進行測試\r\n    this.time.delayedCall(500, () => {\r\n      console.log('🧪 測試：立即生成第一個雲朵');\r\n      this.spawnCloud();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 生成詞彙雲朵 (修復版本)\r\n   */\r\n  private spawnCloud(): void {\r\n    console.log('🔄 嘗試生成雲朵...');\r\n    console.log('🎮 遊戲狀態 isPlaying:', this.gameState.isPlaying);\r\n\r\n    if (!this.gameState.isPlaying) {\r\n      console.log('❌ 遊戲未在進行中，跳過雲朵生成');\r\n      return;\r\n    }\r\n\r\n    // 從 GEPT 管理器獲取隨機詞彙\r\n    const word = this.geptManager.getRandomWord();\r\n    console.log('📝 獲取詞彙:', word);\r\n\r\n    if (!word) {\r\n      console.log('❌ 無法獲取詞彙，跳過雲朵生成');\r\n      return;\r\n    }\r\n\r\n    const x = 1350;  // 🎯 從最右邊邊界開始 (Wordwall 寬度 1274 + 邊距)\r\n    const y = Phaser.Math.Between(100, 639);  // 🎯 Wordwall 高度 739 - 100 像素\r\n\r\n    // 創建雲朵精靈 (使用備用紋理如果主圖片載入失敗)\r\n    const cloudTexture = this.useBackupCloudTexture ? 'cloud-word-fallback' : 'cloud-word';\r\n    const cloud = this.physics.add.image(x, y, cloudTexture);\r\n\r\n    console.log('☁️ 使用雲朵紋理:', cloudTexture, '位置:', x, y);\r\n\r\n    // 🔧 設定雲朵大小 (增加 44% = 1.2 * 1.2)\r\n    cloud.setScale(1.44);\r\n\r\n    // 🔧 強制確保物理體正確設定\r\n    if (!cloud.body) {\r\n      console.log('❌ 雲朵沒有物理體，強制啟用物理');\r\n      this.physics.world.enable(cloud);\r\n    }\r\n\r\n    // 設定速度 - 使用多種方法確保生效\r\n    cloud.setVelocityX(-200); // 方法1: 直接設定\r\n    if (cloud.body) {\r\n      cloud.body.setVelocityX(-200); // 方法2: 通過 body 設定\r\n      cloud.body.velocity.x = -200;  // 方法3: 直接設定 velocity 屬性\r\n    }\r\n\r\n    // 調試：檢查物理屬性\r\n    console.log('🔧 雲朵物理屬性 (修復後):', {\r\n      hasBody: !!cloud.body,\r\n      velocity: cloud.body?.velocity,\r\n      velocityX: cloud.body?.velocity?.x,\r\n      position: { x: cloud.x, y: cloud.y },\r\n      bodyType: cloud.body?.constructor.name\r\n    });\r\n    cloud.setData('word', word);\r\n    cloud.setData('isTarget', word.english === this.currentTargetWord?.english);\r\n    cloud.setDepth(110); // 🌍 確保在地球(depth=100)上方\r\n    cloud.setAlpha(1); // 確保不透明\r\n    cloud.setVisible(true); // 確保可見\r\n\r\n    // 添加詞彙文字 (增加 44% = 16px * 1.44 ≈ 23px)\r\n    // 🔧 修復白色閃爍：使用透明背景而不是白色背景\r\n    const isTarget = word.english === this.currentTargetWord?.english;\r\n    const wordText = this.add.text(x, y, word.english, {\r\n      fontSize: '23px',\r\n      color: isTarget ? '#ff0000' : '#000000',\r\n      fontStyle: isTarget ? 'bold' : 'normal',\r\n      backgroundColor: isTarget ? '#ffff00' : 'rgba(255, 255, 255, 0.8)', // 半透明白色而不是純白色\r\n      padding: { x: 6, y: 3 }\r\n    }).setOrigin(0.5);\r\n\r\n    wordText.setDepth(111); // 🌍 文字在雲朵(depth=110)之上，也在地球(depth=100)上方\r\n    wordText.setAlpha(1);\r\n    wordText.setVisible(true);\r\n\r\n    // 將文字綁定到雲朵\r\n    cloud.setData('wordText', wordText);\r\n\r\n    // 📝 註冊雲朵和文字到響應式管理器\r\n    const cloudId = `cloud_${Date.now()}_${Math.random()}`;\r\n    const textId = `cloudText_${Date.now()}_${Math.random()}`;\r\n\r\n    this.responsiveManager.registerElement(cloudId, cloud, 'gameObject', {\r\n      constraints: {\r\n        keepAspectRatio: true,\r\n        minScale: 0.8,\r\n        maxScale: 2.0\r\n      }\r\n    });\r\n\r\n    this.responsiveManager.registerElement(textId, wordText, 'text', {\r\n      constraints: {\r\n        keepAspectRatio: true,\r\n        minScale: 0.6,\r\n        maxScale: 1.8\r\n      }\r\n    });\r\n\r\n    // 如果是目標詞彙，顯示中文提示\r\n    if (isTarget && this.bilingualManager) {\r\n      this.bilingualManager.showChinesePrompt(word.english, { x: x, y: y - 60 });\r\n    }\r\n\r\n    // 🔧 在添加到群組前再次確認速度\r\n    console.log('🔧 添加到群組前的速度:', cloud.body?.velocity?.x);\r\n\r\n    this.clouds.add(cloud);\r\n\r\n    // 🔧 添加到群組後檢查速度是否被重置\r\n    console.log('🔧 添加到群組後的速度:', cloud.body?.velocity?.x);\r\n\r\n    // 🚀 強制重新設定速度（防止群組重置）\r\n    if (cloud.body?.velocity?.x !== -200) {\r\n      console.log('⚠️ 速度被重置，強制恢復');\r\n      cloud.setVelocityX(-200);\r\n      cloud.body.velocity.x = -200;\r\n    }\r\n\r\n    console.log('☁️ 生成雲朵 (修復版本):', word.english, isTarget ? '(目標)' : '', {\r\n      cloudVisible: cloud.visible,\r\n      textVisible: wordText.visible,\r\n      cloudDepth: cloud.depth,\r\n      textDepth: wordText.depth\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 強制生成測試雲朵（用於調試）\r\n   */\r\n  private forceSpawnTestCloud(): void {\r\n    console.log('🧪 強制生成測試雲朵 - 開始');\r\n\r\n    // 創建簡單的測試雲朵\r\n    const x = 1000;  // 更靠左，確保在螢幕內可見\r\n    const y = 300;   // 中間位置\r\n\r\n    // 使用備用紋理如果主圖片載入失敗\r\n    const cloudTexture = this.useBackupCloudTexture ? 'cloud-word-fallback' : 'cloud-word';\r\n    const testCloud = this.physics.add.image(x, y, cloudTexture);\r\n\r\n    // 🔧 強制確保測試雲朵物理體正確設定\r\n    if (!testCloud.body) {\r\n      console.log('❌ 測試雲朵沒有物理體，強制啟用物理');\r\n      this.physics.world.enable(testCloud);\r\n    }\r\n\r\n    // 設定速度 - 使用多種方法確保生效\r\n    testCloud.setVelocityX(-150); // 方法1: 直接設定\r\n    if (testCloud.body) {\r\n      testCloud.body.setVelocityX(-150); // 方法2: 通過 body 設定\r\n      testCloud.body.velocity.x = -150;  // 方法3: 直接設定 velocity 屬性\r\n    }\r\n\r\n    testCloud.setDepth(10); // 最高深度\r\n    testCloud.setAlpha(1);\r\n    testCloud.setVisible(true);\r\n    testCloud.setTint(0xff0000); // 紅色，容易識別\r\n\r\n    console.log('🧪 測試雲朵使用紋理:', cloudTexture);\r\n    console.log('🧪 測試雲朵物理屬性:', {\r\n      hasBody: !!testCloud.body,\r\n      velocity: testCloud.body?.velocity,\r\n      velocityX: testCloud.body?.velocity?.x\r\n    });\r\n\r\n    // 添加測試文字\r\n    const testText = this.add.text(x, y, 'TEST', {\r\n      fontSize: '20px',\r\n      color: '#ffffff',  // 白色文字在紅色背景上保持可見\r\n      fontStyle: 'bold',\r\n      backgroundColor: '#dc2626',  // 紅色背景保持測試標識\r\n      padding: { x: 8, y: 4 }\r\n    }).setOrigin(0.5);\r\n\r\n    testText.setDepth(11);\r\n    testText.setAlpha(1);\r\n    testText.setVisible(true);\r\n\r\n    // 綁定文字到雲朵\r\n    testCloud.setData('wordText', testText);\r\n    testCloud.setData('word', { english: 'test', chinese: '測試' });\r\n    testCloud.setData('isTarget', false);\r\n\r\n    // 🔧 在添加到群組前再次確認測試雲朵速度\r\n    console.log('🧪 添加到群組前的測試雲朵速度:', testCloud.body?.velocity?.x);\r\n\r\n    this.clouds.add(testCloud);\r\n\r\n    // 🔧 添加到群組後檢查測試雲朵速度是否被重置\r\n    console.log('🧪 添加到群組後的測試雲朵速度:', testCloud.body?.velocity?.x);\r\n\r\n    // 🚀 強制重新設定測試雲朵速度（防止群組重置）\r\n    if (testCloud.body?.velocity?.x !== -150) {\r\n      console.log('⚠️ 測試雲朵速度被重置，強制恢復');\r\n      testCloud.setVelocityX(-150);\r\n      testCloud.body.velocity.x = -150;\r\n    }\r\n\r\n    console.log('🧪 測試雲朵已生成:', {\r\n      x: x,\r\n      y: y,\r\n      visible: testCloud.visible,\r\n      depth: testCloud.depth,\r\n      velocity: testCloud.body?.velocity\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 創建簡單的測試物件\r\n   */\r\n  private createSimpleTestObject(): void {\r\n    console.log('🔴 創建簡單紅色方塊');\r\n\r\n    const testRect = this.add.rectangle(600, 200, 50, 50, 0xff0000);\r\n    testRect.setDepth(20);\r\n    testRect.setAlpha(1);\r\n    testRect.setVisible(true);\r\n\r\n    // 添加移動動畫\r\n    this.tweens.add({\r\n      targets: testRect,\r\n      x: 100,\r\n      duration: 3000,\r\n      ease: 'Linear'\r\n    });\r\n\r\n    console.log('🔴 紅色方塊已創建:', {\r\n      x: testRect.x,\r\n      y: testRect.y,\r\n      visible: testRect.visible,\r\n      depth: testRect.depth\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 處理高級碰撞檢測\r\n   */\r\n  private handleAdvancedCollision(player: any, cloud: any): void {\r\n    // 🎯 防止重複碰撞：如果遊戲已結束或暫停，忽略碰撞\r\n    if (!this.gameState.isPlaying || this.gameState.isPaused) {\r\n      return;\r\n    }\r\n\r\n    const word: GEPTWord = cloud.getData('word');\r\n    const isTarget: boolean = cloud.getData('isTarget');\r\n    const wordText = cloud.getData('wordText');\r\n\r\n    // 🎯 防止重複碰撞：檢查雲朵是否已被處理\r\n    if (cloud.getData('processed')) {\r\n      return;\r\n    }\r\n\r\n    // 標記雲朵為已處理\r\n    cloud.setData('processed', true);\r\n\r\n    // 使用碰撞檢測系統處理碰撞\r\n    const collisionEvent = this.collisionSystem.handleCollision(player, cloud, word);\r\n\r\n    // 記錄學習事件到記憶增強引擎\r\n    const learningEvent: LearningEvent = {\r\n      wordId: word.id,\r\n      word: word.english,\r\n      timestamp: Date.now(),\r\n      responseTime: Date.now() - this.targetWordSetTime,\r\n      isCorrect: collisionEvent.type === 'correct',\r\n      attemptNumber: this.totalCollisions + 1,\r\n      contextData: {\r\n        targetWord: this.currentTargetWord?.english,\r\n        geptLevel: this.gameConfig.geptLevel,\r\n        gameMode: this.gameConfig.gameMode\r\n      }\r\n    };\r\n\r\n    this.memoryEngine.recordLearningEvent(learningEvent);\r\n\r\n    // 更新統計\r\n    this.totalCollisions++;\r\n    if (collisionEvent.type === 'correct') {\r\n      this.correctCollisions++;\r\n      this.gameState.currentScore += 10;\r\n      this.gameState.wordsLearned++;\r\n\r\n      // 顯示成功提示\r\n      if (this.chineseUIManager) {\r\n        this.chineseUIManager.showSuccessMessage(word, 10);\r\n      }\r\n\r\n      // 隱藏中文提示\r\n      if (this.bilingualManager) {\r\n        this.bilingualManager.hideChinesePrompt();\r\n      }\r\n\r\n      // 設置新的目標詞彙\r\n      this.setRandomTargetWord();\r\n\r\n      console.log('✅ 正確碰撞:', word.english);\r\n    } else {\r\n      // 🎯 追蹤錯誤次數\r\n      this.wrongCollisions++;\r\n\r\n      console.log('❌ 錯誤碰撞:', word.english, `(第${this.wrongCollisions}次錯誤)`);\r\n\r\n      // 🎯 第5次錯誤：分數歸零後立即結束遊戲\r\n      if (this.wrongCollisions >= 5) {\r\n        console.log('💥 第5次錯誤！分數歸零後結束遊戲');\r\n\r\n        // 立即停止遊戲狀態，防止更多碰撞\r\n        this.gameState.isPlaying = false;\r\n\r\n        // 先將分數歸零\r\n        this.gameState.currentScore = 0;\r\n        this.updateUI(); // 立即更新UI顯示分數歸零\r\n\r\n        // 顯示特殊提示\r\n        if (this.chineseUIManager) {\r\n          this.chineseUIManager.showErrorMessage(\r\n            { english: 'GAME OVER', chinese: '遊戲結束' } as GEPTWord,\r\n            0\r\n          );\r\n        }\r\n\r\n        // 🔧 修復白色閃爍：使用淡出動畫移除雲朵和文字\r\n        this.removeCloudWithAnimation(cloud, wordText);\r\n\r\n        // 延遲1秒後結束遊戲，讓玩家看到分數歸零\r\n        this.time.delayedCall(1000, () => {\r\n          this.endGame();\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 普通錯誤：減少生命值\r\n      this.gameState.currentHealth -= 20;\r\n\r\n      // 顯示錯誤提示\r\n      if (this.chineseUIManager) {\r\n        this.chineseUIManager.showErrorMessage(word, 20);\r\n      }\r\n\r\n      // 普通錯誤：檢查生命值\r\n      if (this.gameState.currentHealth <= 0) {\r\n        // 🔧 修復白色閃爍：使用淡出動畫移除雲朵和文字\r\n        this.removeCloudWithAnimation(cloud, wordText);\r\n\r\n        this.endGame();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 🔧 修復白色閃爍：使用淡出動畫移除雲朵和文字\r\n    this.removeCloudWithAnimation(cloud, wordText);\r\n\r\n    // 更新 UI 和統計\r\n    this.updateGameStats();\r\n    this.updateUI();\r\n\r\n    // 向父頁面發送更新\r\n    this.sendMessageToParent({\r\n      type: 'GAME_SCORE_UPDATE',\r\n      score: this.gameState.currentScore,\r\n      health: this.gameState.currentHealth\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 更新遊戲統計\r\n   */\r\n  private updateGameStats(): void {\r\n    // 計算準確率\r\n    this.gameState.accuracy = this.totalCollisions > 0\r\n      ? Math.round((this.correctCollisions / this.totalCollisions) * 100)\r\n      : 0;\r\n  }\r\n\r\n  /**\r\n   * 更新 UI 顯示\r\n   */\r\n  private updateUI(): void {\r\n    this.scoreText.setText(`分數: ${this.gameState.currentScore}`);\r\n    // 🔧 使用血條更新生命值顯示\r\n    this.healthBar.updateHealth(this.gameState.currentHealth, true);\r\n    this.accuracyText.setText(`準確率: ${this.gameState.accuracy}%`);\r\n    this.wordsLearnedText.setText(`學習詞彙: ${this.gameState.wordsLearned}`);\r\n\r\n    console.log('📊 更新 HUD:', {\r\n      分數: this.gameState.currentScore,\r\n      生命值: this.gameState.currentHealth,\r\n      準確率: this.gameState.accuracy,\r\n      學習詞彙: this.gameState.wordsLearned\r\n    });\r\n  }\r\n\r\n  private startGame() {\r\n    this.gameState.isPlaying = true;\r\n    this.gameState.isPaused = false;\r\n\r\n    // 🎯 重置遊戲統計（包括錯誤次數）\r\n    this.totalCollisions = 0;\r\n    this.correctCollisions = 0;\r\n    this.wrongCollisions = 0;\r\n\r\n    console.log('🚀 遊戲開始（錯誤次數已重置）');\r\n\r\n    // 開始雲朵生成\r\n    this.startCloudSpawning();\r\n\r\n    this.sendMessageToParent({\r\n      type: 'GAME_STATE_CHANGE',\r\n      state: 'playing'\r\n    });\r\n  }\r\n\r\n  private endGame() {\r\n    this.gameState.isPlaying = false;\r\n\r\n    // 🎯 遊戲結束時生命值歸零\r\n    this.gameState.currentHealth = 0;\r\n\r\n    // 立即更新UI顯示生命值為0\r\n    this.updateUI();\r\n\r\n    console.log('🏁 遊戲結束 - 生命值歸零');\r\n\r\n    // 停止雲朵生成\r\n    if (this.cloudSpawnTimer) {\r\n      this.cloudSpawnTimer.destroy();\r\n    }\r\n\r\n    // 🔧 修復白色閃爍：漸進式清理雲朵而不是瞬間清空\r\n    this.clearCloudsGradually();\r\n\r\n    this.sendMessageToParent({\r\n      type: 'GAME_COMPLETE',\r\n      score: this.gameState.currentScore,\r\n      health: this.gameState.currentHealth  // 現在會是0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 漸進式清理雲朵，防止白色閃爍\r\n   */\r\n  private clearCloudsGradually(): void {\r\n    console.log('🌤️ 開始漸進式清理雲朵，防止白色閃爍');\r\n\r\n    const clouds = this.clouds.children.entries;\r\n    if (clouds.length === 0) {\r\n      console.log('✅ 沒有雲朵需要清理');\r\n      return;\r\n    }\r\n\r\n    // 為每個雲朵添加淡出動畫\r\n    clouds.forEach((cloud: any, index: number) => {\r\n      this.tweens.add({\r\n        targets: cloud,\r\n        alpha: 0,\r\n        scale: 0.5,\r\n        duration: 300,\r\n        delay: index * 50, // 錯開動畫時間\r\n        ease: 'Power2',\r\n        onComplete: () => {\r\n          if (cloud && cloud.active) {\r\n            cloud.destroy();\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // 延遲清理群組，確保所有動畫完成\r\n    this.time.delayedCall(1000, () => {\r\n      this.clouds.clear(false, false); // 不銷毀子物件，因為已經在動畫中銷毀\r\n      console.log('✅ 雲朵漸進式清理完成');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 使用動畫移除單個雲朵，防止白色閃爍\r\n   */\r\n  private removeCloudWithAnimation(cloud: any, wordText?: any): void {\r\n    console.log('🌤️ 使用淡出動畫移除雲朵');\r\n\r\n    // 🔧 修復白色閃爍：先處理文字，確保白色背景不會造成閃爍\r\n    if (wordText && wordText.active) {\r\n      // 文字立即開始淡出，比雲朵稍快\r\n      this.tweens.add({\r\n        targets: wordText,\r\n        alpha: 0,\r\n        scale: 0.2,\r\n        duration: 150, // 比雲朵快50ms\r\n        ease: 'Power2',\r\n        onComplete: () => {\r\n          if (wordText && wordText.active) {\r\n            wordText.destroy();\r\n            console.log('✅ 文字已銷毀');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // 雲朵稍後開始淡出\r\n    this.tweens.add({\r\n      targets: cloud,\r\n      alpha: 0,\r\n      scale: 0.3,\r\n      duration: 200,\r\n      delay: 50, // 延遲50ms，確保文字先開始淡出\r\n      ease: 'Power2',\r\n      onComplete: () => {\r\n        if (cloud && cloud.active) {\r\n          cloud.destroy();\r\n          console.log('✅ 雲朵已銷毀');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private sendMessageToParent(message: ParentMessage) {\r\n    if (window.parent !== window) {\r\n      window.parent.postMessage(message, '*');\r\n    }\r\n  }\r\n\r\n  update(_time: number, _delta: number): void {\r\n    if (!this.gameState.isPlaying || this.gameState.isPaused) return;\r\n\r\n    // 更新視差背景\r\n    this.updateParallaxBackground();\r\n\r\n    // 玩家移動控制\r\n    this.handlePlayerMovement();\r\n\r\n    // 更新雲朵位置和清理\r\n    this.updateClouds();\r\n\r\n    // 太空船脈動效果已通過 Tween 自動處理\r\n\r\n    // 更新中文 UI 系統\r\n    this.updateChineseUI();\r\n\r\n    // 清理超出邊界的物件\r\n    this.cleanupObjects();\r\n  }\r\n\r\n  /**\r\n   * 更新月亮主題視差背景\r\n   */\r\n  private updateParallaxBackground(): void {\r\n    // 移動背景層創造視差效果\r\n    this.backgroundLayers.forEach((layer, index) => {\r\n      // 不同層有不同的移動速度，創造深度感\r\n      const speed = (index + 1) * 0.3; // 減慢速度讓效果更自然\r\n      layer.tilePositionX += speed;\r\n    });\r\n\r\n    // 輸出視差背景更新日誌（與 main 版本一致）\r\n    console.log('🌌 更新視差背景');\r\n  }\r\n\r\n  /**\r\n   * 更新中文 UI 系統\r\n   */\r\n  private updateChineseUI(): void {\r\n    if (this.chineseUIManager) {\r\n      // 更新分數顯示\r\n      this.chineseUIManager.updateScore(this.gameState.currentScore);\r\n\r\n      // 更新生命值顯示\r\n      this.chineseUIManager.updateLives(this.gameState.currentHealth);\r\n\r\n      // 更新遊戲狀態\r\n      const status = this.gameState.isPlaying ? 'playing' :\r\n                    this.gameState.isPaused ? 'paused' : 'waiting';\r\n      this.chineseUIManager.updateGameStatus(status);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 處理玩家移動 - 只允許上下移動（鍵盤 + 觸碰 + 滑鼠）\r\n   */\r\n  private handlePlayerMovement(): void {\r\n    const speed = 250;\r\n    const wasd = (this as any).wasd;\r\n    const touchControl = (this as any).touchControl;\r\n\r\n    // 🚫 移除左右移動控制，飛機只能上下移動\r\n    // 保持飛機在水平位置固定\r\n    this.player.setVelocityX(0);\r\n\r\n    // ✅ 整合所有控制方式：鍵盤 + 觸碰 + 滑鼠\r\n    const moveUp = this.cursors.up.isDown || wasd?.W.isDown || touchControl?.moveUp;\r\n    const moveDown = this.cursors.down.isDown || wasd?.S.isDown || touchControl?.moveDown;\r\n\r\n    if (moveUp) {\r\n      this.player.setVelocityY(-speed);\r\n    } else if (moveDown) {\r\n      this.player.setVelocityY(speed);\r\n    } else {\r\n      this.player.setVelocityY(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建引擎火焰效果 - 只有引擎部分動畫\r\n   */\r\n  private createEngineFlameEffect(): void {\r\n    console.log('🔥 創建引擎火焰效果');\r\n\r\n    // 計算引擎火焰位置（太空船後方）\r\n    const flameX = this.player.x;\r\n    const flameY = this.player.y + 30; // 太空船後方位置\r\n\r\n    // 使用簡單的動畫精靈作為引擎火焰\r\n    const engineFlame = this.add.sprite(flameX, flameY, 'cloud');\r\n    engineFlame.setScale(0.3);\r\n    engineFlame.setTint(0xff6600); // 橙色火焰\r\n    engineFlame.setDepth(this.player.depth - 1);\r\n\r\n    // 創建火焰閃爍動畫\r\n    this.tweens.add({\r\n      targets: engineFlame,\r\n      alpha: { from: 0.8, to: 0.3 },\r\n      scaleX: { from: 0.3, to: 0.4 },\r\n      scaleY: { from: 0.3, to: 0.4 },\r\n      duration: 150,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: 'Sine.easeInOut'\r\n    });\r\n\r\n    console.log('🔥 引擎火焰效果創建完成');\r\n  }\r\n\r\n  /**\r\n   * 清理超出邊界的物件\r\n   */\r\n  private cleanupObjects(): void {\r\n    this.clouds.children.entries.forEach((cloud: any) => {\r\n      if (cloud.x < -100) {\r\n        const wordText = cloud.getData('wordText');\r\n        if (wordText) wordText.destroy();\r\n        cloud.destroy();\r\n      } else {\r\n        // 更新文字位置\r\n        const wordText = cloud.getData('wordText');\r\n        if (wordText) {\r\n          wordText.setPosition(cloud.x, cloud.y);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"names":["BilingualManager","constructor","scene","geptManager","__publicField","this","Map","config","getDefaultConfig","state","getInitialState","accessibilitySettings","getDefaultAccessibilitySettings","initializePromptUI","console","log","position","style","fontSize","fontFamily","color","backgroundColor","padding","x","y","borderRadius","border","animation","fadeIn","duration","ease","fadeOut","bounce","amplitude","isVisible","currentWord","displayMode","lastUpdateTime","contrast","enableVoice","enableKeyboardNav","screenReaderMode","scale","width","height","promptContainer","add","container","setDepth","backgroundRect","rectangle","setStrokeStyle","chineseText","text","align","fontStyle","setOrigin","englishText","updatePromptPosition","setVisible","setAlpha","gameWidth","gameHeight","setPosition","showChinesePrompt","englishWord","targetPosition","word","getWordFromCache","Date","now","setText","chinese","english","adjustBackgroundSize","playShowAnimation","warn","hideChinesePrompt","playHideAnimation","updateTargetWord","wordCache","has","get","findWordByEnglish","set","translationCache","textBounds","getBounds","Math","max","setSize","tweens","targets","alpha","onComplete","playBounceAnimation","originalY","yoyo","repeat","setDisplayMode","mode","applyAccessibilitySettings","settings","updateFontSize","updateContrast","small","medium","large","setFontSize","colors","normal","bg","high","reverse","setFillStyle","setColor","getChineseTranslation","destroy","clear","getState","getStatistics","cacheSize","size","translationCacheSize","currentLevel","getCurrentLevel","ChineseUIManager","bilingualManager","uiElements","initializeUIElements","textConfig","getDefaultTextConfig","createChineseHUD","scoreText","livesText","targetText","statusText","instructionText","stroke","strokeThickness","shadow","offsetX","offsetY","blur","fill","createTargetDisplay","targetContainer","setInteractive","on","currentTarget","speakEnglish","getTextStyle","updateScore","score","currentScore","updateLives","lives","currentLives","speakChinese","updateGameStatus","status","gameStatus","showSuccessMessage","points","successText","scaleX","scaleY","showErrorMessage","penalty","errorText","updateAllFontSizes","updateAllContrast","Object","values","forEach","element","setStroke","visible","hudContainer","window","utterance","SpeechSynthesisUtterance","lang","rate","volume","speechSynthesis","speak","target","keys","key","PerformanceMonitor","recordUpdate","updateCount","totalUpdateTime","performance","memory","memoryUsage","push","usedJSHeapSize","length","shift","lastReportTime","reportPerformance","avgUpdateTime","avgMemory","reduce","a","b","toFixed","getMemoryTrend","recent","slice","older","diff","getStats","_ResponsiveManager","DEFAULT_CONFIG","performanceMonitor","currentViewport","calculateViewportInfo","setupEventListeners","startPeriodicCleanup","baseSize","baseWidth","baseHeight","throttleMs","error","registerElement","id","type","options","Error","includes","elements","destroyed","responsiveElement","originalX","safeGetProperty","originalScale","originalSize","anchor","constraints","keepAspectRatio","minScale","maxScale","obj","property","defaultValue","unregisterElement","delete","gameSize","displaySize","min","isFullscreen","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","deviceType","orientation","updateAllElements","animated","Promise","resolve","updateThrottleTimer","clearTimeout","setTimeout","performUpdate","then","startTime","isAnimating","newViewport","hasViewportChanged","from","to","cleanupInvalidElements","finishUpdate","enableSmoothing","animateElements","updateElementsImmediate","abs","updateSingleElement","animations","animationPromise","animateSingleElement","all","active","hasOwnProperty","newScale","elementId","viewportScale","calculatedScale","beforeConstraints","before","after","isFinite","newX","calculateNewPosition","newY","updateBackgroundElement","updateGameObjectElement","updateUIElement","updateTextElement","targetScale","targetX","targetY","animationDuration","originalPosition","axis","setScale","elementType","name","currentPosition","currentScale","newPosition","hasSetPosition","hasSetScale","parseInt","newSize","round","handleFullscreenChange","addEventListener","invalidElements","cleanupTimer","clearInterval","setInterval","getViewportInfo","forceUpdate","getPerformanceStats","elementsCount","getOptimizationSuggestions","suggestions","stats","forceGarbageCollection","gc","aspectRatio","ResponsiveManager","HealthBar","background","healthy","warning","danger","critical","createHealthBar","createHeartIcon","createHealthText","graphics","fillStyle","fillRoundedRect","barWidth","barHeight","healthBar","updateHealthBarColor","lineStyle","strokeRoundedRect","heartIcon","beginPath","heartY","arc","heartX","heartSize","PI","lineTo","closePath","fillPath","healthText","currentHealth","maxHealth","healthPercentage","healthWidth","updateHealth","health","oldHealth","animateHealthChange","updateHealthText","startCriticalHealthEffect","fromHealth","toHealth","onUpdate","tween","currentValue","killTweensOf","stopCriticalHealthEffect","getCurrentHealth","getMaxHealth","getContainer","setMaxHealth","_FullscreenButton","createButton","setupEvents","updatePosition","checkFullscreenStatus","time","delayedCall","showFeatureIntro","drawBackground","icon","drawIcon","useHandCursor","hitArea","Phaser","Geom","Rectangle","hitAreaCallback","Contains","cornerRadius","bgColor","borderColor","isPressed","backgroundActive","borderHover","isHovered","backgroundHover","moveTo","strokePath","onPointerOver","onPointerOut","onPointerDown","onPointerUp","onFullscreenChange","bind","input","keyboard","event","preventDefault","toggleFullscreen","showKeyboardHint","exitFullscreen","showInitialHint","updateVisuals","playHoverAnimation","showTooltip","playNormalAnimation","hideTooltip","playClickAnimation","hoverScale","clickScale","tooltip","tooltipText","tooltipBg","tooltipTextObj","onHover","iconHover","onOut","enterFullscreen","handleFullscreenError","documentElement","isFullscreenSupported","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","onFullscreenEnter","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","onFullscreenExit","errorMessage","errorType","recordError","message","count","errorStats","lastErrorTime","showFrequentErrorAdvice","advice","attemptRecovery","retryCount","maxRetries","resetErrorState","getErrorStats","errorTooltip","errorBg","wordWrap","refresh","triggerResponsiveUpdate","gameScene","responsiveManager","hint","hintBg","hintText","showAdvancedHints","hints","randomHint","floor","random","showSmartHints","gameStarted","analyzeUserBehavior","showTroubleshootingTips","tips","tip","intro","introBg","introTitle","introText","windowSize","innerWidth","innerHeight","removeEventListener","FullscreenButton","GameScene","Scene","super","isPlaying","isPaused","wordsLearned","accuracy","init","gameConfig","registry","geptLevel","enableSound","enableHapticFeedback","difficulty","gameMode","initializeManagers","GEPTManager","setLevel","memoryEngine","MemoryEnhancementEngine","collisionSystem","CollisionDetectionSystem","enableParticles","enableScreenShake","enableSoundEffects","enableVisualFeedback","particleIntensity","soundVolume","chineseUIManager","preload","loadMoonBackground","load","spritesheet","frameWidth","frameHeight","image","planeGraphics","fillTriangle","strokeTriangle","generateTexture","fileObj","useBackupCloudTexture","cloudGraphics","fillEllipse","strokeEllipse","starGraphics","fillCircle","createSpaceshipAnimation","textures","exists","texture","source","frameTotal","frames","anims","create","generateFrameNumbers","start","end","frameRate","createSpaceshipSprite","i","hue","Display","Color","HSVToRGB","flameIntensity","GetColor","createDynamicSprite","strokeCircle","createParallaxBackground","createPlayer","createClouds","createGameHUD","setupInput","setupPhysics","setRandomTargetWord","showStartScreen","startGame","updateClouds","cloudCount","clouds","children","entries","cloud","index","body","velocity","wordText","getData","createStartScreen","overlay","hideStartScreen","startScreen","title","instruction","lineSpacing","playButtonBg","circle","playText","Circle","startGameHandler","pointer","list","child","depth","createMoonBackgroundLayers","createStarField","backgroundLayers","hasMoonSky","hasMoonBack","hasMoonMid","hasMoonEarth","hasMoonFront","hasMoonFloor","skyLayer","tileSprite","backLayer","earthLayer","calculatedWidth","midLayer","frontLayer","floorLayer","layer1","fillGradientStyle","fillRect","layer2","fallbackLayer1","fallbackLayer2","registerBackgroundLayersToResponsiveManager","Between","star","FloatBetween","hasPlayerSpaceshipImage","hasPlayerSpaceship","hasShooterImage","hasCompleteSpaceship","hasPlayerPlane","player_spaceship_image","player_spaceship","random_shooter","complete_spaceship","player","physics","sprite","play","createEngineFlameEffect","emergencyRect","world","enable","setupSpaceshipProperties","setCollideWorldBounds","originX","originY","isInBounds","playerPosition","distanceFromLeft","distanceFromTop","group","gravity","bounds","resume","accuracyText","wordsLearnedText","cameras","main","targetWordText","fullscreenButton","registerUIElementsToResponsiveManager","fixedPosition","layer","cursors","createCursorKeys","wasd","addKeys","setupTouchAndMouseControls","touchControl","moveUp","moveDown","gameState","overlap","handleAdvancedCollision","randomWord","getRandomWord","currentTargetWord","targetWordSetTime","setTargetWord","startCloudSpawning","cloudSpawnTimer","addEvent","delay","callback","spawnCloud","callbackScope","loop","cloudTexture","setVelocityX","hasBody","velocityX","bodyType","setData","isTarget","cloudId","textId","cloudVisible","textVisible","cloudDepth","textDepth","forceSpawnTestCloud","testCloud","setTint","testText","createSimpleTestObject","testRect","collisionEvent","handleCollision","learningEvent","wordId","timestamp","responseTime","isCorrect","attemptNumber","totalCollisions","contextData","targetWord","recordLearningEvent","correctCollisions","wrongCollisions","updateUI","removeCloudWithAnimation","endGame","updateGameStats","sendMessageToParent","clearCloudsGradually","parent","postMessage","update","_time","_delta","updateParallaxBackground","handlePlayerMovement","updateChineseUI","cleanupObjects","speed","tilePositionX","up","isDown","W","down","S","setVelocityY","flameX","flameY","engineFlame"],"mappings":"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"}